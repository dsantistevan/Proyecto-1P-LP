
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND ASSIGN BOOLEAN BYTE CHAR DIVIDE DOUBLE ELSE EQUALS FALSE FLOAT FLOATV FOR FUNCTION GREATER ID IF IN INT INTV LCBRACKET LONG LOWER LPAREN LSBRACKET MINUS MODULE NOT NOTEQUALS NULL OR PLUS RCBRACKET RETURN RPAREN RSBRACKET SHORT STRING TIMES TRUE VAL VAR WHILEcuerpo : sentenciacuerpo : sentencia cuerposentencia : asignacion\n                | expresion\n                | estructuraControl\n                | bucles\n                | function\n                | llamadainstrucciones : LCBRACKET cuerpo RCBRACKET\n                | cuerpo instruccionesF : LCBRACKET cuerpo retorno RCBRACKETretorno : RETURN valor ';' estructuraControl : IF LPAREN expresion RPAREN instrucciones estructuraControl : ELSE instrucciones bucles : while instrucciones\n                | for instrucciones while : WHILE LPAREN expresion RPAREN for : FOR LPAREN ID IN ID RPAREN function : FUNCTION ID LPAREN params RPAREN instruccionesFfunction : FUNCTION ID LPAREN RPAREN instruccionesFllamada : ID LPAREN args RPAREN ';' llamada : ID LPAREN RPAREN ';' function : ID LSBRACKET valor RSBRACKETdato : INT\n            | FLOAT\n            | BYTE\n            | SHORT\n            | DOUBLE\n            | ID\n            | LONG\n            | CHAR\n            | BOOLEANparams : ID ':' dato params : params ',' paramsargs : valorargs : args ',' argsvalor : number\n            | ID\n            | STRINGvalor : TRUE\n            | FALSEvalor : NULLvalor : NOT valor declarador : VAR\n                | VALasignacion : ID ASSIGN expresion asignacion : declarador ID ASSIGN expresion declarador : VAR IDdeclarador : VAL IDexpresion : LPAREN expresion RPARENexpresion : valor expresion : expresion operadoresMat expresion expresion : expresion operadoresLog expresion operadoresLog :  OR\n                    | AND\n                    | EQUALS\n                    | NOTEQUALS\n                    | GREATER\n                    | LOWER\n                    | GREATER ASSIGN\n                    | LOWER ASSIGNoperadoresMat : MINUS\n                    | PLUS\n                    | TIMES\n                    | DIVIDE\n                    | MODULE number : INTV\n            | FLOATV "
    
_lr_action_items = {'ID':([0,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,71,72,75,78,80,81,82,83,84,88,89,90,92,93,95,96,97,109,112,114,115,],[9,9,-3,-4,-5,-6,-7,-8,-38,47,49,-51,9,9,9,56,57,58,-37,-39,-40,-41,-42,49,-67,-68,-2,49,49,-62,-63,-64,-65,-66,-54,-55,-56,-57,-58,-59,49,49,49,-38,49,-14,9,-10,-15,-16,-48,-49,-43,49,77,-52,-53,-60,-61,-46,49,-50,85,-23,49,-22,-47,9,-9,-17,98,-21,-13,99,85,-20,9,-19,-18,49,-11,]),'LPAREN':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,16,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,49,50,51,52,53,54,55,56,59,60,62,63,64,65,66,71,72,78,81,82,83,84,88,90,92,96,97,109,112,115,],[11,11,-3,-4,-5,-6,-7,-8,46,11,-51,50,11,11,11,-37,-39,-40,-41,-42,60,61,-67,-68,-2,11,11,-62,-63,-64,-65,-66,-54,-55,-56,-57,-58,-59,11,-38,11,-14,11,-10,-15,-16,75,-43,11,-52,-53,-60,-61,-46,11,-50,-23,-22,-47,11,-9,-17,-21,-13,-20,11,-19,-18,-11,]),'IF':([0,2,3,4,5,6,7,8,9,12,14,15,16,20,21,22,23,24,28,29,30,49,51,52,53,54,55,59,62,63,66,72,78,81,82,83,84,88,90,92,96,97,109,112,115,],[13,13,-3,-4,-5,-6,-7,-8,-38,-51,13,13,13,-37,-39,-40,-41,-42,-67,-68,-2,-38,-14,13,-10,-15,-16,-43,-52,-53,-46,-50,-23,-22,-47,13,-9,-17,-21,-13,-20,13,-19,-18,-11,]),'ELSE':([0,2,3,4,5,6,7,8,9,12,14,15,16,20,21,22,23,24,28,29,30,49,51,52,53,54,55,59,62,63,66,72,78,81,82,83,84,88,90,92,96,97,109,112,115,],[14,14,-3,-4,-5,-6,-7,-8,-38,-51,14,14,14,-37,-39,-40,-41,-42,-67,-68,-2,-38,-14,14,-10,-15,-16,-43,-52,-53,-46,-50,-23,-22,-47,14,-9,-17,-21,-13,-20,14,-19,-18,-11,]),'FUNCTION':([0,2,3,4,5,6,7,8,9,12,14,15,16,20,21,22,23,24,28,29,30,49,51,52,53,54,55,59,62,63,66,72,78,81,82,83,84,88,90,92,96,97,109,112,115,],[17,17,-3,-4,-5,-6,-7,-8,-38,-51,17,17,17,-37,-39,-40,-41,-42,-67,-68,-2,-38,-14,17,-10,-15,-16,-43,-52,-53,-46,-50,-23,-22,-47,17,-9,-17,-21,-13,-20,17,-19,-18,-11,]),'VAR':([0,2,3,4,5,6,7,8,9,12,14,15,16,20,21,22,23,24,28,29,30,49,51,52,53,54,55,59,62,63,66,72,78,81,82,83,84,88,90,92,96,97,109,112,115,],[18,18,-3,-4,-5,-6,-7,-8,-38,-51,18,18,18,-37,-39,-40,-41,-42,-67,-68,-2,-38,-14,18,-10,-15,-16,-43,-52,-53,-46,-50,-23,-22,-47,18,-9,-17,-21,-13,-20,18,-19,-18,-11,]),'VAL':([0,2,3,4,5,6,7,8,9,12,14,15,16,20,21,22,23,24,28,29,30,49,51,52,53,54,55,59,62,63,66,72,78,81,82,83,84,88,90,92,96,97,109,112,115,],[19,19,-3,-4,-5,-6,-7,-8,-38,-51,19,19,19,-37,-39,-40,-41,-42,-67,-68,-2,-38,-14,19,-10,-15,-16,-43,-52,-53,-46,-50,-23,-22,-47,19,-9,-17,-21,-13,-20,19,-19,-18,-11,]),'STRING':([0,2,3,4,5,6,7,8,9,11,12,14,15,16,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,52,53,54,55,59,60,62,63,64,65,66,71,72,78,80,81,82,83,84,88,90,92,96,97,109,112,114,115,],[21,21,-3,-4,-5,-6,-7,-8,-38,21,-51,21,21,21,-37,-39,-40,-41,-42,21,-67,-68,-2,21,21,-62,-63,-64,-65,-66,-54,-55,-56,-57,-58,-59,21,21,21,-38,21,-14,21,-10,-15,-16,-43,21,-52,-53,-60,-61,-46,21,-50,-23,21,-22,-47,21,-9,-17,-21,-13,-20,21,-19,-18,21,-11,]),'TRUE':([0,2,3,4,5,6,7,8,9,11,12,14,15,16,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,52,53,54,55,59,60,62,63,64,65,66,71,72,78,80,81,82,83,84,88,90,92,96,97,109,112,114,115,],[22,22,-3,-4,-5,-6,-7,-8,-38,22,-51,22,22,22,-37,-39,-40,-41,-42,22,-67,-68,-2,22,22,-62,-63,-64,-65,-66,-54,-55,-56,-57,-58,-59,22,22,22,-38,22,-14,22,-10,-15,-16,-43,22,-52,-53,-60,-61,-46,22,-50,-23,22,-22,-47,22,-9,-17,-21,-13,-20,22,-19,-18,22,-11,]),'FALSE':([0,2,3,4,5,6,7,8,9,11,12,14,15,16,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,52,53,54,55,59,60,62,63,64,65,66,71,72,78,80,81,82,83,84,88,90,92,96,97,109,112,114,115,],[23,23,-3,-4,-5,-6,-7,-8,-38,23,-51,23,23,23,-37,-39,-40,-41,-42,23,-67,-68,-2,23,23,-62,-63,-64,-65,-66,-54,-55,-56,-57,-58,-59,23,23,23,-38,23,-14,23,-10,-15,-16,-43,23,-52,-53,-60,-61,-46,23,-50,-23,23,-22,-47,23,-9,-17,-21,-13,-20,23,-19,-18,23,-11,]),'NULL':([0,2,3,4,5,6,7,8,9,11,12,14,15,16,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,52,53,54,55,59,60,62,63,64,65,66,71,72,78,80,81,82,83,84,88,90,92,96,97,109,112,114,115,],[24,24,-3,-4,-5,-6,-7,-8,-38,24,-51,24,24,24,-37,-39,-40,-41,-42,24,-67,-68,-2,24,24,-62,-63,-64,-65,-66,-54,-55,-56,-57,-58,-59,24,24,24,-38,24,-14,24,-10,-15,-16,-43,24,-52,-53,-60,-61,-46,24,-50,-23,24,-22,-47,24,-9,-17,-21,-13,-20,24,-19,-18,24,-11,]),'NOT':([0,2,3,4,5,6,7,8,9,11,12,14,15,16,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,52,53,54,55,59,60,62,63,64,65,66,71,72,78,80,81,82,83,84,88,90,92,96,97,109,112,114,115,],[25,25,-3,-4,-5,-6,-7,-8,-38,25,-51,25,25,25,-37,-39,-40,-41,-42,25,-67,-68,-2,25,25,-62,-63,-64,-65,-66,-54,-55,-56,-57,-58,-59,25,25,25,-38,25,-14,25,-10,-15,-16,-43,25,-52,-53,-60,-61,-46,25,-50,-23,25,-22,-47,25,-9,-17,-21,-13,-20,25,-19,-18,25,-11,]),'WHILE':([0,2,3,4,5,6,7,8,9,12,14,15,16,20,21,22,23,24,28,29,30,49,51,52,53,54,55,59,62,63,66,72,78,81,82,83,84,88,90,92,96,97,109,112,115,],[26,26,-3,-4,-5,-6,-7,-8,-38,-51,26,26,26,-37,-39,-40,-41,-42,-67,-68,-2,-38,-14,26,-10,-15,-16,-43,-52,-53,-46,-50,-23,-22,-47,26,-9,-17,-21,-13,-20,26,-19,-18,-11,]),'FOR':([0,2,3,4,5,6,7,8,9,12,14,15,16,20,21,22,23,24,28,29,30,49,51,52,53,54,55,59,62,63,66,72,78,81,82,83,84,88,90,92,96,97,109,112,115,],[27,27,-3,-4,-5,-6,-7,-8,-38,-51,27,27,27,-37,-39,-40,-41,-42,-67,-68,-2,-38,-14,27,-10,-15,-16,-43,-52,-53,-46,-50,-23,-22,-47,27,-9,-17,-21,-13,-20,27,-19,-18,-11,]),'INTV':([0,2,3,4,5,6,7,8,9,11,12,14,15,16,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,52,53,54,55,59,60,62,63,64,65,66,71,72,78,80,81,82,83,84,88,90,92,96,97,109,112,114,115,],[28,28,-3,-4,-5,-6,-7,-8,-38,28,-51,28,28,28,-37,-39,-40,-41,-42,28,-67,-68,-2,28,28,-62,-63,-64,-65,-66,-54,-55,-56,-57,-58,-59,28,28,28,-38,28,-14,28,-10,-15,-16,-43,28,-52,-53,-60,-61,-46,28,-50,-23,28,-22,-47,28,-9,-17,-21,-13,-20,28,-19,-18,28,-11,]),'FLOATV':([0,2,3,4,5,6,7,8,9,11,12,14,15,16,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,52,53,54,55,59,60,62,63,64,65,66,71,72,78,80,81,82,83,84,88,90,92,96,97,109,112,114,115,],[29,29,-3,-4,-5,-6,-7,-8,-38,29,-51,29,29,29,-37,-39,-40,-41,-42,29,-67,-68,-2,29,29,-62,-63,-64,-65,-66,-54,-55,-56,-57,-58,-59,29,29,29,-38,29,-14,29,-10,-15,-16,-43,29,-52,-53,-60,-61,-46,29,-50,-23,29,-22,-47,29,-9,-17,-21,-13,-20,29,-19,-18,29,-11,]),'$end':([1,2,3,4,5,6,7,8,9,12,20,21,22,23,24,28,29,30,49,51,53,54,55,59,62,63,66,72,78,81,82,84,90,92,96,109,115,],[0,-1,-3,-4,-5,-6,-7,-8,-38,-51,-37,-39,-40,-41,-42,-67,-68,-2,-38,-14,-10,-15,-16,-43,-52,-53,-46,-50,-23,-22,-47,-9,-21,-13,-20,-19,-11,]),'RCBRACKET':([2,3,4,5,6,7,8,9,12,20,21,22,23,24,28,29,30,49,51,53,54,55,59,62,63,66,72,74,78,81,82,84,90,92,96,109,113,115,117,],[-1,-3,-4,-5,-6,-7,-8,-38,-51,-37,-39,-40,-41,-42,-67,-68,-2,-38,-14,-10,-15,-16,-43,-52,-53,-46,-50,84,-23,-22,-47,-9,-21,-13,-20,-19,115,-11,-12,]),'RETURN':([2,3,4,5,6,7,8,9,12,20,21,22,23,24,28,29,30,49,51,53,54,55,59,62,63,66,72,78,81,82,84,90,92,96,109,111,115,],[-1,-3,-4,-5,-6,-7,-8,-38,-51,-37,-39,-40,-41,-42,-67,-68,-2,-38,-14,-10,-15,-16,-43,-52,-53,-46,-50,-23,-22,-47,-9,-21,-13,-20,-19,114,-11,]),'MINUS':([4,9,12,20,21,22,23,24,28,29,48,49,59,62,63,66,72,73,76,82,],[33,-38,-51,-37,-39,-40,-41,-42,-67,-68,33,-38,-43,33,33,33,-50,33,33,33,]),'PLUS':([4,9,12,20,21,22,23,24,28,29,48,49,59,62,63,66,72,73,76,82,],[34,-38,-51,-37,-39,-40,-41,-42,-67,-68,34,-38,-43,34,34,34,-50,34,34,34,]),'TIMES':([4,9,12,20,21,22,23,24,28,29,48,49,59,62,63,66,72,73,76,82,],[35,-38,-51,-37,-39,-40,-41,-42,-67,-68,35,-38,-43,35,35,35,-50,35,35,35,]),'DIVIDE':([4,9,12,20,21,22,23,24,28,29,48,49,59,62,63,66,72,73,76,82,],[36,-38,-51,-37,-39,-40,-41,-42,-67,-68,36,-38,-43,36,36,36,-50,36,36,36,]),'MODULE':([4,9,12,20,21,22,23,24,28,29,48,49,59,62,63,66,72,73,76,82,],[37,-38,-51,-37,-39,-40,-41,-42,-67,-68,37,-38,-43,37,37,37,-50,37,37,37,]),'OR':([4,9,12,20,21,22,23,24,28,29,48,49,59,62,63,66,72,73,76,82,],[38,-38,-51,-37,-39,-40,-41,-42,-67,-68,38,-38,-43,38,38,38,-50,38,38,38,]),'AND':([4,9,12,20,21,22,23,24,28,29,48,49,59,62,63,66,72,73,76,82,],[39,-38,-51,-37,-39,-40,-41,-42,-67,-68,39,-38,-43,39,39,39,-50,39,39,39,]),'EQUALS':([4,9,12,20,21,22,23,24,28,29,48,49,59,62,63,66,72,73,76,82,],[40,-38,-51,-37,-39,-40,-41,-42,-67,-68,40,-38,-43,40,40,40,-50,40,40,40,]),'NOTEQUALS':([4,9,12,20,21,22,23,24,28,29,48,49,59,62,63,66,72,73,76,82,],[41,-38,-51,-37,-39,-40,-41,-42,-67,-68,41,-38,-43,41,41,41,-50,41,41,41,]),'GREATER':([4,9,12,20,21,22,23,24,28,29,48,49,59,62,63,66,72,73,76,82,],[42,-38,-51,-37,-39,-40,-41,-42,-67,-68,42,-38,-43,42,42,42,-50,42,42,42,]),'LOWER':([4,9,12,20,21,22,23,24,28,29,48,49,59,62,63,66,72,73,76,82,],[43,-38,-51,-37,-39,-40,-41,-42,-67,-68,43,-38,-43,43,43,43,-50,43,43,43,]),'ASSIGN':([9,42,43,47,],[44,64,65,71,]),'LSBRACKET':([9,],[45,]),'RPAREN':([12,20,21,22,23,24,28,29,46,48,49,59,62,63,68,70,72,73,75,76,86,91,98,99,100,101,102,103,104,105,106,107,108,110,],[-51,-37,-39,-40,-41,-42,-67,-68,69,72,-38,-43,-52,-53,79,-35,-50,83,87,88,94,-36,112,-29,-33,-24,-25,-26,-27,-28,-30,-31,-32,-34,]),'LCBRACKET':([14,15,16,83,87,88,94,112,],[52,52,52,52,97,-17,97,-18,]),'RSBRACKET':([20,21,22,23,24,28,29,49,59,67,],[-37,-39,-40,-41,-42,-67,-68,-38,-43,78,]),',':([20,21,22,23,24,28,29,49,59,68,70,86,91,99,100,101,102,103,104,105,106,107,108,110,],[-37,-39,-40,-41,-42,-67,-68,-38,-43,80,-35,95,80,-29,-33,-24,-25,-26,-27,-28,-30,-31,-32,95,]),';':([20,21,22,23,24,28,29,49,59,69,79,116,],[-37,-39,-40,-41,-42,-67,-68,-38,-43,81,90,117,]),'IN':([77,],[89,]),':':([85,],[93,]),'INT':([93,],[101,]),'FLOAT':([93,],[102,]),'BYTE':([93,],[103,]),'SHORT':([93,],[104,]),'DOUBLE':([93,],[105,]),'LONG':([93,],[106,]),'CHAR':([93,],[107,]),'BOOLEAN':([93,],[108,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([0,2,14,15,16,52,83,97,],[1,30,53,53,53,74,53,111,]),'sentencia':([0,2,14,15,16,52,83,97,],[2,2,2,2,2,2,2,2,]),'asignacion':([0,2,14,15,16,52,83,97,],[3,3,3,3,3,3,3,3,]),'expresion':([0,2,11,14,15,16,31,32,44,50,52,60,71,83,97,],[4,4,48,4,4,4,62,63,66,73,4,76,82,4,4,]),'estructuraControl':([0,2,14,15,16,52,83,97,],[5,5,5,5,5,5,5,5,]),'bucles':([0,2,14,15,16,52,83,97,],[6,6,6,6,6,6,6,6,]),'function':([0,2,14,15,16,52,83,97,],[7,7,7,7,7,7,7,7,]),'llamada':([0,2,14,15,16,52,83,97,],[8,8,8,8,8,8,8,8,]),'declarador':([0,2,14,15,16,52,83,97,],[10,10,10,10,10,10,10,10,]),'valor':([0,2,11,14,15,16,25,31,32,44,45,46,50,52,60,71,80,83,97,114,],[12,12,12,12,12,12,59,12,12,12,67,70,12,12,12,12,70,12,12,116,]),'while':([0,2,14,15,16,52,83,97,],[15,15,15,15,15,15,15,15,]),'for':([0,2,14,15,16,52,83,97,],[16,16,16,16,16,16,16,16,]),'number':([0,2,11,14,15,16,25,31,32,44,45,46,50,52,60,71,80,83,97,114,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'operadoresMat':([4,48,62,63,66,73,76,82,],[31,31,31,31,31,31,31,31,]),'operadoresLog':([4,48,62,63,66,73,76,82,],[32,32,32,32,32,32,32,32,]),'instrucciones':([14,15,16,83,],[51,54,55,92,]),'args':([46,80,],[68,91,]),'params':([75,95,],[86,110,]),'instruccionesF':([87,94,],[96,109,]),'dato':([93,],[100,]),'retorno':([111,],[113,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo","S'",1,None,None,None),
  ('cuerpo -> sentencia','cuerpo',1,'p_cuerpo','sintactico.py',7),
  ('cuerpo -> sentencia cuerpo','cuerpo',2,'p_cuerpoR','sintactico.py',12),
  ('sentencia -> asignacion','sentencia',1,'p_sentencia','sintactico.py',16),
  ('sentencia -> expresion','sentencia',1,'p_sentencia','sintactico.py',17),
  ('sentencia -> estructuraControl','sentencia',1,'p_sentencia','sintactico.py',18),
  ('sentencia -> bucles','sentencia',1,'p_sentencia','sintactico.py',19),
  ('sentencia -> function','sentencia',1,'p_sentencia','sintactico.py',20),
  ('sentencia -> llamada','sentencia',1,'p_sentencia','sintactico.py',21),
  ('instrucciones -> LCBRACKET cuerpo RCBRACKET','instrucciones',3,'p_instrucciones','sintactico.py',25),
  ('instrucciones -> cuerpo','instrucciones',1,'p_instrucciones','sintactico.py',26),
  ('instruccionesF -> LCBRACKET cuerpo retorno RCBRACKET','instruccionesF',4,'p_instrucciones_funcion','sintactico.py',29),
  ('retorno -> RETURN valor ;','retorno',3,'p_retorno','sintactico.py',32),
  ('estructuraControl -> IF LPAREN expresion RPAREN instrucciones','estructuraControl',5,'p_estructuraControlIf','sintactico.py',37),
  ('estructuraControl -> ELSE instrucciones','estructuraControl',2,'p_estructuraControlElse','sintactico.py',40),
  ('bucles -> while instrucciones','bucles',2,'p_bucles','sintactico.py',43),
  ('bucles -> for instrucciones','bucles',2,'p_bucles','sintactico.py',44),
  ('while -> WHILE LPAREN expresion RPAREN','while',4,'p_while','sintactico.py',49),
  ('for -> FOR LPAREN ID IN ID RPAREN','for',6,'p_for','sintactico.py',53),
  ('function -> FUNCTION ID LPAREN params RPAREN instruccionesF','function',6,'p_function','sintactico.py',58),
  ('function -> FUNCTION ID LPAREN RPAREN instruccionesF','function',5,'p_function_sin_params','sintactico.py',61),
  ('llamada -> ID LPAREN args RPAREN ;','llamada',5,'p_llamada_funcion','sintactico.py',65),
  ('llamada -> ID LPAREN RPAREN ;','llamada',4,'p_llamada_funcion_sin_params','sintactico.py',69),
  ('function -> ID LSBRACKET valor RSBRACKET','function',4,'p_index','sintactico.py',73),
  ('dato -> INT','dato',1,'p_dato','sintactico.py',77),
  ('dato -> FLOAT','dato',1,'p_dato','sintactico.py',78),
  ('dato -> BYTE','dato',1,'p_dato','sintactico.py',79),
  ('dato -> SHORT','dato',1,'p_dato','sintactico.py',80),
  ('dato -> DOUBLE','dato',1,'p_dato','sintactico.py',81),
  ('dato -> ID','dato',1,'p_dato','sintactico.py',82),
  ('dato -> LONG','dato',1,'p_dato','sintactico.py',83),
  ('dato -> CHAR','dato',1,'p_dato','sintactico.py',84),
  ('dato -> BOOLEAN','dato',1,'p_dato','sintactico.py',85),
  ('params -> ID : dato','params',3,'p_params','sintactico.py',89),
  ('params -> params , params','params',3,'p_params2','sintactico.py',93),
  ('args -> valor','args',1,'p_args','sintactico.py',97),
  ('args -> args , args','args',3,'p_args2','sintactico.py',101),
  ('valor -> number','valor',1,'p_valor','sintactico.py',104),
  ('valor -> ID','valor',1,'p_valor','sintactico.py',105),
  ('valor -> STRING','valor',1,'p_valor','sintactico.py',106),
  ('valor -> TRUE','valor',1,'p_valor_bool','sintactico.py',110),
  ('valor -> FALSE','valor',1,'p_valor_bool','sintactico.py',111),
  ('valor -> NULL','valor',1,'p_valor_null','sintactico.py',119),
  ('valor -> NOT valor','valor',2,'p_valor_negado','sintactico.py',124),
  ('declarador -> VAR','declarador',1,'p_declarador','sintactico.py',129),
  ('declarador -> VAL','declarador',1,'p_declarador','sintactico.py',130),
  ('asignacion -> ID ASSIGN expresion','asignacion',3,'p_asignacion','sintactico.py',134),
  ('asignacion -> declarador ID ASSIGN expresion','asignacion',4,'p_asignacion_declarando','sintactico.py',139),
  ('declarador -> VAR ID','declarador',2,'p_declaracion1','sintactico.py',144),
  ('declarador -> VAL ID','declarador',2,'p_declaracion2','sintactico.py',148),
  ('expresion -> LPAREN expresion RPAREN','expresion',3,'p_exresion','sintactico.py',152),
  ('expresion -> valor','expresion',1,'p_expesion','sintactico.py',155),
  ('expresion -> expresion operadoresMat expresion','expresion',3,'p_expresion_matematica','sintactico.py',160),
  ('expresion -> expresion operadoresLog expresion','expresion',3,'p_expresion_logica','sintactico.py',177),
  ('operadoresLog -> OR','operadoresLog',1,'p_operadores_log','sintactico.py',188),
  ('operadoresLog -> AND','operadoresLog',1,'p_operadores_log','sintactico.py',189),
  ('operadoresLog -> EQUALS','operadoresLog',1,'p_operadores_log','sintactico.py',190),
  ('operadoresLog -> NOTEQUALS','operadoresLog',1,'p_operadores_log','sintactico.py',191),
  ('operadoresLog -> GREATER','operadoresLog',1,'p_operadores_log','sintactico.py',192),
  ('operadoresLog -> LOWER','operadoresLog',1,'p_operadores_log','sintactico.py',193),
  ('operadoresLog -> GREATER ASSIGN','operadoresLog',2,'p_operadores_log','sintactico.py',194),
  ('operadoresLog -> LOWER ASSIGN','operadoresLog',2,'p_operadores_log','sintactico.py',195),
  ('operadoresMat -> MINUS','operadoresMat',1,'p_operadores_mat','sintactico.py',200),
  ('operadoresMat -> PLUS','operadoresMat',1,'p_operadores_mat','sintactico.py',201),
  ('operadoresMat -> TIMES','operadoresMat',1,'p_operadores_mat','sintactico.py',202),
  ('operadoresMat -> DIVIDE','operadoresMat',1,'p_operadores_mat','sintactico.py',203),
  ('operadoresMat -> MODULE','operadoresMat',1,'p_operadores_mat','sintactico.py',204),
  ('number -> INTV','number',1,'p_number','sintactico.py',212),
  ('number -> FLOATV','number',1,'p_number','sintactico.py',213),
]
