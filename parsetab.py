
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND ASSIGN BOOLEAN BYTE CHAR DIVIDE DOUBLE ELSE EQUALS FALSE FLOAT FLOATV FOR FUNCTION GREATER ID IF IN INT INTV LCBRACKET LONG LOWER LPAREN LSBRACKET MINUS MODULE NOT NOTEQUALS NULL OR PLUS RCBRACKET RETURN RPAREN RSBRACKET SHORT STRING TIMES TRUE VAL VAR WHILEcuerpo : sentencia  cuerpo : sentencia cuerpocuerpo : function cuerposentencia : asignacion ';'\n                | estructuraControl\n                | bucles\n                | llamada ';'\n                | declaracion instrucciones : LCBRACKET cuerpo RCBRACKET\n                | sentencia instruccionesF : LCBRACKET cuerpo retorno RCBRACKETretorno : RETURN valor ';' estructuraControl : IF LPAREN expresion RPAREN instrucciones estructuraControl : ELSE instrucciones bucles : while instrucciones\n                | for instrucciones while : WHILE LPAREN expresion RPAREN for : FOR LPAREN ID IN ID RPAREN function : FUNCTION ID LPAREN params RPAREN instruccionesFfunction : FUNCTION ID LPAREN RPAREN instruccionesFllamada : ID LPAREN args RPAREN llamada : ID LPAREN RPAREN function : ID LSBRACKET valor RSBRACKETdato : INT\n            | FLOAT\n            | BYTE\n            | SHORT\n            | DOUBLE\n            | ID\n            | LONG\n            | CHAR\n            | BOOLEANparams : ID ':' dato params : params ',' paramsargs : valorargs : args ',' argsvalor : IDvalor : number\n            | STRINGvalor : TRUE\n            | FALSEvalor : NULLvalor : NOT valor declarador : VAR\n                | VALasignacion : ID ASSIGN expresion asignacion : declarador ID ASSIGN expresion declaracion : declarador ID ';' expresion : LPAREN expresion RPARENexpresion : valor expresion : expresion operadoresMat expresion expresion : expresion operadoresLog expresion operadoresLog :  OR\n                    | AND\n                    | EQUALS\n                    | NOTEQUALS\n                    | GREATER\n                    | LOWER\n                    | GREATER ASSIGN\n                    | LOWER ASSIGNoperadoresMat : MINUS\n                    | PLUS\n                    | TIMES\n                    | DIVIDE\n                    | MODULE number : INTV\n            | FLOATV "
    
_lr_action_items = {'FUNCTION':([0,2,3,5,6,8,22,23,30,31,32,34,35,56,64,84,90,91,98,110,116,],[9,9,9,-5,-6,-8,-4,-7,-14,9,-10,-15,-16,-48,-23,-9,-20,9,-13,-19,-11,]),'ID':([0,2,3,5,6,8,9,11,13,14,15,16,17,22,23,25,26,27,29,30,31,32,34,35,36,37,38,46,50,55,56,64,66,67,68,69,70,71,72,73,74,75,76,77,78,81,83,84,85,86,87,89,90,91,94,95,98,110,113,115,116,],[10,10,10,-5,-6,-8,24,28,33,33,33,-44,-45,-4,-7,39,39,39,39,-14,10,-10,-15,-16,39,60,61,39,39,39,-48,-23,39,39,-61,-62,-63,-64,-65,-53,-54,-55,-56,-57,-58,39,33,-9,-17,99,100,61,-20,10,-59,-60,-13,-19,-18,39,-11,]),'IF':([0,2,3,5,6,8,13,14,15,22,23,30,31,32,34,35,56,64,83,84,85,90,91,98,110,113,116,],[12,12,12,-5,-6,-8,12,12,12,-4,-7,-14,12,-10,-15,-16,-48,-23,12,-9,-17,-20,12,-13,-19,-18,-11,]),'ELSE':([0,2,3,5,6,8,13,14,15,22,23,30,31,32,34,35,56,64,83,84,85,90,91,98,110,113,116,],[13,13,13,-5,-6,-8,13,13,13,-4,-7,-14,13,-10,-15,-16,-48,-23,13,-9,-17,-20,13,-13,-19,-18,-11,]),'VAR':([0,2,3,5,6,8,13,14,15,22,23,30,31,32,34,35,56,64,83,84,85,90,91,98,110,113,116,],[16,16,16,-5,-6,-8,16,16,16,-4,-7,-14,16,-10,-15,-16,-48,-23,16,-9,-17,-20,16,-13,-19,-18,-11,]),'VAL':([0,2,3,5,6,8,13,14,15,22,23,30,31,32,34,35,56,64,83,84,85,90,91,98,110,113,116,],[17,17,17,-5,-6,-8,17,17,17,-4,-7,-14,17,-10,-15,-16,-48,-23,17,-9,-17,-20,17,-13,-19,-18,-11,]),'WHILE':([0,2,3,5,6,8,13,14,15,22,23,30,31,32,34,35,56,64,83,84,85,90,91,98,110,113,116,],[18,18,18,-5,-6,-8,18,18,18,-4,-7,-14,18,-10,-15,-16,-48,-23,18,-9,-17,-20,18,-13,-19,-18,-11,]),'FOR':([0,2,3,5,6,8,13,14,15,22,23,30,31,32,34,35,56,64,83,84,85,90,91,98,110,113,116,],[19,19,19,-5,-6,-8,19,19,19,-4,-7,-14,19,-10,-15,-16,-48,-23,19,-9,-17,-20,19,-13,-19,-18,-11,]),'$end':([1,2,5,6,8,20,21,22,23,30,32,34,35,56,84,98,],[0,-1,-5,-6,-8,-2,-3,-4,-7,-14,-10,-15,-16,-48,-9,-13,]),'RCBRACKET':([2,5,6,8,20,21,22,23,30,32,34,35,56,58,84,98,114,118,],[-1,-5,-6,-8,-2,-3,-4,-7,-14,-10,-15,-16,-48,84,-9,-13,116,-12,]),'RETURN':([2,5,6,8,20,21,22,23,30,32,34,35,56,84,98,112,],[-1,-5,-6,-8,-2,-3,-4,-7,-14,-10,-15,-16,-48,-9,-13,115,]),';':([4,7,28,39,41,42,43,44,45,47,48,49,51,53,65,80,82,92,93,96,117,],[22,23,56,-37,-38,-39,-40,-41,-42,-66,-67,-46,-50,-22,-43,-21,-47,-51,-52,-49,118,]),'LSBRACKET':([10,],[25,]),'ASSIGN':([10,28,33,77,78,],[26,55,26,94,95,]),'LPAREN':([10,12,18,19,24,26,29,33,36,50,55,66,67,68,69,70,71,72,73,74,75,76,77,78,94,95,],[27,29,36,37,38,50,50,27,50,50,50,50,50,-61,-62,-63,-64,-65,-53,-54,-55,-56,-57,-58,-59,-60,]),'LCBRACKET':([13,14,15,63,83,85,88,113,],[31,31,31,91,31,-17,91,-18,]),'STRING':([25,26,27,29,36,46,50,55,66,67,68,69,70,71,72,73,74,75,76,77,78,81,94,95,115,],[42,42,42,42,42,42,42,42,42,42,-61,-62,-63,-64,-65,-53,-54,-55,-56,-57,-58,42,-59,-60,42,]),'TRUE':([25,26,27,29,36,46,50,55,66,67,68,69,70,71,72,73,74,75,76,77,78,81,94,95,115,],[43,43,43,43,43,43,43,43,43,43,-61,-62,-63,-64,-65,-53,-54,-55,-56,-57,-58,43,-59,-60,43,]),'FALSE':([25,26,27,29,36,46,50,55,66,67,68,69,70,71,72,73,74,75,76,77,78,81,94,95,115,],[44,44,44,44,44,44,44,44,44,44,-61,-62,-63,-64,-65,-53,-54,-55,-56,-57,-58,44,-59,-60,44,]),'NULL':([25,26,27,29,36,46,50,55,66,67,68,69,70,71,72,73,74,75,76,77,78,81,94,95,115,],[45,45,45,45,45,45,45,45,45,45,-61,-62,-63,-64,-65,-53,-54,-55,-56,-57,-58,45,-59,-60,45,]),'NOT':([25,26,27,29,36,46,50,55,66,67,68,69,70,71,72,73,74,75,76,77,78,81,94,95,115,],[46,46,46,46,46,46,46,46,46,46,-61,-62,-63,-64,-65,-53,-54,-55,-56,-57,-58,46,-59,-60,46,]),'INTV':([25,26,27,29,36,46,50,55,66,67,68,69,70,71,72,73,74,75,76,77,78,81,94,95,115,],[47,47,47,47,47,47,47,47,47,47,-61,-62,-63,-64,-65,-53,-54,-55,-56,-57,-58,47,-59,-60,47,]),'FLOATV':([25,26,27,29,36,46,50,55,66,67,68,69,70,71,72,73,74,75,76,77,78,81,94,95,115,],[48,48,48,48,48,48,48,48,48,48,-61,-62,-63,-64,-65,-53,-54,-55,-56,-57,-58,48,-59,-60,48,]),'RPAREN':([27,38,39,41,42,43,44,45,47,48,51,52,54,57,59,62,65,79,92,93,96,97,99,100,101,102,103,104,105,106,107,108,109,111,],[53,63,-37,-38,-39,-40,-41,-42,-66,-67,-50,80,-35,83,85,88,-43,96,-51,-52,-49,-36,113,-29,-33,-24,-25,-26,-27,-28,-30,-31,-32,-34,]),'RSBRACKET':([39,40,41,42,43,44,45,47,48,65,],[-37,64,-38,-39,-40,-41,-42,-66,-67,-43,]),'MINUS':([39,41,42,43,44,45,47,48,49,51,57,59,65,79,82,92,93,96,],[-37,-38,-39,-40,-41,-42,-66,-67,68,-50,68,68,-43,68,68,68,68,-49,]),'PLUS':([39,41,42,43,44,45,47,48,49,51,57,59,65,79,82,92,93,96,],[-37,-38,-39,-40,-41,-42,-66,-67,69,-50,69,69,-43,69,69,69,69,-49,]),'TIMES':([39,41,42,43,44,45,47,48,49,51,57,59,65,79,82,92,93,96,],[-37,-38,-39,-40,-41,-42,-66,-67,70,-50,70,70,-43,70,70,70,70,-49,]),'DIVIDE':([39,41,42,43,44,45,47,48,49,51,57,59,65,79,82,92,93,96,],[-37,-38,-39,-40,-41,-42,-66,-67,71,-50,71,71,-43,71,71,71,71,-49,]),'MODULE':([39,41,42,43,44,45,47,48,49,51,57,59,65,79,82,92,93,96,],[-37,-38,-39,-40,-41,-42,-66,-67,72,-50,72,72,-43,72,72,72,72,-49,]),'OR':([39,41,42,43,44,45,47,48,49,51,57,59,65,79,82,92,93,96,],[-37,-38,-39,-40,-41,-42,-66,-67,73,-50,73,73,-43,73,73,73,73,-49,]),'AND':([39,41,42,43,44,45,47,48,49,51,57,59,65,79,82,92,93,96,],[-37,-38,-39,-40,-41,-42,-66,-67,74,-50,74,74,-43,74,74,74,74,-49,]),'EQUALS':([39,41,42,43,44,45,47,48,49,51,57,59,65,79,82,92,93,96,],[-37,-38,-39,-40,-41,-42,-66,-67,75,-50,75,75,-43,75,75,75,75,-49,]),'NOTEQUALS':([39,41,42,43,44,45,47,48,49,51,57,59,65,79,82,92,93,96,],[-37,-38,-39,-40,-41,-42,-66,-67,76,-50,76,76,-43,76,76,76,76,-49,]),'GREATER':([39,41,42,43,44,45,47,48,49,51,57,59,65,79,82,92,93,96,],[-37,-38,-39,-40,-41,-42,-66,-67,77,-50,77,77,-43,77,77,77,77,-49,]),'LOWER':([39,41,42,43,44,45,47,48,49,51,57,59,65,79,82,92,93,96,],[-37,-38,-39,-40,-41,-42,-66,-67,78,-50,78,78,-43,78,78,78,78,-49,]),',':([39,41,42,43,44,45,47,48,52,54,62,65,97,100,101,102,103,104,105,106,107,108,109,111,],[-37,-38,-39,-40,-41,-42,-66,-67,81,-35,89,-43,81,-29,-33,-24,-25,-26,-27,-28,-30,-31,-32,89,]),'IN':([60,],[86,]),':':([61,],[87,]),'INT':([87,],[102,]),'FLOAT':([87,],[103,]),'BYTE':([87,],[104,]),'SHORT':([87,],[105,]),'DOUBLE':([87,],[106,]),'LONG':([87,],[107,]),'CHAR':([87,],[108,]),'BOOLEAN':([87,],[109,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([0,2,3,31,91,],[1,20,21,58,112,]),'sentencia':([0,2,3,13,14,15,31,83,91,],[2,2,2,32,32,32,2,32,2,]),'function':([0,2,3,31,91,],[3,3,3,3,3,]),'asignacion':([0,2,3,13,14,15,31,83,91,],[4,4,4,4,4,4,4,4,4,]),'estructuraControl':([0,2,3,13,14,15,31,83,91,],[5,5,5,5,5,5,5,5,5,]),'bucles':([0,2,3,13,14,15,31,83,91,],[6,6,6,6,6,6,6,6,6,]),'llamada':([0,2,3,13,14,15,31,83,91,],[7,7,7,7,7,7,7,7,7,]),'declaracion':([0,2,3,13,14,15,31,83,91,],[8,8,8,8,8,8,8,8,8,]),'declarador':([0,2,3,13,14,15,31,83,91,],[11,11,11,11,11,11,11,11,11,]),'while':([0,2,3,13,14,15,31,83,91,],[14,14,14,14,14,14,14,14,14,]),'for':([0,2,3,13,14,15,31,83,91,],[15,15,15,15,15,15,15,15,15,]),'instrucciones':([13,14,15,83,],[30,34,35,98,]),'valor':([25,26,27,29,36,46,50,55,66,67,81,115,],[40,51,54,51,51,65,51,51,51,51,54,117,]),'number':([25,26,27,29,36,46,50,55,66,67,81,115,],[41,41,41,41,41,41,41,41,41,41,41,41,]),'expresion':([26,29,36,50,55,66,67,],[49,57,59,79,82,92,93,]),'args':([27,81,],[52,97,]),'params':([38,89,],[62,111,]),'operadoresMat':([49,57,59,79,82,92,93,],[66,66,66,66,66,66,66,]),'operadoresLog':([49,57,59,79,82,92,93,],[67,67,67,67,67,67,67,]),'instruccionesF':([63,88,],[90,110,]),'dato':([87,],[101,]),'retorno':([112,],[114,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo","S'",1,None,None,None),
  ('cuerpo -> sentencia','cuerpo',1,'p_cuerpo','sintactico.py',8),
  ('cuerpo -> sentencia cuerpo','cuerpo',2,'p_cuerpoR','sintactico.py',13),
  ('cuerpo -> function cuerpo','cuerpo',2,'p_cuerpo_funcion','sintactico.py',17),
  ('sentencia -> asignacion ;','sentencia',2,'p_sentencia','sintactico.py',22),
  ('sentencia -> estructuraControl','sentencia',1,'p_sentencia','sintactico.py',23),
  ('sentencia -> bucles','sentencia',1,'p_sentencia','sintactico.py',24),
  ('sentencia -> llamada ;','sentencia',2,'p_sentencia','sintactico.py',25),
  ('sentencia -> declaracion','sentencia',1,'p_sentencia','sintactico.py',26),
  ('instrucciones -> LCBRACKET cuerpo RCBRACKET','instrucciones',3,'p_instrucciones','sintactico.py',30),
  ('instrucciones -> sentencia','instrucciones',1,'p_instrucciones','sintactico.py',31),
  ('instruccionesF -> LCBRACKET cuerpo retorno RCBRACKET','instruccionesF',4,'p_instrucciones_funcion','sintactico.py',34),
  ('retorno -> RETURN valor ;','retorno',3,'p_retorno','sintactico.py',37),
  ('estructuraControl -> IF LPAREN expresion RPAREN instrucciones','estructuraControl',5,'p_estructuraControlIf','sintactico.py',42),
  ('estructuraControl -> ELSE instrucciones','estructuraControl',2,'p_estructuraControlElse','sintactico.py',45),
  ('bucles -> while instrucciones','bucles',2,'p_bucles','sintactico.py',48),
  ('bucles -> for instrucciones','bucles',2,'p_bucles','sintactico.py',49),
  ('while -> WHILE LPAREN expresion RPAREN','while',4,'p_while','sintactico.py',54),
  ('for -> FOR LPAREN ID IN ID RPAREN','for',6,'p_for','sintactico.py',58),
  ('function -> FUNCTION ID LPAREN params RPAREN instruccionesF','function',6,'p_function','sintactico.py',63),
  ('function -> FUNCTION ID LPAREN RPAREN instruccionesF','function',5,'p_function_sin_params','sintactico.py',66),
  ('llamada -> ID LPAREN args RPAREN','llamada',4,'p_llamada_funcion','sintactico.py',70),
  ('llamada -> ID LPAREN RPAREN','llamada',3,'p_llamada_funcion_sin_params','sintactico.py',74),
  ('function -> ID LSBRACKET valor RSBRACKET','function',4,'p_index','sintactico.py',78),
  ('dato -> INT','dato',1,'p_dato','sintactico.py',82),
  ('dato -> FLOAT','dato',1,'p_dato','sintactico.py',83),
  ('dato -> BYTE','dato',1,'p_dato','sintactico.py',84),
  ('dato -> SHORT','dato',1,'p_dato','sintactico.py',85),
  ('dato -> DOUBLE','dato',1,'p_dato','sintactico.py',86),
  ('dato -> ID','dato',1,'p_dato','sintactico.py',87),
  ('dato -> LONG','dato',1,'p_dato','sintactico.py',88),
  ('dato -> CHAR','dato',1,'p_dato','sintactico.py',89),
  ('dato -> BOOLEAN','dato',1,'p_dato','sintactico.py',90),
  ('params -> ID : dato','params',3,'p_params','sintactico.py',94),
  ('params -> params , params','params',3,'p_params2','sintactico.py',98),
  ('args -> valor','args',1,'p_args','sintactico.py',102),
  ('args -> args , args','args',3,'p_args2','sintactico.py',106),
  ('valor -> ID','valor',1,'p_valor_id','sintactico.py',109),
  ('valor -> number','valor',1,'p_valor','sintactico.py',113),
  ('valor -> STRING','valor',1,'p_valor','sintactico.py',114),
  ('valor -> TRUE','valor',1,'p_valor_bool','sintactico.py',118),
  ('valor -> FALSE','valor',1,'p_valor_bool','sintactico.py',119),
  ('valor -> NULL','valor',1,'p_valor_null','sintactico.py',127),
  ('valor -> NOT valor','valor',2,'p_valor_negado','sintactico.py',132),
  ('declarador -> VAR','declarador',1,'p_declarador','sintactico.py',137),
  ('declarador -> VAL','declarador',1,'p_declarador','sintactico.py',138),
  ('asignacion -> ID ASSIGN expresion','asignacion',3,'p_asignacion','sintactico.py',142),
  ('asignacion -> declarador ID ASSIGN expresion','asignacion',4,'p_asignacion_declarando','sintactico.py',153),
  ('declaracion -> declarador ID ;','declaracion',3,'p_declaracion','sintactico.py',160),
  ('expresion -> LPAREN expresion RPAREN','expresion',3,'p_exresion','sintactico.py',166),
  ('expresion -> valor','expresion',1,'p_expesion','sintactico.py',169),
  ('expresion -> expresion operadoresMat expresion','expresion',3,'p_expresion_matematica','sintactico.py',174),
  ('expresion -> expresion operadoresLog expresion','expresion',3,'p_expresion_logica','sintactico.py',191),
  ('operadoresLog -> OR','operadoresLog',1,'p_operadores_log','sintactico.py',202),
  ('operadoresLog -> AND','operadoresLog',1,'p_operadores_log','sintactico.py',203),
  ('operadoresLog -> EQUALS','operadoresLog',1,'p_operadores_log','sintactico.py',204),
  ('operadoresLog -> NOTEQUALS','operadoresLog',1,'p_operadores_log','sintactico.py',205),
  ('operadoresLog -> GREATER','operadoresLog',1,'p_operadores_log','sintactico.py',206),
  ('operadoresLog -> LOWER','operadoresLog',1,'p_operadores_log','sintactico.py',207),
  ('operadoresLog -> GREATER ASSIGN','operadoresLog',2,'p_operadores_log','sintactico.py',208),
  ('operadoresLog -> LOWER ASSIGN','operadoresLog',2,'p_operadores_log','sintactico.py',209),
  ('operadoresMat -> MINUS','operadoresMat',1,'p_operadores_mat','sintactico.py',214),
  ('operadoresMat -> PLUS','operadoresMat',1,'p_operadores_mat','sintactico.py',215),
  ('operadoresMat -> TIMES','operadoresMat',1,'p_operadores_mat','sintactico.py',216),
  ('operadoresMat -> DIVIDE','operadoresMat',1,'p_operadores_mat','sintactico.py',217),
  ('operadoresMat -> MODULE','operadoresMat',1,'p_operadores_mat','sintactico.py',218),
  ('number -> INTV','number',1,'p_number','sintactico.py',226),
  ('number -> FLOATV','number',1,'p_number','sintactico.py',227),
]
