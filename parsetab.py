
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "ASSIGN BOOLEAN BYTE CHAR DELETE DOUBLE FALSE FLOAT FLOATV ID IN INT INTV LCBRACKET LONG LPAREN LSBRACKET RCBRACKET RPAREN RSBRACKET SHORT STRING TRUEcuerpo : sentencia ';' sentencia : asignacion \n                | modificacion\n                | retorno\n                | eliminacion asignacion : ID ASSIGN LCBRACKET objeto RCBRACKET asignacion : ID index ASSIGN dato modificacion : ID '.' ID  ASSIGN dato retorno : ID '.' IDeliminacion : DELETE ID '.' IDobjeto : ID ':' dato index : ID LSBRACKET dato RSBRACKETdato : INT\n            | FLOAT\n            | BYTE\n            | SHORT\n            | DOUBLE\n            | ID\n            | LONG\n            | CHAR\n            | BOOLEAN\n            | STRING"
    
_lr_action_items = {'ID':([0,7,8,13,15,16,17,19,34,37,],[7,10,14,18,20,31,20,35,20,20,]),'DELETE':([0,],[8,]),'$end':([1,9,],[0,-1,]),';':([2,3,4,5,6,18,20,22,23,24,25,26,27,28,29,30,33,35,38,39,],[9,-2,-3,-4,-5,-9,-18,-13,-14,-15,-16,-17,-19,-20,-21,-22,-7,-10,-6,-8,]),'ASSIGN':([7,12,18,36,],[11,17,34,-12,]),'.':([7,14,],[13,19,]),'LSBRACKET':([10,],[15,]),'LCBRACKET':([11,],[16,]),'INT':([15,17,34,37,],[22,22,22,22,]),'FLOAT':([15,17,34,37,],[23,23,23,23,]),'BYTE':([15,17,34,37,],[24,24,24,24,]),'SHORT':([15,17,34,37,],[25,25,25,25,]),'DOUBLE':([15,17,34,37,],[26,26,26,26,]),'LONG':([15,17,34,37,],[27,27,27,27,]),'CHAR':([15,17,34,37,],[28,28,28,28,]),'BOOLEAN':([15,17,34,37,],[29,29,29,29,]),'STRING':([15,17,34,37,],[30,30,30,30,]),'RSBRACKET':([20,21,22,23,24,25,26,27,28,29,30,],[-18,36,-13,-14,-15,-16,-17,-19,-20,-21,-22,]),'RCBRACKET':([20,22,23,24,25,26,27,28,29,30,32,40,],[-18,-13,-14,-15,-16,-17,-19,-20,-21,-22,38,-11,]),':':([31,],[37,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([0,],[1,]),'sentencia':([0,],[2,]),'asignacion':([0,],[3,]),'modificacion':([0,],[4,]),'retorno':([0,],[5,]),'eliminacion':([0,],[6,]),'index':([7,],[12,]),'dato':([15,17,34,37,],[21,33,39,40,]),'objeto':([16,],[32,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo","S'",1,None,None,None),
  ('cuerpo -> sentencia ;','cuerpo',2,'p_cuerpo','examen_sintactico.py',8),
  ('sentencia -> asignacion','sentencia',1,'p_sentencia','examen_sintactico.py',14),
  ('sentencia -> modificacion','sentencia',1,'p_sentencia','examen_sintactico.py',15),
  ('sentencia -> retorno','sentencia',1,'p_sentencia','examen_sintactico.py',16),
  ('sentencia -> eliminacion','sentencia',1,'p_sentencia','examen_sintactico.py',17),
  ('asignacion -> ID ASSIGN LCBRACKET objeto RCBRACKET','asignacion',5,'p_asignacion','examen_sintactico.py',22),
  ('asignacion -> ID index ASSIGN dato','asignacion',4,'p_modificacion_index','examen_sintactico.py',36),
  ('modificacion -> ID . ID ASSIGN dato','modificacion',5,'p_modificacion','examen_sintactico.py',46),
  ('retorno -> ID . ID','retorno',3,'p_retorno','examen_sintactico.py',57),
  ('eliminacion -> DELETE ID . ID','eliminacion',4,'p_eliminacion','examen_sintactico.py',64),
  ('objeto -> ID : dato','objeto',3,'p_objeto','examen_sintactico.py',72),
  ('index -> ID LSBRACKET dato RSBRACKET','index',4,'p_index','examen_sintactico.py',78),
  ('dato -> INT','dato',1,'p_dato','examen_sintactico.py',82),
  ('dato -> FLOAT','dato',1,'p_dato','examen_sintactico.py',83),
  ('dato -> BYTE','dato',1,'p_dato','examen_sintactico.py',84),
  ('dato -> SHORT','dato',1,'p_dato','examen_sintactico.py',85),
  ('dato -> DOUBLE','dato',1,'p_dato','examen_sintactico.py',86),
  ('dato -> ID','dato',1,'p_dato','examen_sintactico.py',87),
  ('dato -> LONG','dato',1,'p_dato','examen_sintactico.py',88),
  ('dato -> CHAR','dato',1,'p_dato','examen_sintactico.py',89),
  ('dato -> BOOLEAN','dato',1,'p_dato','examen_sintactico.py',90),
  ('dato -> STRING','dato',1,'p_dato','examen_sintactico.py',91),
]
