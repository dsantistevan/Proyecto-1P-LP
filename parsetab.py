
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND ASSIGN BOOLEAN BYTE CHAR COUNT DIVIDE DOUBLE ELSE EQUALS EQUALSM FALSE FIRST FLOAT FLOATV FOR FUNCTION GET GREATER GREATERE ID IF IN INT INTV LAST LCBRACKET LENGTH LIST LISTOF LONG LOWER LOWERE LPAREN LSBRACKET MINUS MODULE MUTABLELIST MUTABLELISTOF NOT NOTEQUALS NULL OR PLUS PRINTLN RCBRACKET RETURN RPAREN RSBRACKET SETOF SHORT STRING STRINGW TIMES TRUE VAL VAR WHILEcuerpo : sentencia  cuerpo : function  cuerpo : sentencia cuerpocuerpo : function cuerposentencia : asignacion \n                | estructuraControl\n                | bucles\n                | llamada\n                | declaracion instrucciones : LCBRACKET cuerpo RCBRACKET\n                | sentencia instruccionesF : LCBRACKET cuerpo retorno RCBRACKETinstruccionesF : LCBRACKET retorno RCBRACKETinstruccionesF : ':' dato LCBRACKET cuerpo retorno RCBRACKETinstruccionesF : ':' dato LCBRACKET retorno RCBRACKETretorno : RETURN expresion estructuraControl : IF LPAREN expresion RPAREN instrucciones estructuraControl : ELSE instrucciones bucles : while instrucciones\n                | for instrucciones while : WHILE LPAREN expresion RPAREN for : FOR LPAREN ID IN ID RPAREN function : FUNCTION ID LPAREN params RPAREN instruccionesFfunction : FUNCTION ID LPAREN RPAREN instruccionesFllamada : PRINTLN LPAREN expresion RPARENllamada : ID LPAREN args RPAREN llamada : ID LPAREN RPAREN llamada : ID '.' ID LPAREN args RPARENllamada : ID '.' ID LPAREN RPARENfunction : ID LSBRACKET expresion RSBRACKETdato : INT\n            | FLOAT\n            | BYTE\n            | SHORT\n            | DOUBLE\n            | ID\n            | LONG\n            | CHAR\n            | BOOLEAN\n            | LIST\n            | MUTABLELISTparams : ID ':' dato params : params ',' paramsargs : expresionargs : args ',' argsvalor : IDvalor : number\n            | STRINGvalor : TRUE\n            | FALSEvalor : NULLvalor : NOT valor declarador : VAR\n                | VALasignacion : ID ASSIGN expresion asignacion : declarador ID ASSIGN expresion declaracion : declarador ID llamada : LISTOF LPAREN params RPARENllamada : SETOF LPAREN params RPARENllamada : MUTABLELISTOF LPAREN params RPARENexpresion : llamadaexpresion : LPAREN expresion RPARENexpresion : valor expresion : expresion operadoresMat expresion expresion : expresion operadoresLog expresion operadoresLog :  OR\n                    | AND\n                    | EQUALS\n                    | NOTEQUALS\n                    | GREATER\n                    | LOWER\n                    | GREATERE\n                    | LOWEREoperadoresMat : MINUS\n                    | PLUS\n                    | TIMES\n                    | DIVIDE\n                    | MODULE number : INTV\n            | FLOATV llamada : ID '.' LENGTH LPAREN RPARENllamada : ID '.' EQUALSM LPAREN ID RPARENllamada : ID '.' EQUALSM LPAREN STRING RPARENllamada : ID '.' COUNT LPAREN RPARENllamada : ID '.' FIRST LPAREN RPARENllamada : ID '.' LAST LPAREN RPARENllamada : ID '.' GET LPAREN INTV RPARENllamada : ID '.' GET LPAREN ID RPAREN"
    
_lr_action_items = {'FUNCTION':([0,2,3,4,5,6,7,8,31,33,34,35,37,38,46,48,50,51,52,53,54,55,56,58,59,61,82,99,100,101,110,112,113,114,117,118,122,123,125,126,127,130,131,134,135,136,139,154,159,160,161,162,163,166,168,169,173,174,],[9,9,9,-5,-6,-7,-8,-9,-57,-18,9,-11,-19,-20,-46,-61,-63,-48,-79,-47,-49,-50,-51,-80,-55,-27,-30,-52,-46,-26,-56,-10,-25,-58,-59,-60,-24,9,-64,-65,-62,-29,-81,-84,-85,-86,-17,-23,-28,-82,-83,-88,-87,-13,9,-12,-15,-14,]),'ID':([0,2,3,4,5,6,7,8,9,11,13,14,15,20,21,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,61,70,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,105,109,110,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,127,130,131,134,135,136,139,154,157,159,160,161,162,163,164,166,168,169,173,174,],[10,10,10,-5,-6,-7,-8,-9,26,31,36,36,36,-53,-54,46,46,46,63,-57,46,-18,10,-11,-19,-20,46,75,75,75,46,79,75,-46,-61,46,-63,-48,-79,-47,-49,-50,-51,100,-80,-55,-27,46,-30,46,46,-74,-75,-76,-77,-78,-66,-67,-68,-69,-70,-71,-72,-73,-52,-46,-26,46,46,132,137,-56,36,-10,-25,-58,75,141,-59,-60,-21,153,-24,10,141,-64,-65,-62,-29,-81,-84,-85,-86,-17,-23,46,-28,-82,-83,-88,-87,-22,-13,10,-12,-15,-14,]),'IF':([0,2,3,4,5,6,7,8,13,14,15,31,33,34,35,37,38,46,48,50,51,52,53,54,55,56,58,59,61,82,99,100,101,110,111,112,113,114,117,118,119,122,123,125,126,127,130,131,134,135,136,139,154,159,160,161,162,163,164,166,168,169,173,174,],[12,12,12,-5,-6,-7,-8,-9,12,12,12,-57,-18,12,-11,-19,-20,-46,-61,-63,-48,-79,-47,-49,-50,-51,-80,-55,-27,-30,-52,-46,-26,-56,12,-10,-25,-58,-59,-60,-21,-24,12,-64,-65,-62,-29,-81,-84,-85,-86,-17,-23,-28,-82,-83,-88,-87,-22,-13,12,-12,-15,-14,]),'ELSE':([0,2,3,4,5,6,7,8,13,14,15,31,33,34,35,37,38,46,48,50,51,52,53,54,55,56,58,59,61,82,99,100,101,110,111,112,113,114,117,118,119,122,123,125,126,127,130,131,134,135,136,139,154,159,160,161,162,163,164,166,168,169,173,174,],[13,13,13,-5,-6,-7,-8,-9,13,13,13,-57,-18,13,-11,-19,-20,-46,-61,-63,-48,-79,-47,-49,-50,-51,-80,-55,-27,-30,-52,-46,-26,-56,13,-10,-25,-58,-59,-60,-21,-24,13,-64,-65,-62,-29,-81,-84,-85,-86,-17,-23,-28,-82,-83,-88,-87,-22,-13,13,-12,-15,-14,]),'PRINTLN':([0,2,3,4,5,6,7,8,13,14,15,27,28,29,31,32,33,34,35,37,38,39,43,46,48,49,50,51,52,53,54,55,56,58,59,61,70,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,110,111,112,113,114,117,118,119,122,123,125,126,127,130,131,134,135,136,139,154,157,159,160,161,162,163,164,166,168,169,173,174,],[16,16,16,-5,-6,-7,-8,-9,16,16,16,16,16,16,-57,16,-18,16,-11,-19,-20,16,16,-46,-61,16,-63,-48,-79,-47,-49,-50,-51,-80,-55,-27,16,-30,16,16,-74,-75,-76,-77,-78,-66,-67,-68,-69,-70,-71,-72,-73,-52,-46,-26,16,16,-56,16,-10,-25,-58,-59,-60,-21,-24,16,-64,-65,-62,-29,-81,-84,-85,-86,-17,-23,16,-28,-82,-83,-88,-87,-22,-13,16,-12,-15,-14,]),'LISTOF':([0,2,3,4,5,6,7,8,13,14,15,27,28,29,31,32,33,34,35,37,38,39,43,46,48,49,50,51,52,53,54,55,56,58,59,61,70,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,110,111,112,113,114,117,118,119,122,123,125,126,127,130,131,134,135,136,139,154,157,159,160,161,162,163,164,166,168,169,173,174,],[17,17,17,-5,-6,-7,-8,-9,17,17,17,17,17,17,-57,17,-18,17,-11,-19,-20,17,17,-46,-61,17,-63,-48,-79,-47,-49,-50,-51,-80,-55,-27,17,-30,17,17,-74,-75,-76,-77,-78,-66,-67,-68,-69,-70,-71,-72,-73,-52,-46,-26,17,17,-56,17,-10,-25,-58,-59,-60,-21,-24,17,-64,-65,-62,-29,-81,-84,-85,-86,-17,-23,17,-28,-82,-83,-88,-87,-22,-13,17,-12,-15,-14,]),'SETOF':([0,2,3,4,5,6,7,8,13,14,15,27,28,29,31,32,33,34,35,37,38,39,43,46,48,49,50,51,52,53,54,55,56,58,59,61,70,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,110,111,112,113,114,117,118,119,122,123,125,126,127,130,131,134,135,136,139,154,157,159,160,161,162,163,164,166,168,169,173,174,],[18,18,18,-5,-6,-7,-8,-9,18,18,18,18,18,18,-57,18,-18,18,-11,-19,-20,18,18,-46,-61,18,-63,-48,-79,-47,-49,-50,-51,-80,-55,-27,18,-30,18,18,-74,-75,-76,-77,-78,-66,-67,-68,-69,-70,-71,-72,-73,-52,-46,-26,18,18,-56,18,-10,-25,-58,-59,-60,-21,-24,18,-64,-65,-62,-29,-81,-84,-85,-86,-17,-23,18,-28,-82,-83,-88,-87,-22,-13,18,-12,-15,-14,]),'MUTABLELISTOF':([0,2,3,4,5,6,7,8,13,14,15,27,28,29,31,32,33,34,35,37,38,39,43,46,48,49,50,51,52,53,54,55,56,58,59,61,70,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,110,111,112,113,114,117,118,119,122,123,125,126,127,130,131,134,135,136,139,154,157,159,160,161,162,163,164,166,168,169,173,174,],[19,19,19,-5,-6,-7,-8,-9,19,19,19,19,19,19,-57,19,-18,19,-11,-19,-20,19,19,-46,-61,19,-63,-48,-79,-47,-49,-50,-51,-80,-55,-27,19,-30,19,19,-74,-75,-76,-77,-78,-66,-67,-68,-69,-70,-71,-72,-73,-52,-46,-26,19,19,-56,19,-10,-25,-58,-59,-60,-21,-24,19,-64,-65,-62,-29,-81,-84,-85,-86,-17,-23,19,-28,-82,-83,-88,-87,-22,-13,19,-12,-15,-14,]),'VAR':([0,2,3,4,5,6,7,8,13,14,15,31,33,34,35,37,38,46,48,50,51,52,53,54,55,56,58,59,61,82,99,100,101,110,111,112,113,114,117,118,119,122,123,125,126,127,130,131,134,135,136,139,154,159,160,161,162,163,164,166,168,169,173,174,],[20,20,20,-5,-6,-7,-8,-9,20,20,20,-57,-18,20,-11,-19,-20,-46,-61,-63,-48,-79,-47,-49,-50,-51,-80,-55,-27,-30,-52,-46,-26,-56,20,-10,-25,-58,-59,-60,-21,-24,20,-64,-65,-62,-29,-81,-84,-85,-86,-17,-23,-28,-82,-83,-88,-87,-22,-13,20,-12,-15,-14,]),'VAL':([0,2,3,4,5,6,7,8,13,14,15,31,33,34,35,37,38,46,48,50,51,52,53,54,55,56,58,59,61,82,99,100,101,110,111,112,113,114,117,118,119,122,123,125,126,127,130,131,134,135,136,139,154,159,160,161,162,163,164,166,168,169,173,174,],[21,21,21,-5,-6,-7,-8,-9,21,21,21,-57,-18,21,-11,-19,-20,-46,-61,-63,-48,-79,-47,-49,-50,-51,-80,-55,-27,-30,-52,-46,-26,-56,21,-10,-25,-58,-59,-60,-21,-24,21,-64,-65,-62,-29,-81,-84,-85,-86,-17,-23,-28,-82,-83,-88,-87,-22,-13,21,-12,-15,-14,]),'WHILE':([0,2,3,4,5,6,7,8,13,14,15,31,33,34,35,37,38,46,48,50,51,52,53,54,55,56,58,59,61,82,99,100,101,110,111,112,113,114,117,118,119,122,123,125,126,127,130,131,134,135,136,139,154,159,160,161,162,163,164,166,168,169,173,174,],[22,22,22,-5,-6,-7,-8,-9,22,22,22,-57,-18,22,-11,-19,-20,-46,-61,-63,-48,-79,-47,-49,-50,-51,-80,-55,-27,-30,-52,-46,-26,-56,22,-10,-25,-58,-59,-60,-21,-24,22,-64,-65,-62,-29,-81,-84,-85,-86,-17,-23,-28,-82,-83,-88,-87,-22,-13,22,-12,-15,-14,]),'FOR':([0,2,3,4,5,6,7,8,13,14,15,31,33,34,35,37,38,46,48,50,51,52,53,54,55,56,58,59,61,82,99,100,101,110,111,112,113,114,117,118,119,122,123,125,126,127,130,131,134,135,136,139,154,159,160,161,162,163,164,166,168,169,173,174,],[23,23,23,-5,-6,-7,-8,-9,23,23,23,-57,-18,23,-11,-19,-20,-46,-61,-63,-48,-79,-47,-49,-50,-51,-80,-55,-27,-30,-52,-46,-26,-56,23,-10,-25,-58,-59,-60,-21,-24,23,-64,-65,-62,-29,-81,-84,-85,-86,-17,-23,-28,-82,-83,-88,-87,-22,-13,23,-12,-15,-14,]),'$end':([1,2,3,4,5,6,7,8,24,25,31,33,35,37,38,46,48,50,51,52,53,54,55,56,58,59,61,82,99,100,101,110,112,113,114,117,118,122,125,126,127,130,131,134,135,136,139,154,159,160,161,162,163,166,169,173,174,],[0,-1,-2,-5,-6,-7,-8,-9,-3,-4,-57,-18,-11,-19,-20,-46,-61,-63,-48,-79,-47,-49,-50,-51,-80,-55,-27,-30,-52,-46,-26,-56,-10,-25,-58,-59,-60,-24,-64,-65,-62,-29,-81,-84,-85,-86,-17,-23,-28,-82,-83,-88,-87,-13,-12,-15,-14,]),'RCBRACKET':([2,3,4,5,6,7,8,24,25,31,33,35,37,38,46,48,50,51,52,53,54,55,56,58,59,61,72,82,99,100,101,110,112,113,114,117,118,122,125,126,127,130,131,134,135,136,139,154,156,159,160,161,162,163,165,166,167,169,171,172,173,174,],[-1,-2,-5,-6,-7,-8,-9,-3,-4,-57,-18,-11,-19,-20,-46,-61,-63,-48,-79,-47,-49,-50,-51,-80,-55,-27,112,-30,-52,-46,-26,-56,-10,-25,-58,-59,-60,-24,-64,-65,-62,-29,-81,-84,-85,-86,-17,-23,166,-28,-82,-83,-88,-87,169,-13,-16,-12,173,174,-15,-14,]),'RETURN':([2,3,4,5,6,7,8,24,25,31,33,35,37,38,46,48,50,51,52,53,54,55,56,58,59,61,82,99,100,101,110,112,113,114,117,118,122,123,125,126,127,130,131,134,135,136,139,154,155,159,160,161,162,163,166,168,169,170,173,174,],[-1,-2,-5,-6,-7,-8,-9,-3,-4,-57,-18,-11,-19,-20,-46,-61,-63,-48,-79,-47,-49,-50,-51,-80,-55,-27,-30,-52,-46,-26,-56,-10,-25,-58,-59,-60,-24,157,-64,-65,-62,-29,-81,-84,-85,-86,-17,-23,157,-28,-82,-83,-88,-87,-13,157,-12,157,-15,-14,]),'LSBRACKET':([10,],[27,]),'ASSIGN':([10,31,36,],[28,70,28,]),'LPAREN':([10,12,16,17,18,19,22,23,26,27,28,29,32,36,39,43,46,49,63,64,65,66,67,68,69,70,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,103,157,],[29,32,39,40,41,42,43,44,45,49,49,49,49,29,49,49,29,49,103,104,105,106,107,108,109,49,49,49,-74,-75,-76,-77,-78,-66,-67,-68,-69,-70,-71,-72,-73,49,49,49,]),'.':([10,36,46,],[30,30,30,]),'LCBRACKET':([13,14,15,81,111,119,121,141,143,144,145,146,147,148,149,150,151,152,158,164,],[34,34,34,123,34,-21,123,-36,-31,-32,-33,-34,-35,-37,-38,-39,-40,-41,168,-22,]),'STRING':([27,28,29,32,39,43,49,57,70,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,103,105,157,],[51,51,51,51,51,51,51,51,51,51,51,-74,-75,-76,-77,-78,-66,-67,-68,-69,-70,-71,-72,-73,51,51,133,51,]),'TRUE':([27,28,29,32,39,43,49,57,70,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,103,157,],[54,54,54,54,54,54,54,54,54,54,54,-74,-75,-76,-77,-78,-66,-67,-68,-69,-70,-71,-72,-73,54,54,54,]),'FALSE':([27,28,29,32,39,43,49,57,70,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,103,157,],[55,55,55,55,55,55,55,55,55,55,55,-74,-75,-76,-77,-78,-66,-67,-68,-69,-70,-71,-72,-73,55,55,55,]),'NULL':([27,28,29,32,39,43,49,57,70,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,103,157,],[56,56,56,56,56,56,56,56,56,56,56,-74,-75,-76,-77,-78,-66,-67,-68,-69,-70,-71,-72,-73,56,56,56,]),'NOT':([27,28,29,32,39,43,49,57,70,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,103,157,],[57,57,57,57,57,57,57,57,57,57,57,-74,-75,-76,-77,-78,-66,-67,-68,-69,-70,-71,-72,-73,57,57,57,]),'INTV':([27,28,29,32,39,43,49,57,70,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,103,109,157,],[52,52,52,52,52,52,52,52,52,52,52,-74,-75,-76,-77,-78,-66,-67,-68,-69,-70,-71,-72,-73,52,52,138,52,]),'FLOATV':([27,28,29,32,39,43,49,57,70,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,103,157,],[58,58,58,58,58,58,58,58,58,58,58,-74,-75,-76,-77,-78,-66,-67,-68,-69,-70,-71,-72,-73,58,58,58,]),'RPAREN':([29,45,46,48,50,51,52,53,54,55,56,58,60,61,62,71,73,74,76,77,78,80,98,99,100,101,103,104,106,107,108,113,114,117,118,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,159,160,161,162,163,],[61,81,-46,-61,-63,-48,-79,-47,-49,-50,-51,-80,101,-27,-44,111,113,114,117,118,119,121,127,-52,-46,-26,130,131,134,135,136,-25,-58,-59,-60,-64,-65,-62,-45,159,-29,-81,160,161,-84,-85,-86,162,163,-43,-36,-42,-31,-32,-33,-34,-35,-37,-38,-39,-40,-41,164,-28,-82,-83,-88,-87,]),'LENGTH':([30,],[64,]),'EQUALSM':([30,],[65,]),'COUNT':([30,],[66,]),'FIRST':([30,],[67,]),'LAST':([30,],[68,]),'GET':([30,],[69,]),'RSBRACKET':([46,47,48,50,51,52,53,54,55,56,58,61,99,100,101,113,114,117,118,125,126,127,130,131,134,135,136,159,160,161,162,163,],[-46,82,-61,-63,-48,-79,-47,-49,-50,-51,-80,-27,-52,-46,-26,-25,-58,-59,-60,-64,-65,-62,-29,-81,-84,-85,-86,-28,-82,-83,-88,-87,]),'MINUS':([46,47,48,50,51,52,53,54,55,56,58,59,61,62,71,73,78,98,99,100,101,110,113,114,117,118,125,126,127,130,131,134,135,136,159,160,161,162,163,167,],[-46,85,-61,-63,-48,-79,-47,-49,-50,-51,-80,85,-27,85,85,85,85,85,-52,-46,-26,85,-25,-58,-59,-60,85,85,-62,-29,-81,-84,-85,-86,-28,-82,-83,-88,-87,85,]),'PLUS':([46,47,48,50,51,52,53,54,55,56,58,59,61,62,71,73,78,98,99,100,101,110,113,114,117,118,125,126,127,130,131,134,135,136,159,160,161,162,163,167,],[-46,86,-61,-63,-48,-79,-47,-49,-50,-51,-80,86,-27,86,86,86,86,86,-52,-46,-26,86,-25,-58,-59,-60,86,86,-62,-29,-81,-84,-85,-86,-28,-82,-83,-88,-87,86,]),'TIMES':([46,47,48,50,51,52,53,54,55,56,58,59,61,62,71,73,78,98,99,100,101,110,113,114,117,118,125,126,127,130,131,134,135,136,159,160,161,162,163,167,],[-46,87,-61,-63,-48,-79,-47,-49,-50,-51,-80,87,-27,87,87,87,87,87,-52,-46,-26,87,-25,-58,-59,-60,87,87,-62,-29,-81,-84,-85,-86,-28,-82,-83,-88,-87,87,]),'DIVIDE':([46,47,48,50,51,52,53,54,55,56,58,59,61,62,71,73,78,98,99,100,101,110,113,114,117,118,125,126,127,130,131,134,135,136,159,160,161,162,163,167,],[-46,88,-61,-63,-48,-79,-47,-49,-50,-51,-80,88,-27,88,88,88,88,88,-52,-46,-26,88,-25,-58,-59,-60,88,88,-62,-29,-81,-84,-85,-86,-28,-82,-83,-88,-87,88,]),'MODULE':([46,47,48,50,51,52,53,54,55,56,58,59,61,62,71,73,78,98,99,100,101,110,113,114,117,118,125,126,127,130,131,134,135,136,159,160,161,162,163,167,],[-46,89,-61,-63,-48,-79,-47,-49,-50,-51,-80,89,-27,89,89,89,89,89,-52,-46,-26,89,-25,-58,-59,-60,89,89,-62,-29,-81,-84,-85,-86,-28,-82,-83,-88,-87,89,]),'OR':([46,47,48,50,51,52,53,54,55,56,58,59,61,62,71,73,78,98,99,100,101,110,113,114,117,118,125,126,127,130,131,134,135,136,159,160,161,162,163,167,],[-46,90,-61,-63,-48,-79,-47,-49,-50,-51,-80,90,-27,90,90,90,90,90,-52,-46,-26,90,-25,-58,-59,-60,90,90,-62,-29,-81,-84,-85,-86,-28,-82,-83,-88,-87,90,]),'AND':([46,47,48,50,51,52,53,54,55,56,58,59,61,62,71,73,78,98,99,100,101,110,113,114,117,118,125,126,127,130,131,134,135,136,159,160,161,162,163,167,],[-46,91,-61,-63,-48,-79,-47,-49,-50,-51,-80,91,-27,91,91,91,91,91,-52,-46,-26,91,-25,-58,-59,-60,91,91,-62,-29,-81,-84,-85,-86,-28,-82,-83,-88,-87,91,]),'EQUALS':([46,47,48,50,51,52,53,54,55,56,58,59,61,62,71,73,78,98,99,100,101,110,113,114,117,118,125,126,127,130,131,134,135,136,159,160,161,162,163,167,],[-46,92,-61,-63,-48,-79,-47,-49,-50,-51,-80,92,-27,92,92,92,92,92,-52,-46,-26,92,-25,-58,-59,-60,92,92,-62,-29,-81,-84,-85,-86,-28,-82,-83,-88,-87,92,]),'NOTEQUALS':([46,47,48,50,51,52,53,54,55,56,58,59,61,62,71,73,78,98,99,100,101,110,113,114,117,118,125,126,127,130,131,134,135,136,159,160,161,162,163,167,],[-46,93,-61,-63,-48,-79,-47,-49,-50,-51,-80,93,-27,93,93,93,93,93,-52,-46,-26,93,-25,-58,-59,-60,93,93,-62,-29,-81,-84,-85,-86,-28,-82,-83,-88,-87,93,]),'GREATER':([46,47,48,50,51,52,53,54,55,56,58,59,61,62,71,73,78,98,99,100,101,110,113,114,117,118,125,126,127,130,131,134,135,136,159,160,161,162,163,167,],[-46,94,-61,-63,-48,-79,-47,-49,-50,-51,-80,94,-27,94,94,94,94,94,-52,-46,-26,94,-25,-58,-59,-60,94,94,-62,-29,-81,-84,-85,-86,-28,-82,-83,-88,-87,94,]),'LOWER':([46,47,48,50,51,52,53,54,55,56,58,59,61,62,71,73,78,98,99,100,101,110,113,114,117,118,125,126,127,130,131,134,135,136,159,160,161,162,163,167,],[-46,95,-61,-63,-48,-79,-47,-49,-50,-51,-80,95,-27,95,95,95,95,95,-52,-46,-26,95,-25,-58,-59,-60,95,95,-62,-29,-81,-84,-85,-86,-28,-82,-83,-88,-87,95,]),'GREATERE':([46,47,48,50,51,52,53,54,55,56,58,59,61,62,71,73,78,98,99,100,101,110,113,114,117,118,125,126,127,130,131,134,135,136,159,160,161,162,163,167,],[-46,96,-61,-63,-48,-79,-47,-49,-50,-51,-80,96,-27,96,96,96,96,96,-52,-46,-26,96,-25,-58,-59,-60,96,96,-62,-29,-81,-84,-85,-86,-28,-82,-83,-88,-87,96,]),'LOWERE':([46,47,48,50,51,52,53,54,55,56,58,59,61,62,71,73,78,98,99,100,101,110,113,114,117,118,125,126,127,130,131,134,135,136,159,160,161,162,163,167,],[-46,97,-61,-63,-48,-79,-47,-49,-50,-51,-80,97,-27,97,97,97,97,97,-52,-46,-26,97,-25,-58,-59,-60,97,97,-62,-29,-81,-84,-85,-86,-28,-82,-83,-88,-87,97,]),',':([46,48,50,51,52,53,54,55,56,58,60,61,62,74,76,77,80,99,100,101,113,114,117,118,125,126,127,128,129,130,131,134,135,136,140,141,142,143,144,145,146,147,148,149,150,151,152,159,160,161,162,163,],[-46,-61,-63,-48,-79,-47,-49,-50,-51,-80,102,-27,-44,115,115,115,115,-52,-46,-26,-25,-58,-59,-60,-64,-65,-62,102,102,-29,-81,-84,-85,-86,115,-36,-42,-31,-32,-33,-34,-35,-37,-38,-39,-40,-41,-28,-82,-83,-88,-87,]),':':([75,81,121,],[116,124,124,]),'IN':([79,],[120,]),'INT':([116,124,],[143,143,]),'FLOAT':([116,124,],[144,144,]),'BYTE':([116,124,],[145,145,]),'SHORT':([116,124,],[146,146,]),'DOUBLE':([116,124,],[147,147,]),'LONG':([116,124,],[148,148,]),'CHAR':([116,124,],[149,149,]),'BOOLEAN':([116,124,],[150,150,]),'LIST':([116,124,],[151,151,]),'MUTABLELIST':([116,124,],[152,152,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([0,2,3,34,123,168,],[1,24,25,72,155,170,]),'sentencia':([0,2,3,13,14,15,34,111,123,168,],[2,2,2,35,35,35,2,35,2,2,]),'function':([0,2,3,34,123,168,],[3,3,3,3,3,3,]),'asignacion':([0,2,3,13,14,15,34,111,123,168,],[4,4,4,4,4,4,4,4,4,4,]),'estructuraControl':([0,2,3,13,14,15,34,111,123,168,],[5,5,5,5,5,5,5,5,5,5,]),'bucles':([0,2,3,13,14,15,34,111,123,168,],[6,6,6,6,6,6,6,6,6,6,]),'llamada':([0,2,3,13,14,15,27,28,29,32,34,39,43,49,70,83,84,102,103,111,123,157,168,],[7,7,7,7,7,7,48,48,48,48,7,48,48,48,48,48,48,48,48,7,7,48,7,]),'declaracion':([0,2,3,13,14,15,34,111,123,168,],[8,8,8,8,8,8,8,8,8,8,]),'declarador':([0,2,3,13,14,15,34,111,123,168,],[11,11,11,11,11,11,11,11,11,11,]),'while':([0,2,3,13,14,15,34,111,123,168,],[14,14,14,14,14,14,14,14,14,14,]),'for':([0,2,3,13,14,15,34,111,123,168,],[15,15,15,15,15,15,15,15,15,15,]),'instrucciones':([13,14,15,111,],[33,37,38,139,]),'expresion':([27,28,29,32,39,43,49,70,83,84,102,103,157,],[47,59,62,71,73,78,98,110,125,126,62,62,167,]),'valor':([27,28,29,32,39,43,49,57,70,83,84,102,103,157,],[50,50,50,50,50,50,50,99,50,50,50,50,50,50,]),'number':([27,28,29,32,39,43,49,57,70,83,84,102,103,157,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'args':([29,102,103,],[60,128,129,]),'params':([40,41,42,45,115,],[74,76,77,80,140,]),'operadoresMat':([47,59,62,71,73,78,98,110,125,126,167,],[83,83,83,83,83,83,83,83,83,83,83,]),'operadoresLog':([47,59,62,71,73,78,98,110,125,126,167,],[84,84,84,84,84,84,84,84,84,84,84,]),'instruccionesF':([81,121,],[122,154,]),'dato':([116,124,],[142,158,]),'retorno':([123,155,168,170,],[156,165,171,172,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo","S'",1,None,None,None),
  ('cuerpo -> sentencia','cuerpo',1,'p_cuerpo','sintactico.py',8),
  ('cuerpo -> function','cuerpo',1,'p_cuerpo_funcion_sola','sintactico.py',12),
  ('cuerpo -> sentencia cuerpo','cuerpo',2,'p_cuerpoR','sintactico.py',16),
  ('cuerpo -> function cuerpo','cuerpo',2,'p_cuerpo_funcion','sintactico.py',20),
  ('sentencia -> asignacion','sentencia',1,'p_sentencia','sintactico.py',25),
  ('sentencia -> estructuraControl','sentencia',1,'p_sentencia','sintactico.py',26),
  ('sentencia -> bucles','sentencia',1,'p_sentencia','sintactico.py',27),
  ('sentencia -> llamada','sentencia',1,'p_sentencia','sintactico.py',28),
  ('sentencia -> declaracion','sentencia',1,'p_sentencia','sintactico.py',29),
  ('instrucciones -> LCBRACKET cuerpo RCBRACKET','instrucciones',3,'p_instrucciones','sintactico.py',33),
  ('instrucciones -> sentencia','instrucciones',1,'p_instrucciones','sintactico.py',34),
  ('instruccionesF -> LCBRACKET cuerpo retorno RCBRACKET','instruccionesF',4,'p_instrucciones_funcion','sintactico.py',37),
  ('instruccionesF -> LCBRACKET retorno RCBRACKET','instruccionesF',3,'p_instrucciones_funcion_retorno','sintactico.py',40),
  ('instruccionesF -> : dato LCBRACKET cuerpo retorno RCBRACKET','instruccionesF',6,'p_instrucciones_funcion_dato','sintactico.py',44),
  ('instruccionesF -> : dato LCBRACKET retorno RCBRACKET','instruccionesF',5,'p_instrucciones_funcion_retorno_dato','sintactico.py',48),
  ('retorno -> RETURN expresion','retorno',2,'p_retorno','sintactico.py',51),
  ('estructuraControl -> IF LPAREN expresion RPAREN instrucciones','estructuraControl',5,'p_estructuraControlIf','sintactico.py',56),
  ('estructuraControl -> ELSE instrucciones','estructuraControl',2,'p_estructuraControlElse','sintactico.py',59),
  ('bucles -> while instrucciones','bucles',2,'p_bucles','sintactico.py',62),
  ('bucles -> for instrucciones','bucles',2,'p_bucles','sintactico.py',63),
  ('while -> WHILE LPAREN expresion RPAREN','while',4,'p_while','sintactico.py',68),
  ('for -> FOR LPAREN ID IN ID RPAREN','for',6,'p_for','sintactico.py',72),
  ('function -> FUNCTION ID LPAREN params RPAREN instruccionesF','function',6,'p_function','sintactico.py',77),
  ('function -> FUNCTION ID LPAREN RPAREN instruccionesF','function',5,'p_function_sin_params','sintactico.py',80),
  ('llamada -> PRINTLN LPAREN expresion RPAREN','llamada',4,'p_print','sintactico.py',83),
  ('llamada -> ID LPAREN args RPAREN','llamada',4,'p_llamada_funcion','sintactico.py',88),
  ('llamada -> ID LPAREN RPAREN','llamada',3,'p_llamada_funcion_sin_params','sintactico.py',92),
  ('llamada -> ID . ID LPAREN args RPAREN','llamada',6,'p_llamada_objeto','sintactico.py',96),
  ('llamada -> ID . ID LPAREN RPAREN','llamada',5,'p_llamada_objeto_sin_params','sintactico.py',99),
  ('function -> ID LSBRACKET expresion RSBRACKET','function',4,'p_index','sintactico.py',103),
  ('dato -> INT','dato',1,'p_dato','sintactico.py',108),
  ('dato -> FLOAT','dato',1,'p_dato','sintactico.py',109),
  ('dato -> BYTE','dato',1,'p_dato','sintactico.py',110),
  ('dato -> SHORT','dato',1,'p_dato','sintactico.py',111),
  ('dato -> DOUBLE','dato',1,'p_dato','sintactico.py',112),
  ('dato -> ID','dato',1,'p_dato','sintactico.py',113),
  ('dato -> LONG','dato',1,'p_dato','sintactico.py',114),
  ('dato -> CHAR','dato',1,'p_dato','sintactico.py',115),
  ('dato -> BOOLEAN','dato',1,'p_dato','sintactico.py',116),
  ('dato -> LIST','dato',1,'p_dato','sintactico.py',117),
  ('dato -> MUTABLELIST','dato',1,'p_dato','sintactico.py',118),
  ('params -> ID : dato','params',3,'p_params','sintactico.py',122),
  ('params -> params , params','params',3,'p_params2','sintactico.py',126),
  ('args -> expresion','args',1,'p_args','sintactico.py',130),
  ('args -> args , args','args',3,'p_args2','sintactico.py',134),
  ('valor -> ID','valor',1,'p_valor_id','sintactico.py',139),
  ('valor -> number','valor',1,'p_valor','sintactico.py',143),
  ('valor -> STRING','valor',1,'p_valor','sintactico.py',144),
  ('valor -> TRUE','valor',1,'p_valor_bool','sintactico.py',148),
  ('valor -> FALSE','valor',1,'p_valor_bool','sintactico.py',149),
  ('valor -> NULL','valor',1,'p_valor_null','sintactico.py',157),
  ('valor -> NOT valor','valor',2,'p_valor_negado','sintactico.py',162),
  ('declarador -> VAR','declarador',1,'p_declarador','sintactico.py',167),
  ('declarador -> VAL','declarador',1,'p_declarador','sintactico.py',168),
  ('asignacion -> ID ASSIGN expresion','asignacion',3,'p_asignacion','sintactico.py',172),
  ('asignacion -> declarador ID ASSIGN expresion','asignacion',4,'p_asignacion_declarando','sintactico.py',183),
  ('declaracion -> declarador ID','declaracion',2,'p_declaracion','sintactico.py',190),
  ('llamada -> LISTOF LPAREN params RPAREN','llamada',4,'p_creacion_lista','sintactico.py',195),
  ('llamada -> SETOF LPAREN params RPAREN','llamada',4,'p_creacion_set','sintactico.py',200),
  ('llamada -> MUTABLELISTOF LPAREN params RPAREN','llamada',4,'p_creacion_lista_mutable','sintactico.py',204),
  ('expresion -> llamada','expresion',1,'p_expresion_llamada','sintactico.py',208),
  ('expresion -> LPAREN expresion RPAREN','expresion',3,'p_exresion','sintactico.py',213),
  ('expresion -> valor','expresion',1,'p_expesion','sintactico.py',217),
  ('expresion -> expresion operadoresMat expresion','expresion',3,'p_expresion_matematica','sintactico.py',222),
  ('expresion -> expresion operadoresLog expresion','expresion',3,'p_expresion_logica','sintactico.py',239),
  ('operadoresLog -> OR','operadoresLog',1,'p_operadores_log','sintactico.py',258),
  ('operadoresLog -> AND','operadoresLog',1,'p_operadores_log','sintactico.py',259),
  ('operadoresLog -> EQUALS','operadoresLog',1,'p_operadores_log','sintactico.py',260),
  ('operadoresLog -> NOTEQUALS','operadoresLog',1,'p_operadores_log','sintactico.py',261),
  ('operadoresLog -> GREATER','operadoresLog',1,'p_operadores_log','sintactico.py',262),
  ('operadoresLog -> LOWER','operadoresLog',1,'p_operadores_log','sintactico.py',263),
  ('operadoresLog -> GREATERE','operadoresLog',1,'p_operadores_log','sintactico.py',264),
  ('operadoresLog -> LOWERE','operadoresLog',1,'p_operadores_log','sintactico.py',265),
  ('operadoresMat -> MINUS','operadoresMat',1,'p_operadores_mat','sintactico.py',270),
  ('operadoresMat -> PLUS','operadoresMat',1,'p_operadores_mat','sintactico.py',271),
  ('operadoresMat -> TIMES','operadoresMat',1,'p_operadores_mat','sintactico.py',272),
  ('operadoresMat -> DIVIDE','operadoresMat',1,'p_operadores_mat','sintactico.py',273),
  ('operadoresMat -> MODULE','operadoresMat',1,'p_operadores_mat','sintactico.py',274),
  ('number -> INTV','number',1,'p_number','sintactico.py',282),
  ('number -> FLOATV','number',1,'p_number','sintactico.py',283),
  ('llamada -> ID . LENGTH LPAREN RPAREN','llamada',5,'p_string_length','sintactico.py',287),
  ('llamada -> ID . EQUALSM LPAREN ID RPAREN','llamada',6,'p_string_equals','sintactico.py',296),
  ('llamada -> ID . EQUALSM LPAREN STRING RPAREN','llamada',6,'p_string_equals2','sintactico.py',306),
  ('llamada -> ID . COUNT LPAREN RPAREN','llamada',5,'p_list_count','sintactico.py',314),
  ('llamada -> ID . FIRST LPAREN RPAREN','llamada',5,'p_list_first','sintactico.py',322),
  ('llamada -> ID . LAST LPAREN RPAREN','llamada',5,'p_list_last','sintactico.py',330),
  ('llamada -> ID . GET LPAREN INTV RPAREN','llamada',6,'p_list_get','sintactico.py',339),
  ('llamada -> ID . GET LPAREN ID RPAREN','llamada',6,'p_list_get2','sintactico.py',347),
]
