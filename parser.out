Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BOOLEAN
    BYTE
    CHAR
    DOUBLE
    FALSE
    FLOAT
    FLOATV
    FUNCTION
    GREATER
    INT
    LCBRACKET
    LONG
    LOWER
    LSBRACKET
    MODULE
    NULL
    RCBRACKET
    RETURN
    RSBRACKET
    SHORT
    STRING
    TRUE
    VAL

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> asignacion
Rule 2     cuerpo -> expresion
Rule 3     cuerpo -> sentencia
Rule 4     cuerpo -> bucles
Rule 5     sentencia -> IF LPAREN expresion RPAREN
Rule 6     sentencia -> ELSE
Rule 7     bucles -> while
Rule 8     bucles -> for
Rule 9     while -> WHILE LPAREN expresion RPAREN
Rule 10    for -> FOR LPAREN ID IN ID RPAREN
Rule 11    asignacion -> VAR ID ASSIGN expresion
Rule 12    expresion -> valor
Rule 13    expresion -> expresion operadoresMat expresion
Rule 14    expresion -> expresion operadoresLog expresion
Rule 15    operadoresLog -> NOT
Rule 16    operadoresLog -> OR
Rule 17    operadoresLog -> AND
Rule 18    operadoresLog -> EQUALS
Rule 19    operadoresMat -> MINUS
Rule 20    operadoresMat -> PLUS
Rule 21    operadoresMat -> TIMES
Rule 22    operadoresMat -> DIVIDE
Rule 23    expression -> PLUS
Rule 24    expression -> MINUS
Rule 25    expression -> term
Rule 26    term -> TIMES
Rule 27    term -> DIVIDE
Rule 28    valor -> INTV
Rule 29    valor -> ID
Rule 30    term -> factor
Rule 31    factor -> INTV
Rule 32    factor -> LPAREN expression RPAREN

Terminals, with rules where they appear

AND                  : 17
ASSIGN               : 11
BOOLEAN              : 
BYTE                 : 
CHAR                 : 
DIVIDE               : 22 27
DOUBLE               : 
ELSE                 : 6
EQUALS               : 18
FALSE                : 
FLOAT                : 
FLOATV               : 
FOR                  : 10
FUNCTION             : 
GREATER              : 
ID                   : 10 10 11 29
IF                   : 5
IN                   : 10
INT                  : 
INTV                 : 28 31
LCBRACKET            : 
LONG                 : 
LOWER                : 
LPAREN               : 5 9 10 32
LSBRACKET            : 
MINUS                : 19 24
MODULE               : 
NOT                  : 15
NULL                 : 
OR                   : 16
PLUS                 : 20 23
RCBRACKET            : 
RETURN               : 
RPAREN               : 5 9 10 32
RSBRACKET            : 
SHORT                : 
STRING               : 
TIMES                : 21 26
TRUE                 : 
VAL                  : 
VAR                  : 11
WHILE                : 9
error                : 

Nonterminals, with rules where they appear

asignacion           : 1
bucles               : 4
cuerpo               : 0
expresion            : 2 5 9 11 13 13 14 14
expression           : 32
factor               : 30
for                  : 8
operadoresLog        : 14
operadoresMat        : 13
sentencia            : 3
term                 : 25
valor                : 12
while                : 7

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . asignacion
    (2) cuerpo -> . expresion
    (3) cuerpo -> . sentencia
    (4) cuerpo -> . bucles
    (11) asignacion -> . VAR ID ASSIGN expresion
    (12) expresion -> . valor
    (13) expresion -> . expresion operadoresMat expresion
    (14) expresion -> . expresion operadoresLog expresion
    (5) sentencia -> . IF LPAREN expresion RPAREN
    (6) sentencia -> . ELSE
    (7) bucles -> . while
    (8) bucles -> . for
    (28) valor -> . INTV
    (29) valor -> . ID
    (9) while -> . WHILE LPAREN expresion RPAREN
    (10) for -> . FOR LPAREN ID IN ID RPAREN

    VAR             shift and go to state 6
    IF              shift and go to state 9
    ELSE            shift and go to state 10
    INTV            shift and go to state 13
    ID              shift and go to state 7
    WHILE           shift and go to state 14
    FOR             shift and go to state 15

    cuerpo                         shift and go to state 1
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    sentencia                      shift and go to state 4
    bucles                         shift and go to state 5
    valor                          shift and go to state 8
    while                          shift and go to state 11
    for                            shift and go to state 12

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> asignacion .

    $end            reduce using rule 1 (cuerpo -> asignacion .)


state 3

    (2) cuerpo -> expresion .
    (13) expresion -> expresion . operadoresMat expresion
    (14) expresion -> expresion . operadoresLog expresion
    (19) operadoresMat -> . MINUS
    (20) operadoresMat -> . PLUS
    (21) operadoresMat -> . TIMES
    (22) operadoresMat -> . DIVIDE
    (15) operadoresLog -> . NOT
    (16) operadoresLog -> . OR
    (17) operadoresLog -> . AND
    (18) operadoresLog -> . EQUALS

    $end            reduce using rule 2 (cuerpo -> expresion .)
    MINUS           shift and go to state 18
    PLUS            shift and go to state 19
    TIMES           shift and go to state 20
    DIVIDE          shift and go to state 21
    NOT             shift and go to state 22
    OR              shift and go to state 23
    AND             shift and go to state 24
    EQUALS          shift and go to state 25

    operadoresMat                  shift and go to state 16
    operadoresLog                  shift and go to state 17

state 4

    (3) cuerpo -> sentencia .

    $end            reduce using rule 3 (cuerpo -> sentencia .)


state 5

    (4) cuerpo -> bucles .

    $end            reduce using rule 4 (cuerpo -> bucles .)


state 6

    (11) asignacion -> VAR . ID ASSIGN expresion

    ID              shift and go to state 26


state 7

    (29) valor -> ID .

    MINUS           reduce using rule 29 (valor -> ID .)
    PLUS            reduce using rule 29 (valor -> ID .)
    TIMES           reduce using rule 29 (valor -> ID .)
    DIVIDE          reduce using rule 29 (valor -> ID .)
    NOT             reduce using rule 29 (valor -> ID .)
    OR              reduce using rule 29 (valor -> ID .)
    AND             reduce using rule 29 (valor -> ID .)
    EQUALS          reduce using rule 29 (valor -> ID .)
    $end            reduce using rule 29 (valor -> ID .)
    RPAREN          reduce using rule 29 (valor -> ID .)


state 8

    (12) expresion -> valor .

    MINUS           reduce using rule 12 (expresion -> valor .)
    PLUS            reduce using rule 12 (expresion -> valor .)
    TIMES           reduce using rule 12 (expresion -> valor .)
    DIVIDE          reduce using rule 12 (expresion -> valor .)
    NOT             reduce using rule 12 (expresion -> valor .)
    OR              reduce using rule 12 (expresion -> valor .)
    AND             reduce using rule 12 (expresion -> valor .)
    EQUALS          reduce using rule 12 (expresion -> valor .)
    $end            reduce using rule 12 (expresion -> valor .)
    RPAREN          reduce using rule 12 (expresion -> valor .)


state 9

    (5) sentencia -> IF . LPAREN expresion RPAREN

    LPAREN          shift and go to state 27


state 10

    (6) sentencia -> ELSE .

    $end            reduce using rule 6 (sentencia -> ELSE .)


state 11

    (7) bucles -> while .

    $end            reduce using rule 7 (bucles -> while .)


state 12

    (8) bucles -> for .

    $end            reduce using rule 8 (bucles -> for .)


state 13

    (28) valor -> INTV .

    MINUS           reduce using rule 28 (valor -> INTV .)
    PLUS            reduce using rule 28 (valor -> INTV .)
    TIMES           reduce using rule 28 (valor -> INTV .)
    DIVIDE          reduce using rule 28 (valor -> INTV .)
    NOT             reduce using rule 28 (valor -> INTV .)
    OR              reduce using rule 28 (valor -> INTV .)
    AND             reduce using rule 28 (valor -> INTV .)
    EQUALS          reduce using rule 28 (valor -> INTV .)
    $end            reduce using rule 28 (valor -> INTV .)
    RPAREN          reduce using rule 28 (valor -> INTV .)


state 14

    (9) while -> WHILE . LPAREN expresion RPAREN

    LPAREN          shift and go to state 28


state 15

    (10) for -> FOR . LPAREN ID IN ID RPAREN

    LPAREN          shift and go to state 29


state 16

    (13) expresion -> expresion operadoresMat . expresion
    (12) expresion -> . valor
    (13) expresion -> . expresion operadoresMat expresion
    (14) expresion -> . expresion operadoresLog expresion
    (28) valor -> . INTV
    (29) valor -> . ID

    INTV            shift and go to state 13
    ID              shift and go to state 7

    expresion                      shift and go to state 30
    valor                          shift and go to state 8

state 17

    (14) expresion -> expresion operadoresLog . expresion
    (12) expresion -> . valor
    (13) expresion -> . expresion operadoresMat expresion
    (14) expresion -> . expresion operadoresLog expresion
    (28) valor -> . INTV
    (29) valor -> . ID

    INTV            shift and go to state 13
    ID              shift and go to state 7

    expresion                      shift and go to state 31
    valor                          shift and go to state 8

state 18

    (19) operadoresMat -> MINUS .

    INTV            reduce using rule 19 (operadoresMat -> MINUS .)
    ID              reduce using rule 19 (operadoresMat -> MINUS .)


state 19

    (20) operadoresMat -> PLUS .

    INTV            reduce using rule 20 (operadoresMat -> PLUS .)
    ID              reduce using rule 20 (operadoresMat -> PLUS .)


state 20

    (21) operadoresMat -> TIMES .

    INTV            reduce using rule 21 (operadoresMat -> TIMES .)
    ID              reduce using rule 21 (operadoresMat -> TIMES .)


state 21

    (22) operadoresMat -> DIVIDE .

    INTV            reduce using rule 22 (operadoresMat -> DIVIDE .)
    ID              reduce using rule 22 (operadoresMat -> DIVIDE .)


state 22

    (15) operadoresLog -> NOT .

    INTV            reduce using rule 15 (operadoresLog -> NOT .)
    ID              reduce using rule 15 (operadoresLog -> NOT .)


state 23

    (16) operadoresLog -> OR .

    INTV            reduce using rule 16 (operadoresLog -> OR .)
    ID              reduce using rule 16 (operadoresLog -> OR .)


state 24

    (17) operadoresLog -> AND .

    INTV            reduce using rule 17 (operadoresLog -> AND .)
    ID              reduce using rule 17 (operadoresLog -> AND .)


state 25

    (18) operadoresLog -> EQUALS .

    INTV            reduce using rule 18 (operadoresLog -> EQUALS .)
    ID              reduce using rule 18 (operadoresLog -> EQUALS .)


state 26

    (11) asignacion -> VAR ID . ASSIGN expresion

    ASSIGN          shift and go to state 32


state 27

    (5) sentencia -> IF LPAREN . expresion RPAREN
    (12) expresion -> . valor
    (13) expresion -> . expresion operadoresMat expresion
    (14) expresion -> . expresion operadoresLog expresion
    (28) valor -> . INTV
    (29) valor -> . ID

    INTV            shift and go to state 13
    ID              shift and go to state 7

    expresion                      shift and go to state 33
    valor                          shift and go to state 8

state 28

    (9) while -> WHILE LPAREN . expresion RPAREN
    (12) expresion -> . valor
    (13) expresion -> . expresion operadoresMat expresion
    (14) expresion -> . expresion operadoresLog expresion
    (28) valor -> . INTV
    (29) valor -> . ID

    INTV            shift and go to state 13
    ID              shift and go to state 7

    expresion                      shift and go to state 34
    valor                          shift and go to state 8

state 29

    (10) for -> FOR LPAREN . ID IN ID RPAREN

    ID              shift and go to state 35


state 30

    (13) expresion -> expresion operadoresMat expresion .
    (13) expresion -> expresion . operadoresMat expresion
    (14) expresion -> expresion . operadoresLog expresion
    (19) operadoresMat -> . MINUS
    (20) operadoresMat -> . PLUS
    (21) operadoresMat -> . TIMES
    (22) operadoresMat -> . DIVIDE
    (15) operadoresLog -> . NOT
    (16) operadoresLog -> . OR
    (17) operadoresLog -> . AND
    (18) operadoresLog -> . EQUALS

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    $end            reduce using rule 13 (expresion -> expresion operadoresMat expresion .)
    RPAREN          reduce using rule 13 (expresion -> expresion operadoresMat expresion .)
    MINUS           shift and go to state 18
    PLUS            shift and go to state 19
    TIMES           shift and go to state 20
    DIVIDE          shift and go to state 21
    NOT             shift and go to state 22
    OR              shift and go to state 23
    AND             shift and go to state 24
    EQUALS          shift and go to state 25

  ! MINUS           [ reduce using rule 13 (expresion -> expresion operadoresMat expresion .) ]
  ! PLUS            [ reduce using rule 13 (expresion -> expresion operadoresMat expresion .) ]
  ! TIMES           [ reduce using rule 13 (expresion -> expresion operadoresMat expresion .) ]
  ! DIVIDE          [ reduce using rule 13 (expresion -> expresion operadoresMat expresion .) ]
  ! NOT             [ reduce using rule 13 (expresion -> expresion operadoresMat expresion .) ]
  ! OR              [ reduce using rule 13 (expresion -> expresion operadoresMat expresion .) ]
  ! AND             [ reduce using rule 13 (expresion -> expresion operadoresMat expresion .) ]
  ! EQUALS          [ reduce using rule 13 (expresion -> expresion operadoresMat expresion .) ]

    operadoresMat                  shift and go to state 16
    operadoresLog                  shift and go to state 17

state 31

    (14) expresion -> expresion operadoresLog expresion .
    (13) expresion -> expresion . operadoresMat expresion
    (14) expresion -> expresion . operadoresLog expresion
    (19) operadoresMat -> . MINUS
    (20) operadoresMat -> . PLUS
    (21) operadoresMat -> . TIMES
    (22) operadoresMat -> . DIVIDE
    (15) operadoresLog -> . NOT
    (16) operadoresLog -> . OR
    (17) operadoresLog -> . AND
    (18) operadoresLog -> . EQUALS

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    $end            reduce using rule 14 (expresion -> expresion operadoresLog expresion .)
    RPAREN          reduce using rule 14 (expresion -> expresion operadoresLog expresion .)
    MINUS           shift and go to state 18
    PLUS            shift and go to state 19
    TIMES           shift and go to state 20
    DIVIDE          shift and go to state 21
    NOT             shift and go to state 22
    OR              shift and go to state 23
    AND             shift and go to state 24
    EQUALS          shift and go to state 25

  ! MINUS           [ reduce using rule 14 (expresion -> expresion operadoresLog expresion .) ]
  ! PLUS            [ reduce using rule 14 (expresion -> expresion operadoresLog expresion .) ]
  ! TIMES           [ reduce using rule 14 (expresion -> expresion operadoresLog expresion .) ]
  ! DIVIDE          [ reduce using rule 14 (expresion -> expresion operadoresLog expresion .) ]
  ! NOT             [ reduce using rule 14 (expresion -> expresion operadoresLog expresion .) ]
  ! OR              [ reduce using rule 14 (expresion -> expresion operadoresLog expresion .) ]
  ! AND             [ reduce using rule 14 (expresion -> expresion operadoresLog expresion .) ]
  ! EQUALS          [ reduce using rule 14 (expresion -> expresion operadoresLog expresion .) ]

    operadoresLog                  shift and go to state 17
    operadoresMat                  shift and go to state 16

state 32

    (11) asignacion -> VAR ID ASSIGN . expresion
    (12) expresion -> . valor
    (13) expresion -> . expresion operadoresMat expresion
    (14) expresion -> . expresion operadoresLog expresion
    (28) valor -> . INTV
    (29) valor -> . ID

    INTV            shift and go to state 13
    ID              shift and go to state 7

    expresion                      shift and go to state 36
    valor                          shift and go to state 8

state 33

    (5) sentencia -> IF LPAREN expresion . RPAREN
    (13) expresion -> expresion . operadoresMat expresion
    (14) expresion -> expresion . operadoresLog expresion
    (19) operadoresMat -> . MINUS
    (20) operadoresMat -> . PLUS
    (21) operadoresMat -> . TIMES
    (22) operadoresMat -> . DIVIDE
    (15) operadoresLog -> . NOT
    (16) operadoresLog -> . OR
    (17) operadoresLog -> . AND
    (18) operadoresLog -> . EQUALS

    RPAREN          shift and go to state 37
    MINUS           shift and go to state 18
    PLUS            shift and go to state 19
    TIMES           shift and go to state 20
    DIVIDE          shift and go to state 21
    NOT             shift and go to state 22
    OR              shift and go to state 23
    AND             shift and go to state 24
    EQUALS          shift and go to state 25

    operadoresMat                  shift and go to state 16
    operadoresLog                  shift and go to state 17

state 34

    (9) while -> WHILE LPAREN expresion . RPAREN
    (13) expresion -> expresion . operadoresMat expresion
    (14) expresion -> expresion . operadoresLog expresion
    (19) operadoresMat -> . MINUS
    (20) operadoresMat -> . PLUS
    (21) operadoresMat -> . TIMES
    (22) operadoresMat -> . DIVIDE
    (15) operadoresLog -> . NOT
    (16) operadoresLog -> . OR
    (17) operadoresLog -> . AND
    (18) operadoresLog -> . EQUALS

    RPAREN          shift and go to state 38
    MINUS           shift and go to state 18
    PLUS            shift and go to state 19
    TIMES           shift and go to state 20
    DIVIDE          shift and go to state 21
    NOT             shift and go to state 22
    OR              shift and go to state 23
    AND             shift and go to state 24
    EQUALS          shift and go to state 25

    operadoresMat                  shift and go to state 16
    operadoresLog                  shift and go to state 17

state 35

    (10) for -> FOR LPAREN ID . IN ID RPAREN

    IN              shift and go to state 39


state 36

    (11) asignacion -> VAR ID ASSIGN expresion .
    (13) expresion -> expresion . operadoresMat expresion
    (14) expresion -> expresion . operadoresLog expresion
    (19) operadoresMat -> . MINUS
    (20) operadoresMat -> . PLUS
    (21) operadoresMat -> . TIMES
    (22) operadoresMat -> . DIVIDE
    (15) operadoresLog -> . NOT
    (16) operadoresLog -> . OR
    (17) operadoresLog -> . AND
    (18) operadoresLog -> . EQUALS

    $end            reduce using rule 11 (asignacion -> VAR ID ASSIGN expresion .)
    MINUS           shift and go to state 18
    PLUS            shift and go to state 19
    TIMES           shift and go to state 20
    DIVIDE          shift and go to state 21
    NOT             shift and go to state 22
    OR              shift and go to state 23
    AND             shift and go to state 24
    EQUALS          shift and go to state 25

    operadoresMat                  shift and go to state 16
    operadoresLog                  shift and go to state 17

state 37

    (5) sentencia -> IF LPAREN expresion RPAREN .

    $end            reduce using rule 5 (sentencia -> IF LPAREN expresion RPAREN .)


state 38

    (9) while -> WHILE LPAREN expresion RPAREN .

    $end            reduce using rule 9 (while -> WHILE LPAREN expresion RPAREN .)


state 39

    (10) for -> FOR LPAREN ID IN . ID RPAREN

    ID              shift and go to state 40


state 40

    (10) for -> FOR LPAREN ID IN ID . RPAREN

    RPAREN          shift and go to state 41


state 41

    (10) for -> FOR LPAREN ID IN ID RPAREN .

    $end            reduce using rule 10 (for -> FOR LPAREN ID IN ID RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MINUS in state 30 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 30 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 30 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 30 resolved as shift
WARNING: shift/reduce conflict for NOT in state 30 resolved as shift
WARNING: shift/reduce conflict for OR in state 30 resolved as shift
WARNING: shift/reduce conflict for AND in state 30 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 30 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 31 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 31 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 31 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 31 resolved as shift
WARNING: shift/reduce conflict for NOT in state 31 resolved as shift
WARNING: shift/reduce conflict for OR in state 31 resolved as shift
WARNING: shift/reduce conflict for AND in state 31 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 31 resolved as shift
