Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    STRINGW

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> sentencia
Rule 2     cuerpo -> function
Rule 3     cuerpo -> sentencia cuerpo
Rule 4     cuerpo -> function cuerpo
Rule 5     sentencia -> asignacion
Rule 6     sentencia -> estructuraControl
Rule 7     sentencia -> bucles
Rule 8     sentencia -> llamada
Rule 9     sentencia -> declaracion
Rule 10    instrucciones -> LCBRACKET cuerpo RCBRACKET
Rule 11    instrucciones -> sentencia
Rule 12    instruccionesF -> LCBRACKET cuerpo retorno RCBRACKET
Rule 13    instruccionesF -> LCBRACKET retorno RCBRACKET
Rule 14    instruccionesF -> : dato LCBRACKET cuerpo retorno RCBRACKET
Rule 15    instruccionesF -> : dato LCBRACKET retorno RCBRACKET
Rule 16    retorno -> RETURN expresion
Rule 17    estructuraControl -> IF LPAREN expresion RPAREN instrucciones
Rule 18    estructuraControl -> ELSE instrucciones
Rule 19    bucles -> while instrucciones
Rule 20    bucles -> for instrucciones
Rule 21    while -> WHILE LPAREN expresion RPAREN
Rule 22    for -> FOR LPAREN ID IN ID RPAREN
Rule 23    function -> FUNCTION ID LPAREN params RPAREN instruccionesF
Rule 24    function -> FUNCTION ID LPAREN RPAREN instruccionesF
Rule 25    llamada -> PRINTLN LPAREN expresion RPAREN
Rule 26    llamada -> ID LPAREN args RPAREN
Rule 27    llamada -> ID LPAREN RPAREN
Rule 28    llamada -> ID . ID LPAREN args RPAREN
Rule 29    llamada -> ID . ID LPAREN RPAREN
Rule 30    function -> ID LSBRACKET expresion RSBRACKET
Rule 31    dato -> INT
Rule 32    dato -> FLOAT
Rule 33    dato -> BYTE
Rule 34    dato -> SHORT
Rule 35    dato -> DOUBLE
Rule 36    dato -> ID
Rule 37    dato -> LONG
Rule 38    dato -> CHAR
Rule 39    dato -> BOOLEAN
Rule 40    dato -> LIST
Rule 41    dato -> MUTABLELIST
Rule 42    params -> ID : dato
Rule 43    params -> params , params
Rule 44    args -> expresion
Rule 45    args -> args , args
Rule 46    valor -> ID
Rule 47    valor -> number
Rule 48    valor -> STRING
Rule 49    valor -> TRUE
Rule 50    valor -> FALSE
Rule 51    valor -> NULL
Rule 52    valor -> NOT valor
Rule 53    declarador -> VAR
Rule 54    declarador -> VAL
Rule 55    asignacion -> ID ASSIGN expresion
Rule 56    asignacion -> declarador ID ASSIGN expresion
Rule 57    declaracion -> declarador ID
Rule 58    llamada -> LISTOF LPAREN args RPAREN
Rule 59    llamada -> SETOF LPAREN args RPAREN
Rule 60    llamada -> MUTABLELISTOF LPAREN args RPAREN
Rule 61    expresion -> llamada
Rule 62    expresion -> LPAREN expresion RPAREN
Rule 63    expresion -> valor
Rule 64    expresion -> expresion operadoresMat expresion
Rule 65    expresion -> expresion operadoresLog expresion
Rule 66    operadoresLog -> OR
Rule 67    operadoresLog -> AND
Rule 68    operadoresLog -> EQUALS
Rule 69    operadoresLog -> NOTEQUALS
Rule 70    operadoresLog -> GREATER
Rule 71    operadoresLog -> LOWER
Rule 72    operadoresLog -> GREATERE
Rule 73    operadoresLog -> LOWERE
Rule 74    operadoresMat -> MINUS
Rule 75    operadoresMat -> PLUS
Rule 76    operadoresMat -> TIMES
Rule 77    operadoresMat -> DIVIDE
Rule 78    operadoresMat -> MODULE
Rule 79    number -> INTV
Rule 80    number -> FLOATV
Rule 81    llamada -> ID . LENGTH LPAREN RPAREN
Rule 82    llamada -> STRING . LENGTH LPAREN RPAREN
Rule 83    llamada -> ID . EQUALSM LPAREN ID RPAREN
Rule 84    llamada -> STRING . EQUALSM LPAREN ID RPAREN
Rule 85    llamada -> STRING . EQUALSM LPAREN STRING RPAREN
Rule 86    llamada -> ID . EQUALSM LPAREN STRING RPAREN
Rule 87    llamada -> ID . COUNT LPAREN RPAREN
Rule 88    llamada -> ID . FIRST LPAREN RPAREN
Rule 89    llamada -> ID . LAST LPAREN RPAREN
Rule 90    llamada -> ID . GET LPAREN INTV RPAREN
Rule 91    llamada -> ID . GET LPAREN ID RPAREN

Terminals, with rules where they appear

,                    : 43 45
.                    : 28 29 81 82 83 84 85 86 87 88 89 90 91
:                    : 14 15 42
AND                  : 67
ASSIGN               : 55 56
BOOLEAN              : 39
BYTE                 : 33
CHAR                 : 38
COUNT                : 87
DIVIDE               : 77
DOUBLE               : 35
ELSE                 : 18
EQUALS               : 68
EQUALSM              : 83 84 85 86
FALSE                : 50
FIRST                : 88
FLOAT                : 32
FLOATV               : 80
FOR                  : 22
FUNCTION             : 23 24
GET                  : 90 91
GREATER              : 70
GREATERE             : 72
ID                   : 22 22 23 24 26 27 28 28 29 29 30 36 42 46 55 56 57 81 83 83 84 86 87 88 89 90 91 91
IF                   : 17
IN                   : 22
INT                  : 31
INTV                 : 79 90
LAST                 : 89
LCBRACKET            : 10 12 13 14 15
LENGTH               : 81 82
LIST                 : 40
LISTOF               : 58
LONG                 : 37
LOWER                : 71
LOWERE               : 73
LPAREN               : 17 21 22 23 24 25 26 27 28 29 58 59 60 62 81 82 83 84 85 86 87 88 89 90 91
LSBRACKET            : 30
MINUS                : 74
MODULE               : 78
MUTABLELIST          : 41
MUTABLELISTOF        : 60
NOT                  : 52
NOTEQUALS            : 69
NULL                 : 51
OR                   : 66
PLUS                 : 75
PRINTLN              : 25
RCBRACKET            : 10 12 13 14 15
RETURN               : 16
RPAREN               : 17 21 22 23 24 25 26 27 28 29 58 59 60 62 81 82 83 84 85 86 87 88 89 90 91
RSBRACKET            : 30
SETOF                : 59
SHORT                : 34
STRING               : 48 82 84 85 85 86
STRINGW              : 
TIMES                : 76
TRUE                 : 49
VAL                  : 54
VAR                  : 53
WHILE                : 21
error                : 

Nonterminals, with rules where they appear

args                 : 26 28 45 45 58 59 60
asignacion           : 5
bucles               : 7
cuerpo               : 3 4 10 12 14 0
dato                 : 14 15 42
declaracion          : 9
declarador           : 56 57
estructuraControl    : 6
expresion            : 16 17 21 25 30 44 55 56 62 64 64 65 65
for                  : 20
function             : 2 4
instrucciones        : 17 18 19 20
instruccionesF       : 23 24
llamada              : 8 61
number               : 47
operadoresLog        : 65
operadoresMat        : 64
params               : 23 43 43
retorno              : 12 13 14 15
sentencia            : 1 3 11
valor                : 52 63
while                : 19

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . sentencia
    (2) cuerpo -> . function
    (3) cuerpo -> . sentencia cuerpo
    (4) cuerpo -> . function cuerpo
    (5) sentencia -> . asignacion
    (6) sentencia -> . estructuraControl
    (7) sentencia -> . bucles
    (8) sentencia -> . llamada
    (9) sentencia -> . declaracion
    (23) function -> . FUNCTION ID LPAREN params RPAREN instruccionesF
    (24) function -> . FUNCTION ID LPAREN RPAREN instruccionesF
    (30) function -> . ID LSBRACKET expresion RSBRACKET
    (55) asignacion -> . ID ASSIGN expresion
    (56) asignacion -> . declarador ID ASSIGN expresion
    (17) estructuraControl -> . IF LPAREN expresion RPAREN instrucciones
    (18) estructuraControl -> . ELSE instrucciones
    (19) bucles -> . while instrucciones
    (20) bucles -> . for instrucciones
    (25) llamada -> . PRINTLN LPAREN expresion RPAREN
    (26) llamada -> . ID LPAREN args RPAREN
    (27) llamada -> . ID LPAREN RPAREN
    (28) llamada -> . ID . ID LPAREN args RPAREN
    (29) llamada -> . ID . ID LPAREN RPAREN
    (58) llamada -> . LISTOF LPAREN args RPAREN
    (59) llamada -> . SETOF LPAREN args RPAREN
    (60) llamada -> . MUTABLELISTOF LPAREN args RPAREN
    (81) llamada -> . ID . LENGTH LPAREN RPAREN
    (82) llamada -> . STRING . LENGTH LPAREN RPAREN
    (83) llamada -> . ID . EQUALSM LPAREN ID RPAREN
    (84) llamada -> . STRING . EQUALSM LPAREN ID RPAREN
    (85) llamada -> . STRING . EQUALSM LPAREN STRING RPAREN
    (86) llamada -> . ID . EQUALSM LPAREN STRING RPAREN
    (87) llamada -> . ID . COUNT LPAREN RPAREN
    (88) llamada -> . ID . FIRST LPAREN RPAREN
    (89) llamada -> . ID . LAST LPAREN RPAREN
    (90) llamada -> . ID . GET LPAREN INTV RPAREN
    (91) llamada -> . ID . GET LPAREN ID RPAREN
    (57) declaracion -> . declarador ID
    (53) declarador -> . VAR
    (54) declarador -> . VAL
    (21) while -> . WHILE LPAREN expresion RPAREN
    (22) for -> . FOR LPAREN ID IN ID RPAREN

    FUNCTION        shift and go to state 9
    ID              shift and go to state 10
    IF              shift and go to state 12
    ELSE            shift and go to state 13
    PRINTLN         shift and go to state 16
    LISTOF          shift and go to state 17
    SETOF           shift and go to state 18
    MUTABLELISTOF   shift and go to state 19
    STRING          shift and go to state 20
    VAR             shift and go to state 21
    VAL             shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24

    cuerpo                         shift and go to state 1
    sentencia                      shift and go to state 2
    function                       shift and go to state 3
    asignacion                     shift and go to state 4
    estructuraControl              shift and go to state 5
    bucles                         shift and go to state 6
    llamada                        shift and go to state 7
    declaracion                    shift and go to state 8
    declarador                     shift and go to state 11
    while                          shift and go to state 14
    for                            shift and go to state 15

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> sentencia .
    (3) cuerpo -> sentencia . cuerpo
    (1) cuerpo -> . sentencia
    (2) cuerpo -> . function
    (3) cuerpo -> . sentencia cuerpo
    (4) cuerpo -> . function cuerpo
    (5) sentencia -> . asignacion
    (6) sentencia -> . estructuraControl
    (7) sentencia -> . bucles
    (8) sentencia -> . llamada
    (9) sentencia -> . declaracion
    (23) function -> . FUNCTION ID LPAREN params RPAREN instruccionesF
    (24) function -> . FUNCTION ID LPAREN RPAREN instruccionesF
    (30) function -> . ID LSBRACKET expresion RSBRACKET
    (55) asignacion -> . ID ASSIGN expresion
    (56) asignacion -> . declarador ID ASSIGN expresion
    (17) estructuraControl -> . IF LPAREN expresion RPAREN instrucciones
    (18) estructuraControl -> . ELSE instrucciones
    (19) bucles -> . while instrucciones
    (20) bucles -> . for instrucciones
    (25) llamada -> . PRINTLN LPAREN expresion RPAREN
    (26) llamada -> . ID LPAREN args RPAREN
    (27) llamada -> . ID LPAREN RPAREN
    (28) llamada -> . ID . ID LPAREN args RPAREN
    (29) llamada -> . ID . ID LPAREN RPAREN
    (58) llamada -> . LISTOF LPAREN args RPAREN
    (59) llamada -> . SETOF LPAREN args RPAREN
    (60) llamada -> . MUTABLELISTOF LPAREN args RPAREN
    (81) llamada -> . ID . LENGTH LPAREN RPAREN
    (82) llamada -> . STRING . LENGTH LPAREN RPAREN
    (83) llamada -> . ID . EQUALSM LPAREN ID RPAREN
    (84) llamada -> . STRING . EQUALSM LPAREN ID RPAREN
    (85) llamada -> . STRING . EQUALSM LPAREN STRING RPAREN
    (86) llamada -> . ID . EQUALSM LPAREN STRING RPAREN
    (87) llamada -> . ID . COUNT LPAREN RPAREN
    (88) llamada -> . ID . FIRST LPAREN RPAREN
    (89) llamada -> . ID . LAST LPAREN RPAREN
    (90) llamada -> . ID . GET LPAREN INTV RPAREN
    (91) llamada -> . ID . GET LPAREN ID RPAREN
    (57) declaracion -> . declarador ID
    (53) declarador -> . VAR
    (54) declarador -> . VAL
    (21) while -> . WHILE LPAREN expresion RPAREN
    (22) for -> . FOR LPAREN ID IN ID RPAREN

    $end            reduce using rule 1 (cuerpo -> sentencia .)
    RCBRACKET       reduce using rule 1 (cuerpo -> sentencia .)
    RETURN          reduce using rule 1 (cuerpo -> sentencia .)
    FUNCTION        shift and go to state 9
    ID              shift and go to state 10
    IF              shift and go to state 12
    ELSE            shift and go to state 13
    PRINTLN         shift and go to state 16
    LISTOF          shift and go to state 17
    SETOF           shift and go to state 18
    MUTABLELISTOF   shift and go to state 19
    STRING          shift and go to state 20
    VAR             shift and go to state 21
    VAL             shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24

    sentencia                      shift and go to state 2
    cuerpo                         shift and go to state 25
    function                       shift and go to state 3
    asignacion                     shift and go to state 4
    estructuraControl              shift and go to state 5
    bucles                         shift and go to state 6
    llamada                        shift and go to state 7
    declaracion                    shift and go to state 8
    declarador                     shift and go to state 11
    while                          shift and go to state 14
    for                            shift and go to state 15

state 3

    (2) cuerpo -> function .
    (4) cuerpo -> function . cuerpo
    (1) cuerpo -> . sentencia
    (2) cuerpo -> . function
    (3) cuerpo -> . sentencia cuerpo
    (4) cuerpo -> . function cuerpo
    (5) sentencia -> . asignacion
    (6) sentencia -> . estructuraControl
    (7) sentencia -> . bucles
    (8) sentencia -> . llamada
    (9) sentencia -> . declaracion
    (23) function -> . FUNCTION ID LPAREN params RPAREN instruccionesF
    (24) function -> . FUNCTION ID LPAREN RPAREN instruccionesF
    (30) function -> . ID LSBRACKET expresion RSBRACKET
    (55) asignacion -> . ID ASSIGN expresion
    (56) asignacion -> . declarador ID ASSIGN expresion
    (17) estructuraControl -> . IF LPAREN expresion RPAREN instrucciones
    (18) estructuraControl -> . ELSE instrucciones
    (19) bucles -> . while instrucciones
    (20) bucles -> . for instrucciones
    (25) llamada -> . PRINTLN LPAREN expresion RPAREN
    (26) llamada -> . ID LPAREN args RPAREN
    (27) llamada -> . ID LPAREN RPAREN
    (28) llamada -> . ID . ID LPAREN args RPAREN
    (29) llamada -> . ID . ID LPAREN RPAREN
    (58) llamada -> . LISTOF LPAREN args RPAREN
    (59) llamada -> . SETOF LPAREN args RPAREN
    (60) llamada -> . MUTABLELISTOF LPAREN args RPAREN
    (81) llamada -> . ID . LENGTH LPAREN RPAREN
    (82) llamada -> . STRING . LENGTH LPAREN RPAREN
    (83) llamada -> . ID . EQUALSM LPAREN ID RPAREN
    (84) llamada -> . STRING . EQUALSM LPAREN ID RPAREN
    (85) llamada -> . STRING . EQUALSM LPAREN STRING RPAREN
    (86) llamada -> . ID . EQUALSM LPAREN STRING RPAREN
    (87) llamada -> . ID . COUNT LPAREN RPAREN
    (88) llamada -> . ID . FIRST LPAREN RPAREN
    (89) llamada -> . ID . LAST LPAREN RPAREN
    (90) llamada -> . ID . GET LPAREN INTV RPAREN
    (91) llamada -> . ID . GET LPAREN ID RPAREN
    (57) declaracion -> . declarador ID
    (53) declarador -> . VAR
    (54) declarador -> . VAL
    (21) while -> . WHILE LPAREN expresion RPAREN
    (22) for -> . FOR LPAREN ID IN ID RPAREN

    $end            reduce using rule 2 (cuerpo -> function .)
    RCBRACKET       reduce using rule 2 (cuerpo -> function .)
    RETURN          reduce using rule 2 (cuerpo -> function .)
    FUNCTION        shift and go to state 9
    ID              shift and go to state 10
    IF              shift and go to state 12
    ELSE            shift and go to state 13
    PRINTLN         shift and go to state 16
    LISTOF          shift and go to state 17
    SETOF           shift and go to state 18
    MUTABLELISTOF   shift and go to state 19
    STRING          shift and go to state 20
    VAR             shift and go to state 21
    VAL             shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24

    function                       shift and go to state 3
    cuerpo                         shift and go to state 26
    sentencia                      shift and go to state 2
    asignacion                     shift and go to state 4
    estructuraControl              shift and go to state 5
    bucles                         shift and go to state 6
    llamada                        shift and go to state 7
    declaracion                    shift and go to state 8
    declarador                     shift and go to state 11
    while                          shift and go to state 14
    for                            shift and go to state 15

state 4

    (5) sentencia -> asignacion .

    FUNCTION        reduce using rule 5 (sentencia -> asignacion .)
    ID              reduce using rule 5 (sentencia -> asignacion .)
    IF              reduce using rule 5 (sentencia -> asignacion .)
    ELSE            reduce using rule 5 (sentencia -> asignacion .)
    PRINTLN         reduce using rule 5 (sentencia -> asignacion .)
    LISTOF          reduce using rule 5 (sentencia -> asignacion .)
    SETOF           reduce using rule 5 (sentencia -> asignacion .)
    MUTABLELISTOF   reduce using rule 5 (sentencia -> asignacion .)
    STRING          reduce using rule 5 (sentencia -> asignacion .)
    VAR             reduce using rule 5 (sentencia -> asignacion .)
    VAL             reduce using rule 5 (sentencia -> asignacion .)
    WHILE           reduce using rule 5 (sentencia -> asignacion .)
    FOR             reduce using rule 5 (sentencia -> asignacion .)
    $end            reduce using rule 5 (sentencia -> asignacion .)
    RCBRACKET       reduce using rule 5 (sentencia -> asignacion .)
    RETURN          reduce using rule 5 (sentencia -> asignacion .)


state 5

    (6) sentencia -> estructuraControl .

    FUNCTION        reduce using rule 6 (sentencia -> estructuraControl .)
    ID              reduce using rule 6 (sentencia -> estructuraControl .)
    IF              reduce using rule 6 (sentencia -> estructuraControl .)
    ELSE            reduce using rule 6 (sentencia -> estructuraControl .)
    PRINTLN         reduce using rule 6 (sentencia -> estructuraControl .)
    LISTOF          reduce using rule 6 (sentencia -> estructuraControl .)
    SETOF           reduce using rule 6 (sentencia -> estructuraControl .)
    MUTABLELISTOF   reduce using rule 6 (sentencia -> estructuraControl .)
    STRING          reduce using rule 6 (sentencia -> estructuraControl .)
    VAR             reduce using rule 6 (sentencia -> estructuraControl .)
    VAL             reduce using rule 6 (sentencia -> estructuraControl .)
    WHILE           reduce using rule 6 (sentencia -> estructuraControl .)
    FOR             reduce using rule 6 (sentencia -> estructuraControl .)
    $end            reduce using rule 6 (sentencia -> estructuraControl .)
    RCBRACKET       reduce using rule 6 (sentencia -> estructuraControl .)
    RETURN          reduce using rule 6 (sentencia -> estructuraControl .)


state 6

    (7) sentencia -> bucles .

    FUNCTION        reduce using rule 7 (sentencia -> bucles .)
    ID              reduce using rule 7 (sentencia -> bucles .)
    IF              reduce using rule 7 (sentencia -> bucles .)
    ELSE            reduce using rule 7 (sentencia -> bucles .)
    PRINTLN         reduce using rule 7 (sentencia -> bucles .)
    LISTOF          reduce using rule 7 (sentencia -> bucles .)
    SETOF           reduce using rule 7 (sentencia -> bucles .)
    MUTABLELISTOF   reduce using rule 7 (sentencia -> bucles .)
    STRING          reduce using rule 7 (sentencia -> bucles .)
    VAR             reduce using rule 7 (sentencia -> bucles .)
    VAL             reduce using rule 7 (sentencia -> bucles .)
    WHILE           reduce using rule 7 (sentencia -> bucles .)
    FOR             reduce using rule 7 (sentencia -> bucles .)
    $end            reduce using rule 7 (sentencia -> bucles .)
    RCBRACKET       reduce using rule 7 (sentencia -> bucles .)
    RETURN          reduce using rule 7 (sentencia -> bucles .)


state 7

    (8) sentencia -> llamada .

    FUNCTION        reduce using rule 8 (sentencia -> llamada .)
    ID              reduce using rule 8 (sentencia -> llamada .)
    IF              reduce using rule 8 (sentencia -> llamada .)
    ELSE            reduce using rule 8 (sentencia -> llamada .)
    PRINTLN         reduce using rule 8 (sentencia -> llamada .)
    LISTOF          reduce using rule 8 (sentencia -> llamada .)
    SETOF           reduce using rule 8 (sentencia -> llamada .)
    MUTABLELISTOF   reduce using rule 8 (sentencia -> llamada .)
    STRING          reduce using rule 8 (sentencia -> llamada .)
    VAR             reduce using rule 8 (sentencia -> llamada .)
    VAL             reduce using rule 8 (sentencia -> llamada .)
    WHILE           reduce using rule 8 (sentencia -> llamada .)
    FOR             reduce using rule 8 (sentencia -> llamada .)
    $end            reduce using rule 8 (sentencia -> llamada .)
    RCBRACKET       reduce using rule 8 (sentencia -> llamada .)
    RETURN          reduce using rule 8 (sentencia -> llamada .)


state 8

    (9) sentencia -> declaracion .

    FUNCTION        reduce using rule 9 (sentencia -> declaracion .)
    ID              reduce using rule 9 (sentencia -> declaracion .)
    IF              reduce using rule 9 (sentencia -> declaracion .)
    ELSE            reduce using rule 9 (sentencia -> declaracion .)
    PRINTLN         reduce using rule 9 (sentencia -> declaracion .)
    LISTOF          reduce using rule 9 (sentencia -> declaracion .)
    SETOF           reduce using rule 9 (sentencia -> declaracion .)
    MUTABLELISTOF   reduce using rule 9 (sentencia -> declaracion .)
    STRING          reduce using rule 9 (sentencia -> declaracion .)
    VAR             reduce using rule 9 (sentencia -> declaracion .)
    VAL             reduce using rule 9 (sentencia -> declaracion .)
    WHILE           reduce using rule 9 (sentencia -> declaracion .)
    FOR             reduce using rule 9 (sentencia -> declaracion .)
    $end            reduce using rule 9 (sentencia -> declaracion .)
    RCBRACKET       reduce using rule 9 (sentencia -> declaracion .)
    RETURN          reduce using rule 9 (sentencia -> declaracion .)


state 9

    (23) function -> FUNCTION . ID LPAREN params RPAREN instruccionesF
    (24) function -> FUNCTION . ID LPAREN RPAREN instruccionesF

    ID              shift and go to state 27


state 10

    (30) function -> ID . LSBRACKET expresion RSBRACKET
    (55) asignacion -> ID . ASSIGN expresion
    (26) llamada -> ID . LPAREN args RPAREN
    (27) llamada -> ID . LPAREN RPAREN
    (28) llamada -> ID . . ID LPAREN args RPAREN
    (29) llamada -> ID . . ID LPAREN RPAREN
    (81) llamada -> ID . . LENGTH LPAREN RPAREN
    (83) llamada -> ID . . EQUALSM LPAREN ID RPAREN
    (86) llamada -> ID . . EQUALSM LPAREN STRING RPAREN
    (87) llamada -> ID . . COUNT LPAREN RPAREN
    (88) llamada -> ID . . FIRST LPAREN RPAREN
    (89) llamada -> ID . . LAST LPAREN RPAREN
    (90) llamada -> ID . . GET LPAREN INTV RPAREN
    (91) llamada -> ID . . GET LPAREN ID RPAREN

    LSBRACKET       shift and go to state 28
    ASSIGN          shift and go to state 29
    LPAREN          shift and go to state 30
    .               shift and go to state 31


state 11

    (56) asignacion -> declarador . ID ASSIGN expresion
    (57) declaracion -> declarador . ID

    ID              shift and go to state 32


state 12

    (17) estructuraControl -> IF . LPAREN expresion RPAREN instrucciones

    LPAREN          shift and go to state 33


state 13

    (18) estructuraControl -> ELSE . instrucciones
    (10) instrucciones -> . LCBRACKET cuerpo RCBRACKET
    (11) instrucciones -> . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . estructuraControl
    (7) sentencia -> . bucles
    (8) sentencia -> . llamada
    (9) sentencia -> . declaracion
    (55) asignacion -> . ID ASSIGN expresion
    (56) asignacion -> . declarador ID ASSIGN expresion
    (17) estructuraControl -> . IF LPAREN expresion RPAREN instrucciones
    (18) estructuraControl -> . ELSE instrucciones
    (19) bucles -> . while instrucciones
    (20) bucles -> . for instrucciones
    (25) llamada -> . PRINTLN LPAREN expresion RPAREN
    (26) llamada -> . ID LPAREN args RPAREN
    (27) llamada -> . ID LPAREN RPAREN
    (28) llamada -> . ID . ID LPAREN args RPAREN
    (29) llamada -> . ID . ID LPAREN RPAREN
    (58) llamada -> . LISTOF LPAREN args RPAREN
    (59) llamada -> . SETOF LPAREN args RPAREN
    (60) llamada -> . MUTABLELISTOF LPAREN args RPAREN
    (81) llamada -> . ID . LENGTH LPAREN RPAREN
    (82) llamada -> . STRING . LENGTH LPAREN RPAREN
    (83) llamada -> . ID . EQUALSM LPAREN ID RPAREN
    (84) llamada -> . STRING . EQUALSM LPAREN ID RPAREN
    (85) llamada -> . STRING . EQUALSM LPAREN STRING RPAREN
    (86) llamada -> . ID . EQUALSM LPAREN STRING RPAREN
    (87) llamada -> . ID . COUNT LPAREN RPAREN
    (88) llamada -> . ID . FIRST LPAREN RPAREN
    (89) llamada -> . ID . LAST LPAREN RPAREN
    (90) llamada -> . ID . GET LPAREN INTV RPAREN
    (91) llamada -> . ID . GET LPAREN ID RPAREN
    (57) declaracion -> . declarador ID
    (53) declarador -> . VAR
    (54) declarador -> . VAL
    (21) while -> . WHILE LPAREN expresion RPAREN
    (22) for -> . FOR LPAREN ID IN ID RPAREN

    LCBRACKET       shift and go to state 35
    ID              shift and go to state 37
    IF              shift and go to state 12
    ELSE            shift and go to state 13
    PRINTLN         shift and go to state 16
    LISTOF          shift and go to state 17
    SETOF           shift and go to state 18
    MUTABLELISTOF   shift and go to state 19
    STRING          shift and go to state 20
    VAR             shift and go to state 21
    VAL             shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24

    instrucciones                  shift and go to state 34
    sentencia                      shift and go to state 36
    asignacion                     shift and go to state 4
    estructuraControl              shift and go to state 5
    bucles                         shift and go to state 6
    llamada                        shift and go to state 7
    declaracion                    shift and go to state 8
    declarador                     shift and go to state 11
    while                          shift and go to state 14
    for                            shift and go to state 15

state 14

    (19) bucles -> while . instrucciones
    (10) instrucciones -> . LCBRACKET cuerpo RCBRACKET
    (11) instrucciones -> . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . estructuraControl
    (7) sentencia -> . bucles
    (8) sentencia -> . llamada
    (9) sentencia -> . declaracion
    (55) asignacion -> . ID ASSIGN expresion
    (56) asignacion -> . declarador ID ASSIGN expresion
    (17) estructuraControl -> . IF LPAREN expresion RPAREN instrucciones
    (18) estructuraControl -> . ELSE instrucciones
    (19) bucles -> . while instrucciones
    (20) bucles -> . for instrucciones
    (25) llamada -> . PRINTLN LPAREN expresion RPAREN
    (26) llamada -> . ID LPAREN args RPAREN
    (27) llamada -> . ID LPAREN RPAREN
    (28) llamada -> . ID . ID LPAREN args RPAREN
    (29) llamada -> . ID . ID LPAREN RPAREN
    (58) llamada -> . LISTOF LPAREN args RPAREN
    (59) llamada -> . SETOF LPAREN args RPAREN
    (60) llamada -> . MUTABLELISTOF LPAREN args RPAREN
    (81) llamada -> . ID . LENGTH LPAREN RPAREN
    (82) llamada -> . STRING . LENGTH LPAREN RPAREN
    (83) llamada -> . ID . EQUALSM LPAREN ID RPAREN
    (84) llamada -> . STRING . EQUALSM LPAREN ID RPAREN
    (85) llamada -> . STRING . EQUALSM LPAREN STRING RPAREN
    (86) llamada -> . ID . EQUALSM LPAREN STRING RPAREN
    (87) llamada -> . ID . COUNT LPAREN RPAREN
    (88) llamada -> . ID . FIRST LPAREN RPAREN
    (89) llamada -> . ID . LAST LPAREN RPAREN
    (90) llamada -> . ID . GET LPAREN INTV RPAREN
    (91) llamada -> . ID . GET LPAREN ID RPAREN
    (57) declaracion -> . declarador ID
    (53) declarador -> . VAR
    (54) declarador -> . VAL
    (21) while -> . WHILE LPAREN expresion RPAREN
    (22) for -> . FOR LPAREN ID IN ID RPAREN

    LCBRACKET       shift and go to state 35
    ID              shift and go to state 37
    IF              shift and go to state 12
    ELSE            shift and go to state 13
    PRINTLN         shift and go to state 16
    LISTOF          shift and go to state 17
    SETOF           shift and go to state 18
    MUTABLELISTOF   shift and go to state 19
    STRING          shift and go to state 20
    VAR             shift and go to state 21
    VAL             shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24

    while                          shift and go to state 14
    instrucciones                  shift and go to state 38
    sentencia                      shift and go to state 36
    asignacion                     shift and go to state 4
    estructuraControl              shift and go to state 5
    bucles                         shift and go to state 6
    llamada                        shift and go to state 7
    declaracion                    shift and go to state 8
    declarador                     shift and go to state 11
    for                            shift and go to state 15

state 15

    (20) bucles -> for . instrucciones
    (10) instrucciones -> . LCBRACKET cuerpo RCBRACKET
    (11) instrucciones -> . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . estructuraControl
    (7) sentencia -> . bucles
    (8) sentencia -> . llamada
    (9) sentencia -> . declaracion
    (55) asignacion -> . ID ASSIGN expresion
    (56) asignacion -> . declarador ID ASSIGN expresion
    (17) estructuraControl -> . IF LPAREN expresion RPAREN instrucciones
    (18) estructuraControl -> . ELSE instrucciones
    (19) bucles -> . while instrucciones
    (20) bucles -> . for instrucciones
    (25) llamada -> . PRINTLN LPAREN expresion RPAREN
    (26) llamada -> . ID LPAREN args RPAREN
    (27) llamada -> . ID LPAREN RPAREN
    (28) llamada -> . ID . ID LPAREN args RPAREN
    (29) llamada -> . ID . ID LPAREN RPAREN
    (58) llamada -> . LISTOF LPAREN args RPAREN
    (59) llamada -> . SETOF LPAREN args RPAREN
    (60) llamada -> . MUTABLELISTOF LPAREN args RPAREN
    (81) llamada -> . ID . LENGTH LPAREN RPAREN
    (82) llamada -> . STRING . LENGTH LPAREN RPAREN
    (83) llamada -> . ID . EQUALSM LPAREN ID RPAREN
    (84) llamada -> . STRING . EQUALSM LPAREN ID RPAREN
    (85) llamada -> . STRING . EQUALSM LPAREN STRING RPAREN
    (86) llamada -> . ID . EQUALSM LPAREN STRING RPAREN
    (87) llamada -> . ID . COUNT LPAREN RPAREN
    (88) llamada -> . ID . FIRST LPAREN RPAREN
    (89) llamada -> . ID . LAST LPAREN RPAREN
    (90) llamada -> . ID . GET LPAREN INTV RPAREN
    (91) llamada -> . ID . GET LPAREN ID RPAREN
    (57) declaracion -> . declarador ID
    (53) declarador -> . VAR
    (54) declarador -> . VAL
    (21) while -> . WHILE LPAREN expresion RPAREN
    (22) for -> . FOR LPAREN ID IN ID RPAREN

    LCBRACKET       shift and go to state 35
    ID              shift and go to state 37
    IF              shift and go to state 12
    ELSE            shift and go to state 13
    PRINTLN         shift and go to state 16
    LISTOF          shift and go to state 17
    SETOF           shift and go to state 18
    MUTABLELISTOF   shift and go to state 19
    STRING          shift and go to state 20
    VAR             shift and go to state 21
    VAL             shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24

    for                            shift and go to state 15
    instrucciones                  shift and go to state 39
    sentencia                      shift and go to state 36
    asignacion                     shift and go to state 4
    estructuraControl              shift and go to state 5
    bucles                         shift and go to state 6
    llamada                        shift and go to state 7
    declaracion                    shift and go to state 8
    declarador                     shift and go to state 11
    while                          shift and go to state 14

state 16

    (25) llamada -> PRINTLN . LPAREN expresion RPAREN

    LPAREN          shift and go to state 40


state 17

    (58) llamada -> LISTOF . LPAREN args RPAREN

    LPAREN          shift and go to state 41


state 18

    (59) llamada -> SETOF . LPAREN args RPAREN

    LPAREN          shift and go to state 42


state 19

    (60) llamada -> MUTABLELISTOF . LPAREN args RPAREN

    LPAREN          shift and go to state 43


state 20

    (82) llamada -> STRING . . LENGTH LPAREN RPAREN
    (84) llamada -> STRING . . EQUALSM LPAREN ID RPAREN
    (85) llamada -> STRING . . EQUALSM LPAREN STRING RPAREN

    .               shift and go to state 44


state 21

    (53) declarador -> VAR .

    ID              reduce using rule 53 (declarador -> VAR .)


state 22

    (54) declarador -> VAL .

    ID              reduce using rule 54 (declarador -> VAL .)


state 23

    (21) while -> WHILE . LPAREN expresion RPAREN

    LPAREN          shift and go to state 45


state 24

    (22) for -> FOR . LPAREN ID IN ID RPAREN

    LPAREN          shift and go to state 46


state 25

    (3) cuerpo -> sentencia cuerpo .

    $end            reduce using rule 3 (cuerpo -> sentencia cuerpo .)
    RCBRACKET       reduce using rule 3 (cuerpo -> sentencia cuerpo .)
    RETURN          reduce using rule 3 (cuerpo -> sentencia cuerpo .)


state 26

    (4) cuerpo -> function cuerpo .

    $end            reduce using rule 4 (cuerpo -> function cuerpo .)
    RCBRACKET       reduce using rule 4 (cuerpo -> function cuerpo .)
    RETURN          reduce using rule 4 (cuerpo -> function cuerpo .)


state 27

    (23) function -> FUNCTION ID . LPAREN params RPAREN instruccionesF
    (24) function -> FUNCTION ID . LPAREN RPAREN instruccionesF

    LPAREN          shift and go to state 47


state 28

    (30) function -> ID LSBRACKET . expresion RSBRACKET
    (61) expresion -> . llamada
    (62) expresion -> . LPAREN expresion RPAREN
    (63) expresion -> . valor
    (64) expresion -> . expresion operadoresMat expresion
    (65) expresion -> . expresion operadoresLog expresion
    (25) llamada -> . PRINTLN LPAREN expresion RPAREN
    (26) llamada -> . ID LPAREN args RPAREN
    (27) llamada -> . ID LPAREN RPAREN
    (28) llamada -> . ID . ID LPAREN args RPAREN
    (29) llamada -> . ID . ID LPAREN RPAREN
    (58) llamada -> . LISTOF LPAREN args RPAREN
    (59) llamada -> . SETOF LPAREN args RPAREN
    (60) llamada -> . MUTABLELISTOF LPAREN args RPAREN
    (81) llamada -> . ID . LENGTH LPAREN RPAREN
    (82) llamada -> . STRING . LENGTH LPAREN RPAREN
    (83) llamada -> . ID . EQUALSM LPAREN ID RPAREN
    (84) llamada -> . STRING . EQUALSM LPAREN ID RPAREN
    (85) llamada -> . STRING . EQUALSM LPAREN STRING RPAREN
    (86) llamada -> . ID . EQUALSM LPAREN STRING RPAREN
    (87) llamada -> . ID . COUNT LPAREN RPAREN
    (88) llamada -> . ID . FIRST LPAREN RPAREN
    (89) llamada -> . ID . LAST LPAREN RPAREN
    (90) llamada -> . ID . GET LPAREN INTV RPAREN
    (91) llamada -> . ID . GET LPAREN ID RPAREN
    (46) valor -> . ID
    (47) valor -> . number
    (48) valor -> . STRING
    (49) valor -> . TRUE
    (50) valor -> . FALSE
    (51) valor -> . NULL
    (52) valor -> . NOT valor
    (79) number -> . INTV
    (80) number -> . FLOATV

    LPAREN          shift and go to state 51
    PRINTLN         shift and go to state 16
    ID              shift and go to state 48
    LISTOF          shift and go to state 17
    SETOF           shift and go to state 18
    MUTABLELISTOF   shift and go to state 19
    STRING          shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    NULL            shift and go to state 58
    NOT             shift and go to state 59
    INTV            shift and go to state 54
    FLOATV          shift and go to state 60

    expresion                      shift and go to state 49
    llamada                        shift and go to state 50
    valor                          shift and go to state 52
    number                         shift and go to state 55

state 29

    (55) asignacion -> ID ASSIGN . expresion
    (61) expresion -> . llamada
    (62) expresion -> . LPAREN expresion RPAREN
    (63) expresion -> . valor
    (64) expresion -> . expresion operadoresMat expresion
    (65) expresion -> . expresion operadoresLog expresion
    (25) llamada -> . PRINTLN LPAREN expresion RPAREN
    (26) llamada -> . ID LPAREN args RPAREN
    (27) llamada -> . ID LPAREN RPAREN
    (28) llamada -> . ID . ID LPAREN args RPAREN
    (29) llamada -> . ID . ID LPAREN RPAREN
    (58) llamada -> . LISTOF LPAREN args RPAREN
    (59) llamada -> . SETOF LPAREN args RPAREN
    (60) llamada -> . MUTABLELISTOF LPAREN args RPAREN
    (81) llamada -> . ID . LENGTH LPAREN RPAREN
    (82) llamada -> . STRING . LENGTH LPAREN RPAREN
    (83) llamada -> . ID . EQUALSM LPAREN ID RPAREN
    (84) llamada -> . STRING . EQUALSM LPAREN ID RPAREN
    (85) llamada -> . STRING . EQUALSM LPAREN STRING RPAREN
    (86) llamada -> . ID . EQUALSM LPAREN STRING RPAREN
    (87) llamada -> . ID . COUNT LPAREN RPAREN
    (88) llamada -> . ID . FIRST LPAREN RPAREN
    (89) llamada -> . ID . LAST LPAREN RPAREN
    (90) llamada -> . ID . GET LPAREN INTV RPAREN
    (91) llamada -> . ID . GET LPAREN ID RPAREN
    (46) valor -> . ID
    (47) valor -> . number
    (48) valor -> . STRING
    (49) valor -> . TRUE
    (50) valor -> . FALSE
    (51) valor -> . NULL
    (52) valor -> . NOT valor
    (79) number -> . INTV
    (80) number -> . FLOATV

    LPAREN          shift and go to state 51
    PRINTLN         shift and go to state 16
    ID              shift and go to state 48
    LISTOF          shift and go to state 17
    SETOF           shift and go to state 18
    MUTABLELISTOF   shift and go to state 19
    STRING          shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    NULL            shift and go to state 58
    NOT             shift and go to state 59
    INTV            shift and go to state 54
    FLOATV          shift and go to state 60

    expresion                      shift and go to state 61
    llamada                        shift and go to state 50
    valor                          shift and go to state 52
    number                         shift and go to state 55

state 30

    (26) llamada -> ID LPAREN . args RPAREN
    (27) llamada -> ID LPAREN . RPAREN
    (44) args -> . expresion
    (45) args -> . args , args
    (61) expresion -> . llamada
    (62) expresion -> . LPAREN expresion RPAREN
    (63) expresion -> . valor
    (64) expresion -> . expresion operadoresMat expresion
    (65) expresion -> . expresion operadoresLog expresion
    (25) llamada -> . PRINTLN LPAREN expresion RPAREN
    (26) llamada -> . ID LPAREN args RPAREN
    (27) llamada -> . ID LPAREN RPAREN
    (28) llamada -> . ID . ID LPAREN args RPAREN
    (29) llamada -> . ID . ID LPAREN RPAREN
    (58) llamada -> . LISTOF LPAREN args RPAREN
    (59) llamada -> . SETOF LPAREN args RPAREN
    (60) llamada -> . MUTABLELISTOF LPAREN args RPAREN
    (81) llamada -> . ID . LENGTH LPAREN RPAREN
    (82) llamada -> . STRING . LENGTH LPAREN RPAREN
    (83) llamada -> . ID . EQUALSM LPAREN ID RPAREN
    (84) llamada -> . STRING . EQUALSM LPAREN ID RPAREN
    (85) llamada -> . STRING . EQUALSM LPAREN STRING RPAREN
    (86) llamada -> . ID . EQUALSM LPAREN STRING RPAREN
    (87) llamada -> . ID . COUNT LPAREN RPAREN
    (88) llamada -> . ID . FIRST LPAREN RPAREN
    (89) llamada -> . ID . LAST LPAREN RPAREN
    (90) llamada -> . ID . GET LPAREN INTV RPAREN
    (91) llamada -> . ID . GET LPAREN ID RPAREN
    (46) valor -> . ID
    (47) valor -> . number
    (48) valor -> . STRING
    (49) valor -> . TRUE
    (50) valor -> . FALSE
    (51) valor -> . NULL
    (52) valor -> . NOT valor
    (79) number -> . INTV
    (80) number -> . FLOATV

    RPAREN          shift and go to state 63
    LPAREN          shift and go to state 51
    PRINTLN         shift and go to state 16
    ID              shift and go to state 48
    LISTOF          shift and go to state 17
    SETOF           shift and go to state 18
    MUTABLELISTOF   shift and go to state 19
    STRING          shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    NULL            shift and go to state 58
    NOT             shift and go to state 59
    INTV            shift and go to state 54
    FLOATV          shift and go to state 60

    args                           shift and go to state 62
    expresion                      shift and go to state 64
    llamada                        shift and go to state 50
    valor                          shift and go to state 52
    number                         shift and go to state 55

state 31

    (28) llamada -> ID . . ID LPAREN args RPAREN
    (29) llamada -> ID . . ID LPAREN RPAREN
    (81) llamada -> ID . . LENGTH LPAREN RPAREN
    (83) llamada -> ID . . EQUALSM LPAREN ID RPAREN
    (86) llamada -> ID . . EQUALSM LPAREN STRING RPAREN
    (87) llamada -> ID . . COUNT LPAREN RPAREN
    (88) llamada -> ID . . FIRST LPAREN RPAREN
    (89) llamada -> ID . . LAST LPAREN RPAREN
    (90) llamada -> ID . . GET LPAREN INTV RPAREN
    (91) llamada -> ID . . GET LPAREN ID RPAREN

    ID              shift and go to state 65
    LENGTH          shift and go to state 66
    EQUALSM         shift and go to state 67
    COUNT           shift and go to state 68
    FIRST           shift and go to state 69
    LAST            shift and go to state 70
    GET             shift and go to state 71


state 32

    (56) asignacion -> declarador ID . ASSIGN expresion
    (57) declaracion -> declarador ID .

    ASSIGN          shift and go to state 72
    FUNCTION        reduce using rule 57 (declaracion -> declarador ID .)
    ID              reduce using rule 57 (declaracion -> declarador ID .)
    IF              reduce using rule 57 (declaracion -> declarador ID .)
    ELSE            reduce using rule 57 (declaracion -> declarador ID .)
    PRINTLN         reduce using rule 57 (declaracion -> declarador ID .)
    LISTOF          reduce using rule 57 (declaracion -> declarador ID .)
    SETOF           reduce using rule 57 (declaracion -> declarador ID .)
    MUTABLELISTOF   reduce using rule 57 (declaracion -> declarador ID .)
    STRING          reduce using rule 57 (declaracion -> declarador ID .)
    VAR             reduce using rule 57 (declaracion -> declarador ID .)
    VAL             reduce using rule 57 (declaracion -> declarador ID .)
    WHILE           reduce using rule 57 (declaracion -> declarador ID .)
    FOR             reduce using rule 57 (declaracion -> declarador ID .)
    $end            reduce using rule 57 (declaracion -> declarador ID .)
    RCBRACKET       reduce using rule 57 (declaracion -> declarador ID .)
    RETURN          reduce using rule 57 (declaracion -> declarador ID .)


state 33

    (17) estructuraControl -> IF LPAREN . expresion RPAREN instrucciones
    (61) expresion -> . llamada
    (62) expresion -> . LPAREN expresion RPAREN
    (63) expresion -> . valor
    (64) expresion -> . expresion operadoresMat expresion
    (65) expresion -> . expresion operadoresLog expresion
    (25) llamada -> . PRINTLN LPAREN expresion RPAREN
    (26) llamada -> . ID LPAREN args RPAREN
    (27) llamada -> . ID LPAREN RPAREN
    (28) llamada -> . ID . ID LPAREN args RPAREN
    (29) llamada -> . ID . ID LPAREN RPAREN
    (58) llamada -> . LISTOF LPAREN args RPAREN
    (59) llamada -> . SETOF LPAREN args RPAREN
    (60) llamada -> . MUTABLELISTOF LPAREN args RPAREN
    (81) llamada -> . ID . LENGTH LPAREN RPAREN
    (82) llamada -> . STRING . LENGTH LPAREN RPAREN
    (83) llamada -> . ID . EQUALSM LPAREN ID RPAREN
    (84) llamada -> . STRING . EQUALSM LPAREN ID RPAREN
    (85) llamada -> . STRING . EQUALSM LPAREN STRING RPAREN
    (86) llamada -> . ID . EQUALSM LPAREN STRING RPAREN
    (87) llamada -> . ID . COUNT LPAREN RPAREN
    (88) llamada -> . ID . FIRST LPAREN RPAREN
    (89) llamada -> . ID . LAST LPAREN RPAREN
    (90) llamada -> . ID . GET LPAREN INTV RPAREN
    (91) llamada -> . ID . GET LPAREN ID RPAREN
    (46) valor -> . ID
    (47) valor -> . number
    (48) valor -> . STRING
    (49) valor -> . TRUE
    (50) valor -> . FALSE
    (51) valor -> . NULL
    (52) valor -> . NOT valor
    (79) number -> . INTV
    (80) number -> . FLOATV

    LPAREN          shift and go to state 51
    PRINTLN         shift and go to state 16
    ID              shift and go to state 48
    LISTOF          shift and go to state 17
    SETOF           shift and go to state 18
    MUTABLELISTOF   shift and go to state 19
    STRING          shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    NULL            shift and go to state 58
    NOT             shift and go to state 59
    INTV            shift and go to state 54
    FLOATV          shift and go to state 60

    expresion                      shift and go to state 73
    llamada                        shift and go to state 50
    valor                          shift and go to state 52
    number                         shift and go to state 55

state 34

    (18) estructuraControl -> ELSE instrucciones .

    FUNCTION        reduce using rule 18 (estructuraControl -> ELSE instrucciones .)
    ID              reduce using rule 18 (estructuraControl -> ELSE instrucciones .)
    IF              reduce using rule 18 (estructuraControl -> ELSE instrucciones .)
    ELSE            reduce using rule 18 (estructuraControl -> ELSE instrucciones .)
    PRINTLN         reduce using rule 18 (estructuraControl -> ELSE instrucciones .)
    LISTOF          reduce using rule 18 (estructuraControl -> ELSE instrucciones .)
    SETOF           reduce using rule 18 (estructuraControl -> ELSE instrucciones .)
    MUTABLELISTOF   reduce using rule 18 (estructuraControl -> ELSE instrucciones .)
    STRING          reduce using rule 18 (estructuraControl -> ELSE instrucciones .)
    VAR             reduce using rule 18 (estructuraControl -> ELSE instrucciones .)
    VAL             reduce using rule 18 (estructuraControl -> ELSE instrucciones .)
    WHILE           reduce using rule 18 (estructuraControl -> ELSE instrucciones .)
    FOR             reduce using rule 18 (estructuraControl -> ELSE instrucciones .)
    $end            reduce using rule 18 (estructuraControl -> ELSE instrucciones .)
    RCBRACKET       reduce using rule 18 (estructuraControl -> ELSE instrucciones .)
    RETURN          reduce using rule 18 (estructuraControl -> ELSE instrucciones .)


state 35

    (10) instrucciones -> LCBRACKET . cuerpo RCBRACKET
    (1) cuerpo -> . sentencia
    (2) cuerpo -> . function
    (3) cuerpo -> . sentencia cuerpo
    (4) cuerpo -> . function cuerpo
    (5) sentencia -> . asignacion
    (6) sentencia -> . estructuraControl
    (7) sentencia -> . bucles
    (8) sentencia -> . llamada
    (9) sentencia -> . declaracion
    (23) function -> . FUNCTION ID LPAREN params RPAREN instruccionesF
    (24) function -> . FUNCTION ID LPAREN RPAREN instruccionesF
    (30) function -> . ID LSBRACKET expresion RSBRACKET
    (55) asignacion -> . ID ASSIGN expresion
    (56) asignacion -> . declarador ID ASSIGN expresion
    (17) estructuraControl -> . IF LPAREN expresion RPAREN instrucciones
    (18) estructuraControl -> . ELSE instrucciones
    (19) bucles -> . while instrucciones
    (20) bucles -> . for instrucciones
    (25) llamada -> . PRINTLN LPAREN expresion RPAREN
    (26) llamada -> . ID LPAREN args RPAREN
    (27) llamada -> . ID LPAREN RPAREN
    (28) llamada -> . ID . ID LPAREN args RPAREN
    (29) llamada -> . ID . ID LPAREN RPAREN
    (58) llamada -> . LISTOF LPAREN args RPAREN
    (59) llamada -> . SETOF LPAREN args RPAREN
    (60) llamada -> . MUTABLELISTOF LPAREN args RPAREN
    (81) llamada -> . ID . LENGTH LPAREN RPAREN
    (82) llamada -> . STRING . LENGTH LPAREN RPAREN
    (83) llamada -> . ID . EQUALSM LPAREN ID RPAREN
    (84) llamada -> . STRING . EQUALSM LPAREN ID RPAREN
    (85) llamada -> . STRING . EQUALSM LPAREN STRING RPAREN
    (86) llamada -> . ID . EQUALSM LPAREN STRING RPAREN
    (87) llamada -> . ID . COUNT LPAREN RPAREN
    (88) llamada -> . ID . FIRST LPAREN RPAREN
    (89) llamada -> . ID . LAST LPAREN RPAREN
    (90) llamada -> . ID . GET LPAREN INTV RPAREN
    (91) llamada -> . ID . GET LPAREN ID RPAREN
    (57) declaracion -> . declarador ID
    (53) declarador -> . VAR
    (54) declarador -> . VAL
    (21) while -> . WHILE LPAREN expresion RPAREN
    (22) for -> . FOR LPAREN ID IN ID RPAREN

    FUNCTION        shift and go to state 9
    ID              shift and go to state 10
    IF              shift and go to state 12
    ELSE            shift and go to state 13
    PRINTLN         shift and go to state 16
    LISTOF          shift and go to state 17
    SETOF           shift and go to state 18
    MUTABLELISTOF   shift and go to state 19
    STRING          shift and go to state 20
    VAR             shift and go to state 21
    VAL             shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24

    cuerpo                         shift and go to state 74
    sentencia                      shift and go to state 2
    function                       shift and go to state 3
    asignacion                     shift and go to state 4
    estructuraControl              shift and go to state 5
    bucles                         shift and go to state 6
    llamada                        shift and go to state 7
    declaracion                    shift and go to state 8
    declarador                     shift and go to state 11
    while                          shift and go to state 14
    for                            shift and go to state 15

state 36

    (11) instrucciones -> sentencia .

    FUNCTION        reduce using rule 11 (instrucciones -> sentencia .)
    ID              reduce using rule 11 (instrucciones -> sentencia .)
    IF              reduce using rule 11 (instrucciones -> sentencia .)
    ELSE            reduce using rule 11 (instrucciones -> sentencia .)
    PRINTLN         reduce using rule 11 (instrucciones -> sentencia .)
    LISTOF          reduce using rule 11 (instrucciones -> sentencia .)
    SETOF           reduce using rule 11 (instrucciones -> sentencia .)
    MUTABLELISTOF   reduce using rule 11 (instrucciones -> sentencia .)
    STRING          reduce using rule 11 (instrucciones -> sentencia .)
    VAR             reduce using rule 11 (instrucciones -> sentencia .)
    VAL             reduce using rule 11 (instrucciones -> sentencia .)
    WHILE           reduce using rule 11 (instrucciones -> sentencia .)
    FOR             reduce using rule 11 (instrucciones -> sentencia .)
    $end            reduce using rule 11 (instrucciones -> sentencia .)
    RCBRACKET       reduce using rule 11 (instrucciones -> sentencia .)
    RETURN          reduce using rule 11 (instrucciones -> sentencia .)


state 37

    (55) asignacion -> ID . ASSIGN expresion
    (26) llamada -> ID . LPAREN args RPAREN
    (27) llamada -> ID . LPAREN RPAREN
    (28) llamada -> ID . . ID LPAREN args RPAREN
    (29) llamada -> ID . . ID LPAREN RPAREN
    (81) llamada -> ID . . LENGTH LPAREN RPAREN
    (83) llamada -> ID . . EQUALSM LPAREN ID RPAREN
    (86) llamada -> ID . . EQUALSM LPAREN STRING RPAREN
    (87) llamada -> ID . . COUNT LPAREN RPAREN
    (88) llamada -> ID . . FIRST LPAREN RPAREN
    (89) llamada -> ID . . LAST LPAREN RPAREN
    (90) llamada -> ID . . GET LPAREN INTV RPAREN
    (91) llamada -> ID . . GET LPAREN ID RPAREN

    ASSIGN          shift and go to state 29
    LPAREN          shift and go to state 30
    .               shift and go to state 31


state 38

    (19) bucles -> while instrucciones .

    FUNCTION        reduce using rule 19 (bucles -> while instrucciones .)
    ID              reduce using rule 19 (bucles -> while instrucciones .)
    IF              reduce using rule 19 (bucles -> while instrucciones .)
    ELSE            reduce using rule 19 (bucles -> while instrucciones .)
    PRINTLN         reduce using rule 19 (bucles -> while instrucciones .)
    LISTOF          reduce using rule 19 (bucles -> while instrucciones .)
    SETOF           reduce using rule 19 (bucles -> while instrucciones .)
    MUTABLELISTOF   reduce using rule 19 (bucles -> while instrucciones .)
    STRING          reduce using rule 19 (bucles -> while instrucciones .)
    VAR             reduce using rule 19 (bucles -> while instrucciones .)
    VAL             reduce using rule 19 (bucles -> while instrucciones .)
    WHILE           reduce using rule 19 (bucles -> while instrucciones .)
    FOR             reduce using rule 19 (bucles -> while instrucciones .)
    $end            reduce using rule 19 (bucles -> while instrucciones .)
    RCBRACKET       reduce using rule 19 (bucles -> while instrucciones .)
    RETURN          reduce using rule 19 (bucles -> while instrucciones .)


state 39

    (20) bucles -> for instrucciones .

    FUNCTION        reduce using rule 20 (bucles -> for instrucciones .)
    ID              reduce using rule 20 (bucles -> for instrucciones .)
    IF              reduce using rule 20 (bucles -> for instrucciones .)
    ELSE            reduce using rule 20 (bucles -> for instrucciones .)
    PRINTLN         reduce using rule 20 (bucles -> for instrucciones .)
    LISTOF          reduce using rule 20 (bucles -> for instrucciones .)
    SETOF           reduce using rule 20 (bucles -> for instrucciones .)
    MUTABLELISTOF   reduce using rule 20 (bucles -> for instrucciones .)
    STRING          reduce using rule 20 (bucles -> for instrucciones .)
    VAR             reduce using rule 20 (bucles -> for instrucciones .)
    VAL             reduce using rule 20 (bucles -> for instrucciones .)
    WHILE           reduce using rule 20 (bucles -> for instrucciones .)
    FOR             reduce using rule 20 (bucles -> for instrucciones .)
    $end            reduce using rule 20 (bucles -> for instrucciones .)
    RCBRACKET       reduce using rule 20 (bucles -> for instrucciones .)
    RETURN          reduce using rule 20 (bucles -> for instrucciones .)


state 40

    (25) llamada -> PRINTLN LPAREN . expresion RPAREN
    (61) expresion -> . llamada
    (62) expresion -> . LPAREN expresion RPAREN
    (63) expresion -> . valor
    (64) expresion -> . expresion operadoresMat expresion
    (65) expresion -> . expresion operadoresLog expresion
    (25) llamada -> . PRINTLN LPAREN expresion RPAREN
    (26) llamada -> . ID LPAREN args RPAREN
    (27) llamada -> . ID LPAREN RPAREN
    (28) llamada -> . ID . ID LPAREN args RPAREN
    (29) llamada -> . ID . ID LPAREN RPAREN
    (58) llamada -> . LISTOF LPAREN args RPAREN
    (59) llamada -> . SETOF LPAREN args RPAREN
    (60) llamada -> . MUTABLELISTOF LPAREN args RPAREN
    (81) llamada -> . ID . LENGTH LPAREN RPAREN
    (82) llamada -> . STRING . LENGTH LPAREN RPAREN
    (83) llamada -> . ID . EQUALSM LPAREN ID RPAREN
    (84) llamada -> . STRING . EQUALSM LPAREN ID RPAREN
    (85) llamada -> . STRING . EQUALSM LPAREN STRING RPAREN
    (86) llamada -> . ID . EQUALSM LPAREN STRING RPAREN
    (87) llamada -> . ID . COUNT LPAREN RPAREN
    (88) llamada -> . ID . FIRST LPAREN RPAREN
    (89) llamada -> . ID . LAST LPAREN RPAREN
    (90) llamada -> . ID . GET LPAREN INTV RPAREN
    (91) llamada -> . ID . GET LPAREN ID RPAREN
    (46) valor -> . ID
    (47) valor -> . number
    (48) valor -> . STRING
    (49) valor -> . TRUE
    (50) valor -> . FALSE
    (51) valor -> . NULL
    (52) valor -> . NOT valor
    (79) number -> . INTV
    (80) number -> . FLOATV

    LPAREN          shift and go to state 51
    PRINTLN         shift and go to state 16
    ID              shift and go to state 48
    LISTOF          shift and go to state 17
    SETOF           shift and go to state 18
    MUTABLELISTOF   shift and go to state 19
    STRING          shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    NULL            shift and go to state 58
    NOT             shift and go to state 59
    INTV            shift and go to state 54
    FLOATV          shift and go to state 60

    expresion                      shift and go to state 75
    llamada                        shift and go to state 50
    valor                          shift and go to state 52
    number                         shift and go to state 55

state 41

    (58) llamada -> LISTOF LPAREN . args RPAREN
    (44) args -> . expresion
    (45) args -> . args , args
    (61) expresion -> . llamada
    (62) expresion -> . LPAREN expresion RPAREN
    (63) expresion -> . valor
    (64) expresion -> . expresion operadoresMat expresion
    (65) expresion -> . expresion operadoresLog expresion
    (25) llamada -> . PRINTLN LPAREN expresion RPAREN
    (26) llamada -> . ID LPAREN args RPAREN
    (27) llamada -> . ID LPAREN RPAREN
    (28) llamada -> . ID . ID LPAREN args RPAREN
    (29) llamada -> . ID . ID LPAREN RPAREN
    (58) llamada -> . LISTOF LPAREN args RPAREN
    (59) llamada -> . SETOF LPAREN args RPAREN
    (60) llamada -> . MUTABLELISTOF LPAREN args RPAREN
    (81) llamada -> . ID . LENGTH LPAREN RPAREN
    (82) llamada -> . STRING . LENGTH LPAREN RPAREN
    (83) llamada -> . ID . EQUALSM LPAREN ID RPAREN
    (84) llamada -> . STRING . EQUALSM LPAREN ID RPAREN
    (85) llamada -> . STRING . EQUALSM LPAREN STRING RPAREN
    (86) llamada -> . ID . EQUALSM LPAREN STRING RPAREN
    (87) llamada -> . ID . COUNT LPAREN RPAREN
    (88) llamada -> . ID . FIRST LPAREN RPAREN
    (89) llamada -> . ID . LAST LPAREN RPAREN
    (90) llamada -> . ID . GET LPAREN INTV RPAREN
    (91) llamada -> . ID . GET LPAREN ID RPAREN
    (46) valor -> . ID
    (47) valor -> . number
    (48) valor -> . STRING
    (49) valor -> . TRUE
    (50) valor -> . FALSE
    (51) valor -> . NULL
    (52) valor -> . NOT valor
    (79) number -> . INTV
    (80) number -> . FLOATV

    LPAREN          shift and go to state 51
    PRINTLN         shift and go to state 16
    ID              shift and go to state 48
    LISTOF          shift and go to state 17
    SETOF           shift and go to state 18
    MUTABLELISTOF   shift and go to state 19
    STRING          shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    NULL            shift and go to state 58
    NOT             shift and go to state 59
    INTV            shift and go to state 54
    FLOATV          shift and go to state 60

    args                           shift and go to state 76
    expresion                      shift and go to state 64
    llamada                        shift and go to state 50
    valor                          shift and go to state 52
    number                         shift and go to state 55

state 42

    (59) llamada -> SETOF LPAREN . args RPAREN
    (44) args -> . expresion
    (45) args -> . args , args
    (61) expresion -> . llamada
    (62) expresion -> . LPAREN expresion RPAREN
    (63) expresion -> . valor
    (64) expresion -> . expresion operadoresMat expresion
    (65) expresion -> . expresion operadoresLog expresion
    (25) llamada -> . PRINTLN LPAREN expresion RPAREN
    (26) llamada -> . ID LPAREN args RPAREN
    (27) llamada -> . ID LPAREN RPAREN
    (28) llamada -> . ID . ID LPAREN args RPAREN
    (29) llamada -> . ID . ID LPAREN RPAREN
    (58) llamada -> . LISTOF LPAREN args RPAREN
    (59) llamada -> . SETOF LPAREN args RPAREN
    (60) llamada -> . MUTABLELISTOF LPAREN args RPAREN
    (81) llamada -> . ID . LENGTH LPAREN RPAREN
    (82) llamada -> . STRING . LENGTH LPAREN RPAREN
    (83) llamada -> . ID . EQUALSM LPAREN ID RPAREN
    (84) llamada -> . STRING . EQUALSM LPAREN ID RPAREN
    (85) llamada -> . STRING . EQUALSM LPAREN STRING RPAREN
    (86) llamada -> . ID . EQUALSM LPAREN STRING RPAREN
    (87) llamada -> . ID . COUNT LPAREN RPAREN
    (88) llamada -> . ID . FIRST LPAREN RPAREN
    (89) llamada -> . ID . LAST LPAREN RPAREN
    (90) llamada -> . ID . GET LPAREN INTV RPAREN
    (91) llamada -> . ID . GET LPAREN ID RPAREN
    (46) valor -> . ID
    (47) valor -> . number
    (48) valor -> . STRING
    (49) valor -> . TRUE
    (50) valor -> . FALSE
    (51) valor -> . NULL
    (52) valor -> . NOT valor
    (79) number -> . INTV
    (80) number -> . FLOATV

    LPAREN          shift and go to state 51
    PRINTLN         shift and go to state 16
    ID              shift and go to state 48
    LISTOF          shift and go to state 17
    SETOF           shift and go to state 18
    MUTABLELISTOF   shift and go to state 19
    STRING          shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    NULL            shift and go to state 58
    NOT             shift and go to state 59
    INTV            shift and go to state 54
    FLOATV          shift and go to state 60

    args                           shift and go to state 77
    expresion                      shift and go to state 64
    llamada                        shift and go to state 50
    valor                          shift and go to state 52
    number                         shift and go to state 55

state 43

    (60) llamada -> MUTABLELISTOF LPAREN . args RPAREN
    (44) args -> . expresion
    (45) args -> . args , args
    (61) expresion -> . llamada
    (62) expresion -> . LPAREN expresion RPAREN
    (63) expresion -> . valor
    (64) expresion -> . expresion operadoresMat expresion
    (65) expresion -> . expresion operadoresLog expresion
    (25) llamada -> . PRINTLN LPAREN expresion RPAREN
    (26) llamada -> . ID LPAREN args RPAREN
    (27) llamada -> . ID LPAREN RPAREN
    (28) llamada -> . ID . ID LPAREN args RPAREN
    (29) llamada -> . ID . ID LPAREN RPAREN
    (58) llamada -> . LISTOF LPAREN args RPAREN
    (59) llamada -> . SETOF LPAREN args RPAREN
    (60) llamada -> . MUTABLELISTOF LPAREN args RPAREN
    (81) llamada -> . ID . LENGTH LPAREN RPAREN
    (82) llamada -> . STRING . LENGTH LPAREN RPAREN
    (83) llamada -> . ID . EQUALSM LPAREN ID RPAREN
    (84) llamada -> . STRING . EQUALSM LPAREN ID RPAREN
    (85) llamada -> . STRING . EQUALSM LPAREN STRING RPAREN
    (86) llamada -> . ID . EQUALSM LPAREN STRING RPAREN
    (87) llamada -> . ID . COUNT LPAREN RPAREN
    (88) llamada -> . ID . FIRST LPAREN RPAREN
    (89) llamada -> . ID . LAST LPAREN RPAREN
    (90) llamada -> . ID . GET LPAREN INTV RPAREN
    (91) llamada -> . ID . GET LPAREN ID RPAREN
    (46) valor -> . ID
    (47) valor -> . number
    (48) valor -> . STRING
    (49) valor -> . TRUE
    (50) valor -> . FALSE
    (51) valor -> . NULL
    (52) valor -> . NOT valor
    (79) number -> . INTV
    (80) number -> . FLOATV

    LPAREN          shift and go to state 51
    PRINTLN         shift and go to state 16
    ID              shift and go to state 48
    LISTOF          shift and go to state 17
    SETOF           shift and go to state 18
    MUTABLELISTOF   shift and go to state 19
    STRING          shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    NULL            shift and go to state 58
    NOT             shift and go to state 59
    INTV            shift and go to state 54
    FLOATV          shift and go to state 60

    args                           shift and go to state 78
    expresion                      shift and go to state 64
    llamada                        shift and go to state 50
    valor                          shift and go to state 52
    number                         shift and go to state 55

state 44

    (82) llamada -> STRING . . LENGTH LPAREN RPAREN
    (84) llamada -> STRING . . EQUALSM LPAREN ID RPAREN
    (85) llamada -> STRING . . EQUALSM LPAREN STRING RPAREN

    LENGTH          shift and go to state 79
    EQUALSM         shift and go to state 80


state 45

    (21) while -> WHILE LPAREN . expresion RPAREN
    (61) expresion -> . llamada
    (62) expresion -> . LPAREN expresion RPAREN
    (63) expresion -> . valor
    (64) expresion -> . expresion operadoresMat expresion
    (65) expresion -> . expresion operadoresLog expresion
    (25) llamada -> . PRINTLN LPAREN expresion RPAREN
    (26) llamada -> . ID LPAREN args RPAREN
    (27) llamada -> . ID LPAREN RPAREN
    (28) llamada -> . ID . ID LPAREN args RPAREN
    (29) llamada -> . ID . ID LPAREN RPAREN
    (58) llamada -> . LISTOF LPAREN args RPAREN
    (59) llamada -> . SETOF LPAREN args RPAREN
    (60) llamada -> . MUTABLELISTOF LPAREN args RPAREN
    (81) llamada -> . ID . LENGTH LPAREN RPAREN
    (82) llamada -> . STRING . LENGTH LPAREN RPAREN
    (83) llamada -> . ID . EQUALSM LPAREN ID RPAREN
    (84) llamada -> . STRING . EQUALSM LPAREN ID RPAREN
    (85) llamada -> . STRING . EQUALSM LPAREN STRING RPAREN
    (86) llamada -> . ID . EQUALSM LPAREN STRING RPAREN
    (87) llamada -> . ID . COUNT LPAREN RPAREN
    (88) llamada -> . ID . FIRST LPAREN RPAREN
    (89) llamada -> . ID . LAST LPAREN RPAREN
    (90) llamada -> . ID . GET LPAREN INTV RPAREN
    (91) llamada -> . ID . GET LPAREN ID RPAREN
    (46) valor -> . ID
    (47) valor -> . number
    (48) valor -> . STRING
    (49) valor -> . TRUE
    (50) valor -> . FALSE
    (51) valor -> . NULL
    (52) valor -> . NOT valor
    (79) number -> . INTV
    (80) number -> . FLOATV

    LPAREN          shift and go to state 51
    PRINTLN         shift and go to state 16
    ID              shift and go to state 48
    LISTOF          shift and go to state 17
    SETOF           shift and go to state 18
    MUTABLELISTOF   shift and go to state 19
    STRING          shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    NULL            shift and go to state 58
    NOT             shift and go to state 59
    INTV            shift and go to state 54
    FLOATV          shift and go to state 60

    expresion                      shift and go to state 81
    llamada                        shift and go to state 50
    valor                          shift and go to state 52
    number                         shift and go to state 55

state 46

    (22) for -> FOR LPAREN . ID IN ID RPAREN

    ID              shift and go to state 82


state 47

    (23) function -> FUNCTION ID LPAREN . params RPAREN instruccionesF
    (24) function -> FUNCTION ID LPAREN . RPAREN instruccionesF
    (42) params -> . ID : dato
    (43) params -> . params , params

    RPAREN          shift and go to state 85
    ID              shift and go to state 83

    params                         shift and go to state 84

state 48

    (26) llamada -> ID . LPAREN args RPAREN
    (27) llamada -> ID . LPAREN RPAREN
    (28) llamada -> ID . . ID LPAREN args RPAREN
    (29) llamada -> ID . . ID LPAREN RPAREN
    (81) llamada -> ID . . LENGTH LPAREN RPAREN
    (83) llamada -> ID . . EQUALSM LPAREN ID RPAREN
    (86) llamada -> ID . . EQUALSM LPAREN STRING RPAREN
    (87) llamada -> ID . . COUNT LPAREN RPAREN
    (88) llamada -> ID . . FIRST LPAREN RPAREN
    (89) llamada -> ID . . LAST LPAREN RPAREN
    (90) llamada -> ID . . GET LPAREN INTV RPAREN
    (91) llamada -> ID . . GET LPAREN ID RPAREN
    (46) valor -> ID .

    LPAREN          shift and go to state 30
    .               shift and go to state 31
    RSBRACKET       reduce using rule 46 (valor -> ID .)
    MINUS           reduce using rule 46 (valor -> ID .)
    PLUS            reduce using rule 46 (valor -> ID .)
    TIMES           reduce using rule 46 (valor -> ID .)
    DIVIDE          reduce using rule 46 (valor -> ID .)
    MODULE          reduce using rule 46 (valor -> ID .)
    OR              reduce using rule 46 (valor -> ID .)
    AND             reduce using rule 46 (valor -> ID .)
    EQUALS          reduce using rule 46 (valor -> ID .)
    NOTEQUALS       reduce using rule 46 (valor -> ID .)
    GREATER         reduce using rule 46 (valor -> ID .)
    LOWER           reduce using rule 46 (valor -> ID .)
    GREATERE        reduce using rule 46 (valor -> ID .)
    LOWERE          reduce using rule 46 (valor -> ID .)
    FUNCTION        reduce using rule 46 (valor -> ID .)
    ID              reduce using rule 46 (valor -> ID .)
    IF              reduce using rule 46 (valor -> ID .)
    ELSE            reduce using rule 46 (valor -> ID .)
    PRINTLN         reduce using rule 46 (valor -> ID .)
    LISTOF          reduce using rule 46 (valor -> ID .)
    SETOF           reduce using rule 46 (valor -> ID .)
    MUTABLELISTOF   reduce using rule 46 (valor -> ID .)
    STRING          reduce using rule 46 (valor -> ID .)
    VAR             reduce using rule 46 (valor -> ID .)
    VAL             reduce using rule 46 (valor -> ID .)
    WHILE           reduce using rule 46 (valor -> ID .)
    FOR             reduce using rule 46 (valor -> ID .)
    $end            reduce using rule 46 (valor -> ID .)
    RCBRACKET       reduce using rule 46 (valor -> ID .)
    RETURN          reduce using rule 46 (valor -> ID .)
    RPAREN          reduce using rule 46 (valor -> ID .)
    ,               reduce using rule 46 (valor -> ID .)


state 49

    (30) function -> ID LSBRACKET expresion . RSBRACKET
    (64) expresion -> expresion . operadoresMat expresion
    (65) expresion -> expresion . operadoresLog expresion
    (74) operadoresMat -> . MINUS
    (75) operadoresMat -> . PLUS
    (76) operadoresMat -> . TIMES
    (77) operadoresMat -> . DIVIDE
    (78) operadoresMat -> . MODULE
    (66) operadoresLog -> . OR
    (67) operadoresLog -> . AND
    (68) operadoresLog -> . EQUALS
    (69) operadoresLog -> . NOTEQUALS
    (70) operadoresLog -> . GREATER
    (71) operadoresLog -> . LOWER
    (72) operadoresLog -> . GREATERE
    (73) operadoresLog -> . LOWERE

    RSBRACKET       shift and go to state 86
    MINUS           shift and go to state 89
    PLUS            shift and go to state 90
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 92
    MODULE          shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95
    EQUALS          shift and go to state 96
    NOTEQUALS       shift and go to state 97
    GREATER         shift and go to state 98
    LOWER           shift and go to state 99
    GREATERE        shift and go to state 100
    LOWERE          shift and go to state 101

    operadoresMat                  shift and go to state 87
    operadoresLog                  shift and go to state 88

state 50

    (61) expresion -> llamada .

    RSBRACKET       reduce using rule 61 (expresion -> llamada .)
    MINUS           reduce using rule 61 (expresion -> llamada .)
    PLUS            reduce using rule 61 (expresion -> llamada .)
    TIMES           reduce using rule 61 (expresion -> llamada .)
    DIVIDE          reduce using rule 61 (expresion -> llamada .)
    MODULE          reduce using rule 61 (expresion -> llamada .)
    OR              reduce using rule 61 (expresion -> llamada .)
    AND             reduce using rule 61 (expresion -> llamada .)
    EQUALS          reduce using rule 61 (expresion -> llamada .)
    NOTEQUALS       reduce using rule 61 (expresion -> llamada .)
    GREATER         reduce using rule 61 (expresion -> llamada .)
    LOWER           reduce using rule 61 (expresion -> llamada .)
    GREATERE        reduce using rule 61 (expresion -> llamada .)
    LOWERE          reduce using rule 61 (expresion -> llamada .)
    FUNCTION        reduce using rule 61 (expresion -> llamada .)
    ID              reduce using rule 61 (expresion -> llamada .)
    IF              reduce using rule 61 (expresion -> llamada .)
    ELSE            reduce using rule 61 (expresion -> llamada .)
    PRINTLN         reduce using rule 61 (expresion -> llamada .)
    LISTOF          reduce using rule 61 (expresion -> llamada .)
    SETOF           reduce using rule 61 (expresion -> llamada .)
    MUTABLELISTOF   reduce using rule 61 (expresion -> llamada .)
    STRING          reduce using rule 61 (expresion -> llamada .)
    VAR             reduce using rule 61 (expresion -> llamada .)
    VAL             reduce using rule 61 (expresion -> llamada .)
    WHILE           reduce using rule 61 (expresion -> llamada .)
    FOR             reduce using rule 61 (expresion -> llamada .)
    $end            reduce using rule 61 (expresion -> llamada .)
    RCBRACKET       reduce using rule 61 (expresion -> llamada .)
    RETURN          reduce using rule 61 (expresion -> llamada .)
    RPAREN          reduce using rule 61 (expresion -> llamada .)
    ,               reduce using rule 61 (expresion -> llamada .)


state 51

    (62) expresion -> LPAREN . expresion RPAREN
    (61) expresion -> . llamada
    (62) expresion -> . LPAREN expresion RPAREN
    (63) expresion -> . valor
    (64) expresion -> . expresion operadoresMat expresion
    (65) expresion -> . expresion operadoresLog expresion
    (25) llamada -> . PRINTLN LPAREN expresion RPAREN
    (26) llamada -> . ID LPAREN args RPAREN
    (27) llamada -> . ID LPAREN RPAREN
    (28) llamada -> . ID . ID LPAREN args RPAREN
    (29) llamada -> . ID . ID LPAREN RPAREN
    (58) llamada -> . LISTOF LPAREN args RPAREN
    (59) llamada -> . SETOF LPAREN args RPAREN
    (60) llamada -> . MUTABLELISTOF LPAREN args RPAREN
    (81) llamada -> . ID . LENGTH LPAREN RPAREN
    (82) llamada -> . STRING . LENGTH LPAREN RPAREN
    (83) llamada -> . ID . EQUALSM LPAREN ID RPAREN
    (84) llamada -> . STRING . EQUALSM LPAREN ID RPAREN
    (85) llamada -> . STRING . EQUALSM LPAREN STRING RPAREN
    (86) llamada -> . ID . EQUALSM LPAREN STRING RPAREN
    (87) llamada -> . ID . COUNT LPAREN RPAREN
    (88) llamada -> . ID . FIRST LPAREN RPAREN
    (89) llamada -> . ID . LAST LPAREN RPAREN
    (90) llamada -> . ID . GET LPAREN INTV RPAREN
    (91) llamada -> . ID . GET LPAREN ID RPAREN
    (46) valor -> . ID
    (47) valor -> . number
    (48) valor -> . STRING
    (49) valor -> . TRUE
    (50) valor -> . FALSE
    (51) valor -> . NULL
    (52) valor -> . NOT valor
    (79) number -> . INTV
    (80) number -> . FLOATV

    LPAREN          shift and go to state 51
    PRINTLN         shift and go to state 16
    ID              shift and go to state 48
    LISTOF          shift and go to state 17
    SETOF           shift and go to state 18
    MUTABLELISTOF   shift and go to state 19
    STRING          shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    NULL            shift and go to state 58
    NOT             shift and go to state 59
    INTV            shift and go to state 54
    FLOATV          shift and go to state 60

    expresion                      shift and go to state 102
    llamada                        shift and go to state 50
    valor                          shift and go to state 52
    number                         shift and go to state 55

state 52

    (63) expresion -> valor .

    RSBRACKET       reduce using rule 63 (expresion -> valor .)
    MINUS           reduce using rule 63 (expresion -> valor .)
    PLUS            reduce using rule 63 (expresion -> valor .)
    TIMES           reduce using rule 63 (expresion -> valor .)
    DIVIDE          reduce using rule 63 (expresion -> valor .)
    MODULE          reduce using rule 63 (expresion -> valor .)
    OR              reduce using rule 63 (expresion -> valor .)
    AND             reduce using rule 63 (expresion -> valor .)
    EQUALS          reduce using rule 63 (expresion -> valor .)
    NOTEQUALS       reduce using rule 63 (expresion -> valor .)
    GREATER         reduce using rule 63 (expresion -> valor .)
    LOWER           reduce using rule 63 (expresion -> valor .)
    GREATERE        reduce using rule 63 (expresion -> valor .)
    LOWERE          reduce using rule 63 (expresion -> valor .)
    FUNCTION        reduce using rule 63 (expresion -> valor .)
    ID              reduce using rule 63 (expresion -> valor .)
    IF              reduce using rule 63 (expresion -> valor .)
    ELSE            reduce using rule 63 (expresion -> valor .)
    PRINTLN         reduce using rule 63 (expresion -> valor .)
    LISTOF          reduce using rule 63 (expresion -> valor .)
    SETOF           reduce using rule 63 (expresion -> valor .)
    MUTABLELISTOF   reduce using rule 63 (expresion -> valor .)
    STRING          reduce using rule 63 (expresion -> valor .)
    VAR             reduce using rule 63 (expresion -> valor .)
    VAL             reduce using rule 63 (expresion -> valor .)
    WHILE           reduce using rule 63 (expresion -> valor .)
    FOR             reduce using rule 63 (expresion -> valor .)
    $end            reduce using rule 63 (expresion -> valor .)
    RCBRACKET       reduce using rule 63 (expresion -> valor .)
    RETURN          reduce using rule 63 (expresion -> valor .)
    RPAREN          reduce using rule 63 (expresion -> valor .)
    ,               reduce using rule 63 (expresion -> valor .)


state 53

    (82) llamada -> STRING . . LENGTH LPAREN RPAREN
    (84) llamada -> STRING . . EQUALSM LPAREN ID RPAREN
    (85) llamada -> STRING . . EQUALSM LPAREN STRING RPAREN
    (48) valor -> STRING .

    .               shift and go to state 44
    RSBRACKET       reduce using rule 48 (valor -> STRING .)
    MINUS           reduce using rule 48 (valor -> STRING .)
    PLUS            reduce using rule 48 (valor -> STRING .)
    TIMES           reduce using rule 48 (valor -> STRING .)
    DIVIDE          reduce using rule 48 (valor -> STRING .)
    MODULE          reduce using rule 48 (valor -> STRING .)
    OR              reduce using rule 48 (valor -> STRING .)
    AND             reduce using rule 48 (valor -> STRING .)
    EQUALS          reduce using rule 48 (valor -> STRING .)
    NOTEQUALS       reduce using rule 48 (valor -> STRING .)
    GREATER         reduce using rule 48 (valor -> STRING .)
    LOWER           reduce using rule 48 (valor -> STRING .)
    GREATERE        reduce using rule 48 (valor -> STRING .)
    LOWERE          reduce using rule 48 (valor -> STRING .)
    FUNCTION        reduce using rule 48 (valor -> STRING .)
    ID              reduce using rule 48 (valor -> STRING .)
    IF              reduce using rule 48 (valor -> STRING .)
    ELSE            reduce using rule 48 (valor -> STRING .)
    PRINTLN         reduce using rule 48 (valor -> STRING .)
    LISTOF          reduce using rule 48 (valor -> STRING .)
    SETOF           reduce using rule 48 (valor -> STRING .)
    MUTABLELISTOF   reduce using rule 48 (valor -> STRING .)
    STRING          reduce using rule 48 (valor -> STRING .)
    VAR             reduce using rule 48 (valor -> STRING .)
    VAL             reduce using rule 48 (valor -> STRING .)
    WHILE           reduce using rule 48 (valor -> STRING .)
    FOR             reduce using rule 48 (valor -> STRING .)
    $end            reduce using rule 48 (valor -> STRING .)
    RCBRACKET       reduce using rule 48 (valor -> STRING .)
    RETURN          reduce using rule 48 (valor -> STRING .)
    RPAREN          reduce using rule 48 (valor -> STRING .)
    ,               reduce using rule 48 (valor -> STRING .)


state 54

    (79) number -> INTV .

    RSBRACKET       reduce using rule 79 (number -> INTV .)
    MINUS           reduce using rule 79 (number -> INTV .)
    PLUS            reduce using rule 79 (number -> INTV .)
    TIMES           reduce using rule 79 (number -> INTV .)
    DIVIDE          reduce using rule 79 (number -> INTV .)
    MODULE          reduce using rule 79 (number -> INTV .)
    OR              reduce using rule 79 (number -> INTV .)
    AND             reduce using rule 79 (number -> INTV .)
    EQUALS          reduce using rule 79 (number -> INTV .)
    NOTEQUALS       reduce using rule 79 (number -> INTV .)
    GREATER         reduce using rule 79 (number -> INTV .)
    LOWER           reduce using rule 79 (number -> INTV .)
    GREATERE        reduce using rule 79 (number -> INTV .)
    LOWERE          reduce using rule 79 (number -> INTV .)
    FUNCTION        reduce using rule 79 (number -> INTV .)
    ID              reduce using rule 79 (number -> INTV .)
    IF              reduce using rule 79 (number -> INTV .)
    ELSE            reduce using rule 79 (number -> INTV .)
    PRINTLN         reduce using rule 79 (number -> INTV .)
    LISTOF          reduce using rule 79 (number -> INTV .)
    SETOF           reduce using rule 79 (number -> INTV .)
    MUTABLELISTOF   reduce using rule 79 (number -> INTV .)
    STRING          reduce using rule 79 (number -> INTV .)
    VAR             reduce using rule 79 (number -> INTV .)
    VAL             reduce using rule 79 (number -> INTV .)
    WHILE           reduce using rule 79 (number -> INTV .)
    FOR             reduce using rule 79 (number -> INTV .)
    $end            reduce using rule 79 (number -> INTV .)
    RCBRACKET       reduce using rule 79 (number -> INTV .)
    RETURN          reduce using rule 79 (number -> INTV .)
    RPAREN          reduce using rule 79 (number -> INTV .)
    ,               reduce using rule 79 (number -> INTV .)


state 55

    (47) valor -> number .

    RSBRACKET       reduce using rule 47 (valor -> number .)
    MINUS           reduce using rule 47 (valor -> number .)
    PLUS            reduce using rule 47 (valor -> number .)
    TIMES           reduce using rule 47 (valor -> number .)
    DIVIDE          reduce using rule 47 (valor -> number .)
    MODULE          reduce using rule 47 (valor -> number .)
    OR              reduce using rule 47 (valor -> number .)
    AND             reduce using rule 47 (valor -> number .)
    EQUALS          reduce using rule 47 (valor -> number .)
    NOTEQUALS       reduce using rule 47 (valor -> number .)
    GREATER         reduce using rule 47 (valor -> number .)
    LOWER           reduce using rule 47 (valor -> number .)
    GREATERE        reduce using rule 47 (valor -> number .)
    LOWERE          reduce using rule 47 (valor -> number .)
    FUNCTION        reduce using rule 47 (valor -> number .)
    ID              reduce using rule 47 (valor -> number .)
    IF              reduce using rule 47 (valor -> number .)
    ELSE            reduce using rule 47 (valor -> number .)
    PRINTLN         reduce using rule 47 (valor -> number .)
    LISTOF          reduce using rule 47 (valor -> number .)
    SETOF           reduce using rule 47 (valor -> number .)
    MUTABLELISTOF   reduce using rule 47 (valor -> number .)
    STRING          reduce using rule 47 (valor -> number .)
    VAR             reduce using rule 47 (valor -> number .)
    VAL             reduce using rule 47 (valor -> number .)
    WHILE           reduce using rule 47 (valor -> number .)
    FOR             reduce using rule 47 (valor -> number .)
    $end            reduce using rule 47 (valor -> number .)
    RCBRACKET       reduce using rule 47 (valor -> number .)
    RETURN          reduce using rule 47 (valor -> number .)
    RPAREN          reduce using rule 47 (valor -> number .)
    ,               reduce using rule 47 (valor -> number .)


state 56

    (49) valor -> TRUE .

    RSBRACKET       reduce using rule 49 (valor -> TRUE .)
    MINUS           reduce using rule 49 (valor -> TRUE .)
    PLUS            reduce using rule 49 (valor -> TRUE .)
    TIMES           reduce using rule 49 (valor -> TRUE .)
    DIVIDE          reduce using rule 49 (valor -> TRUE .)
    MODULE          reduce using rule 49 (valor -> TRUE .)
    OR              reduce using rule 49 (valor -> TRUE .)
    AND             reduce using rule 49 (valor -> TRUE .)
    EQUALS          reduce using rule 49 (valor -> TRUE .)
    NOTEQUALS       reduce using rule 49 (valor -> TRUE .)
    GREATER         reduce using rule 49 (valor -> TRUE .)
    LOWER           reduce using rule 49 (valor -> TRUE .)
    GREATERE        reduce using rule 49 (valor -> TRUE .)
    LOWERE          reduce using rule 49 (valor -> TRUE .)
    FUNCTION        reduce using rule 49 (valor -> TRUE .)
    ID              reduce using rule 49 (valor -> TRUE .)
    IF              reduce using rule 49 (valor -> TRUE .)
    ELSE            reduce using rule 49 (valor -> TRUE .)
    PRINTLN         reduce using rule 49 (valor -> TRUE .)
    LISTOF          reduce using rule 49 (valor -> TRUE .)
    SETOF           reduce using rule 49 (valor -> TRUE .)
    MUTABLELISTOF   reduce using rule 49 (valor -> TRUE .)
    STRING          reduce using rule 49 (valor -> TRUE .)
    VAR             reduce using rule 49 (valor -> TRUE .)
    VAL             reduce using rule 49 (valor -> TRUE .)
    WHILE           reduce using rule 49 (valor -> TRUE .)
    FOR             reduce using rule 49 (valor -> TRUE .)
    $end            reduce using rule 49 (valor -> TRUE .)
    RCBRACKET       reduce using rule 49 (valor -> TRUE .)
    RETURN          reduce using rule 49 (valor -> TRUE .)
    RPAREN          reduce using rule 49 (valor -> TRUE .)
    ,               reduce using rule 49 (valor -> TRUE .)


state 57

    (50) valor -> FALSE .

    RSBRACKET       reduce using rule 50 (valor -> FALSE .)
    MINUS           reduce using rule 50 (valor -> FALSE .)
    PLUS            reduce using rule 50 (valor -> FALSE .)
    TIMES           reduce using rule 50 (valor -> FALSE .)
    DIVIDE          reduce using rule 50 (valor -> FALSE .)
    MODULE          reduce using rule 50 (valor -> FALSE .)
    OR              reduce using rule 50 (valor -> FALSE .)
    AND             reduce using rule 50 (valor -> FALSE .)
    EQUALS          reduce using rule 50 (valor -> FALSE .)
    NOTEQUALS       reduce using rule 50 (valor -> FALSE .)
    GREATER         reduce using rule 50 (valor -> FALSE .)
    LOWER           reduce using rule 50 (valor -> FALSE .)
    GREATERE        reduce using rule 50 (valor -> FALSE .)
    LOWERE          reduce using rule 50 (valor -> FALSE .)
    FUNCTION        reduce using rule 50 (valor -> FALSE .)
    ID              reduce using rule 50 (valor -> FALSE .)
    IF              reduce using rule 50 (valor -> FALSE .)
    ELSE            reduce using rule 50 (valor -> FALSE .)
    PRINTLN         reduce using rule 50 (valor -> FALSE .)
    LISTOF          reduce using rule 50 (valor -> FALSE .)
    SETOF           reduce using rule 50 (valor -> FALSE .)
    MUTABLELISTOF   reduce using rule 50 (valor -> FALSE .)
    STRING          reduce using rule 50 (valor -> FALSE .)
    VAR             reduce using rule 50 (valor -> FALSE .)
    VAL             reduce using rule 50 (valor -> FALSE .)
    WHILE           reduce using rule 50 (valor -> FALSE .)
    FOR             reduce using rule 50 (valor -> FALSE .)
    $end            reduce using rule 50 (valor -> FALSE .)
    RCBRACKET       reduce using rule 50 (valor -> FALSE .)
    RETURN          reduce using rule 50 (valor -> FALSE .)
    RPAREN          reduce using rule 50 (valor -> FALSE .)
    ,               reduce using rule 50 (valor -> FALSE .)


state 58

    (51) valor -> NULL .

    RSBRACKET       reduce using rule 51 (valor -> NULL .)
    MINUS           reduce using rule 51 (valor -> NULL .)
    PLUS            reduce using rule 51 (valor -> NULL .)
    TIMES           reduce using rule 51 (valor -> NULL .)
    DIVIDE          reduce using rule 51 (valor -> NULL .)
    MODULE          reduce using rule 51 (valor -> NULL .)
    OR              reduce using rule 51 (valor -> NULL .)
    AND             reduce using rule 51 (valor -> NULL .)
    EQUALS          reduce using rule 51 (valor -> NULL .)
    NOTEQUALS       reduce using rule 51 (valor -> NULL .)
    GREATER         reduce using rule 51 (valor -> NULL .)
    LOWER           reduce using rule 51 (valor -> NULL .)
    GREATERE        reduce using rule 51 (valor -> NULL .)
    LOWERE          reduce using rule 51 (valor -> NULL .)
    FUNCTION        reduce using rule 51 (valor -> NULL .)
    ID              reduce using rule 51 (valor -> NULL .)
    IF              reduce using rule 51 (valor -> NULL .)
    ELSE            reduce using rule 51 (valor -> NULL .)
    PRINTLN         reduce using rule 51 (valor -> NULL .)
    LISTOF          reduce using rule 51 (valor -> NULL .)
    SETOF           reduce using rule 51 (valor -> NULL .)
    MUTABLELISTOF   reduce using rule 51 (valor -> NULL .)
    STRING          reduce using rule 51 (valor -> NULL .)
    VAR             reduce using rule 51 (valor -> NULL .)
    VAL             reduce using rule 51 (valor -> NULL .)
    WHILE           reduce using rule 51 (valor -> NULL .)
    FOR             reduce using rule 51 (valor -> NULL .)
    $end            reduce using rule 51 (valor -> NULL .)
    RCBRACKET       reduce using rule 51 (valor -> NULL .)
    RETURN          reduce using rule 51 (valor -> NULL .)
    RPAREN          reduce using rule 51 (valor -> NULL .)
    ,               reduce using rule 51 (valor -> NULL .)


state 59

    (52) valor -> NOT . valor
    (46) valor -> . ID
    (47) valor -> . number
    (48) valor -> . STRING
    (49) valor -> . TRUE
    (50) valor -> . FALSE
    (51) valor -> . NULL
    (52) valor -> . NOT valor
    (79) number -> . INTV
    (80) number -> . FLOATV

    ID              shift and go to state 104
    STRING          shift and go to state 105
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    NULL            shift and go to state 58
    NOT             shift and go to state 59
    INTV            shift and go to state 54
    FLOATV          shift and go to state 60

    valor                          shift and go to state 103
    number                         shift and go to state 55

state 60

    (80) number -> FLOATV .

    RSBRACKET       reduce using rule 80 (number -> FLOATV .)
    MINUS           reduce using rule 80 (number -> FLOATV .)
    PLUS            reduce using rule 80 (number -> FLOATV .)
    TIMES           reduce using rule 80 (number -> FLOATV .)
    DIVIDE          reduce using rule 80 (number -> FLOATV .)
    MODULE          reduce using rule 80 (number -> FLOATV .)
    OR              reduce using rule 80 (number -> FLOATV .)
    AND             reduce using rule 80 (number -> FLOATV .)
    EQUALS          reduce using rule 80 (number -> FLOATV .)
    NOTEQUALS       reduce using rule 80 (number -> FLOATV .)
    GREATER         reduce using rule 80 (number -> FLOATV .)
    LOWER           reduce using rule 80 (number -> FLOATV .)
    GREATERE        reduce using rule 80 (number -> FLOATV .)
    LOWERE          reduce using rule 80 (number -> FLOATV .)
    FUNCTION        reduce using rule 80 (number -> FLOATV .)
    ID              reduce using rule 80 (number -> FLOATV .)
    IF              reduce using rule 80 (number -> FLOATV .)
    ELSE            reduce using rule 80 (number -> FLOATV .)
    PRINTLN         reduce using rule 80 (number -> FLOATV .)
    LISTOF          reduce using rule 80 (number -> FLOATV .)
    SETOF           reduce using rule 80 (number -> FLOATV .)
    MUTABLELISTOF   reduce using rule 80 (number -> FLOATV .)
    STRING          reduce using rule 80 (number -> FLOATV .)
    VAR             reduce using rule 80 (number -> FLOATV .)
    VAL             reduce using rule 80 (number -> FLOATV .)
    WHILE           reduce using rule 80 (number -> FLOATV .)
    FOR             reduce using rule 80 (number -> FLOATV .)
    $end            reduce using rule 80 (number -> FLOATV .)
    RCBRACKET       reduce using rule 80 (number -> FLOATV .)
    RETURN          reduce using rule 80 (number -> FLOATV .)
    RPAREN          reduce using rule 80 (number -> FLOATV .)
    ,               reduce using rule 80 (number -> FLOATV .)


state 61

    (55) asignacion -> ID ASSIGN expresion .
    (64) expresion -> expresion . operadoresMat expresion
    (65) expresion -> expresion . operadoresLog expresion
    (74) operadoresMat -> . MINUS
    (75) operadoresMat -> . PLUS
    (76) operadoresMat -> . TIMES
    (77) operadoresMat -> . DIVIDE
    (78) operadoresMat -> . MODULE
    (66) operadoresLog -> . OR
    (67) operadoresLog -> . AND
    (68) operadoresLog -> . EQUALS
    (69) operadoresLog -> . NOTEQUALS
    (70) operadoresLog -> . GREATER
    (71) operadoresLog -> . LOWER
    (72) operadoresLog -> . GREATERE
    (73) operadoresLog -> . LOWERE

    FUNCTION        reduce using rule 55 (asignacion -> ID ASSIGN expresion .)
    ID              reduce using rule 55 (asignacion -> ID ASSIGN expresion .)
    IF              reduce using rule 55 (asignacion -> ID ASSIGN expresion .)
    ELSE            reduce using rule 55 (asignacion -> ID ASSIGN expresion .)
    PRINTLN         reduce using rule 55 (asignacion -> ID ASSIGN expresion .)
    LISTOF          reduce using rule 55 (asignacion -> ID ASSIGN expresion .)
    SETOF           reduce using rule 55 (asignacion -> ID ASSIGN expresion .)
    MUTABLELISTOF   reduce using rule 55 (asignacion -> ID ASSIGN expresion .)
    STRING          reduce using rule 55 (asignacion -> ID ASSIGN expresion .)
    VAR             reduce using rule 55 (asignacion -> ID ASSIGN expresion .)
    VAL             reduce using rule 55 (asignacion -> ID ASSIGN expresion .)
    WHILE           reduce using rule 55 (asignacion -> ID ASSIGN expresion .)
    FOR             reduce using rule 55 (asignacion -> ID ASSIGN expresion .)
    $end            reduce using rule 55 (asignacion -> ID ASSIGN expresion .)
    RCBRACKET       reduce using rule 55 (asignacion -> ID ASSIGN expresion .)
    RETURN          reduce using rule 55 (asignacion -> ID ASSIGN expresion .)
    MINUS           shift and go to state 89
    PLUS            shift and go to state 90
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 92
    MODULE          shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95
    EQUALS          shift and go to state 96
    NOTEQUALS       shift and go to state 97
    GREATER         shift and go to state 98
    LOWER           shift and go to state 99
    GREATERE        shift and go to state 100
    LOWERE          shift and go to state 101

    operadoresMat                  shift and go to state 87
    operadoresLog                  shift and go to state 88

state 62

    (26) llamada -> ID LPAREN args . RPAREN
    (45) args -> args . , args

    RPAREN          shift and go to state 106
    ,               shift and go to state 107


state 63

    (27) llamada -> ID LPAREN RPAREN .

    FUNCTION        reduce using rule 27 (llamada -> ID LPAREN RPAREN .)
    ID              reduce using rule 27 (llamada -> ID LPAREN RPAREN .)
    IF              reduce using rule 27 (llamada -> ID LPAREN RPAREN .)
    ELSE            reduce using rule 27 (llamada -> ID LPAREN RPAREN .)
    PRINTLN         reduce using rule 27 (llamada -> ID LPAREN RPAREN .)
    LISTOF          reduce using rule 27 (llamada -> ID LPAREN RPAREN .)
    SETOF           reduce using rule 27 (llamada -> ID LPAREN RPAREN .)
    MUTABLELISTOF   reduce using rule 27 (llamada -> ID LPAREN RPAREN .)
    STRING          reduce using rule 27 (llamada -> ID LPAREN RPAREN .)
    VAR             reduce using rule 27 (llamada -> ID LPAREN RPAREN .)
    VAL             reduce using rule 27 (llamada -> ID LPAREN RPAREN .)
    WHILE           reduce using rule 27 (llamada -> ID LPAREN RPAREN .)
    FOR             reduce using rule 27 (llamada -> ID LPAREN RPAREN .)
    $end            reduce using rule 27 (llamada -> ID LPAREN RPAREN .)
    RCBRACKET       reduce using rule 27 (llamada -> ID LPAREN RPAREN .)
    RETURN          reduce using rule 27 (llamada -> ID LPAREN RPAREN .)
    RSBRACKET       reduce using rule 27 (llamada -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 27 (llamada -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 27 (llamada -> ID LPAREN RPAREN .)
    TIMES           reduce using rule 27 (llamada -> ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 27 (llamada -> ID LPAREN RPAREN .)
    MODULE          reduce using rule 27 (llamada -> ID LPAREN RPAREN .)
    OR              reduce using rule 27 (llamada -> ID LPAREN RPAREN .)
    AND             reduce using rule 27 (llamada -> ID LPAREN RPAREN .)
    EQUALS          reduce using rule 27 (llamada -> ID LPAREN RPAREN .)
    NOTEQUALS       reduce using rule 27 (llamada -> ID LPAREN RPAREN .)
    GREATER         reduce using rule 27 (llamada -> ID LPAREN RPAREN .)
    LOWER           reduce using rule 27 (llamada -> ID LPAREN RPAREN .)
    GREATERE        reduce using rule 27 (llamada -> ID LPAREN RPAREN .)
    LOWERE          reduce using rule 27 (llamada -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 27 (llamada -> ID LPAREN RPAREN .)
    ,               reduce using rule 27 (llamada -> ID LPAREN RPAREN .)


state 64

    (44) args -> expresion .
    (64) expresion -> expresion . operadoresMat expresion
    (65) expresion -> expresion . operadoresLog expresion
    (74) operadoresMat -> . MINUS
    (75) operadoresMat -> . PLUS
    (76) operadoresMat -> . TIMES
    (77) operadoresMat -> . DIVIDE
    (78) operadoresMat -> . MODULE
    (66) operadoresLog -> . OR
    (67) operadoresLog -> . AND
    (68) operadoresLog -> . EQUALS
    (69) operadoresLog -> . NOTEQUALS
    (70) operadoresLog -> . GREATER
    (71) operadoresLog -> . LOWER
    (72) operadoresLog -> . GREATERE
    (73) operadoresLog -> . LOWERE

    RPAREN          reduce using rule 44 (args -> expresion .)
    ,               reduce using rule 44 (args -> expresion .)
    MINUS           shift and go to state 89
    PLUS            shift and go to state 90
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 92
    MODULE          shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95
    EQUALS          shift and go to state 96
    NOTEQUALS       shift and go to state 97
    GREATER         shift and go to state 98
    LOWER           shift and go to state 99
    GREATERE        shift and go to state 100
    LOWERE          shift and go to state 101

    operadoresMat                  shift and go to state 87
    operadoresLog                  shift and go to state 88

state 65

    (28) llamada -> ID . ID . LPAREN args RPAREN
    (29) llamada -> ID . ID . LPAREN RPAREN

    LPAREN          shift and go to state 108


state 66

    (81) llamada -> ID . LENGTH . LPAREN RPAREN

    LPAREN          shift and go to state 109


state 67

    (83) llamada -> ID . EQUALSM . LPAREN ID RPAREN
    (86) llamada -> ID . EQUALSM . LPAREN STRING RPAREN

    LPAREN          shift and go to state 110


state 68

    (87) llamada -> ID . COUNT . LPAREN RPAREN

    LPAREN          shift and go to state 111


state 69

    (88) llamada -> ID . FIRST . LPAREN RPAREN

    LPAREN          shift and go to state 112


state 70

    (89) llamada -> ID . LAST . LPAREN RPAREN

    LPAREN          shift and go to state 113


state 71

    (90) llamada -> ID . GET . LPAREN INTV RPAREN
    (91) llamada -> ID . GET . LPAREN ID RPAREN

    LPAREN          shift and go to state 114


state 72

    (56) asignacion -> declarador ID ASSIGN . expresion
    (61) expresion -> . llamada
    (62) expresion -> . LPAREN expresion RPAREN
    (63) expresion -> . valor
    (64) expresion -> . expresion operadoresMat expresion
    (65) expresion -> . expresion operadoresLog expresion
    (25) llamada -> . PRINTLN LPAREN expresion RPAREN
    (26) llamada -> . ID LPAREN args RPAREN
    (27) llamada -> . ID LPAREN RPAREN
    (28) llamada -> . ID . ID LPAREN args RPAREN
    (29) llamada -> . ID . ID LPAREN RPAREN
    (58) llamada -> . LISTOF LPAREN args RPAREN
    (59) llamada -> . SETOF LPAREN args RPAREN
    (60) llamada -> . MUTABLELISTOF LPAREN args RPAREN
    (81) llamada -> . ID . LENGTH LPAREN RPAREN
    (82) llamada -> . STRING . LENGTH LPAREN RPAREN
    (83) llamada -> . ID . EQUALSM LPAREN ID RPAREN
    (84) llamada -> . STRING . EQUALSM LPAREN ID RPAREN
    (85) llamada -> . STRING . EQUALSM LPAREN STRING RPAREN
    (86) llamada -> . ID . EQUALSM LPAREN STRING RPAREN
    (87) llamada -> . ID . COUNT LPAREN RPAREN
    (88) llamada -> . ID . FIRST LPAREN RPAREN
    (89) llamada -> . ID . LAST LPAREN RPAREN
    (90) llamada -> . ID . GET LPAREN INTV RPAREN
    (91) llamada -> . ID . GET LPAREN ID RPAREN
    (46) valor -> . ID
    (47) valor -> . number
    (48) valor -> . STRING
    (49) valor -> . TRUE
    (50) valor -> . FALSE
    (51) valor -> . NULL
    (52) valor -> . NOT valor
    (79) number -> . INTV
    (80) number -> . FLOATV

    LPAREN          shift and go to state 51
    PRINTLN         shift and go to state 16
    ID              shift and go to state 48
    LISTOF          shift and go to state 17
    SETOF           shift and go to state 18
    MUTABLELISTOF   shift and go to state 19
    STRING          shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    NULL            shift and go to state 58
    NOT             shift and go to state 59
    INTV            shift and go to state 54
    FLOATV          shift and go to state 60

    expresion                      shift and go to state 115
    llamada                        shift and go to state 50
    valor                          shift and go to state 52
    number                         shift and go to state 55

state 73

    (17) estructuraControl -> IF LPAREN expresion . RPAREN instrucciones
    (64) expresion -> expresion . operadoresMat expresion
    (65) expresion -> expresion . operadoresLog expresion
    (74) operadoresMat -> . MINUS
    (75) operadoresMat -> . PLUS
    (76) operadoresMat -> . TIMES
    (77) operadoresMat -> . DIVIDE
    (78) operadoresMat -> . MODULE
    (66) operadoresLog -> . OR
    (67) operadoresLog -> . AND
    (68) operadoresLog -> . EQUALS
    (69) operadoresLog -> . NOTEQUALS
    (70) operadoresLog -> . GREATER
    (71) operadoresLog -> . LOWER
    (72) operadoresLog -> . GREATERE
    (73) operadoresLog -> . LOWERE

    RPAREN          shift and go to state 116
    MINUS           shift and go to state 89
    PLUS            shift and go to state 90
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 92
    MODULE          shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95
    EQUALS          shift and go to state 96
    NOTEQUALS       shift and go to state 97
    GREATER         shift and go to state 98
    LOWER           shift and go to state 99
    GREATERE        shift and go to state 100
    LOWERE          shift and go to state 101

    operadoresMat                  shift and go to state 87
    operadoresLog                  shift and go to state 88

state 74

    (10) instrucciones -> LCBRACKET cuerpo . RCBRACKET

    RCBRACKET       shift and go to state 117


state 75

    (25) llamada -> PRINTLN LPAREN expresion . RPAREN
    (64) expresion -> expresion . operadoresMat expresion
    (65) expresion -> expresion . operadoresLog expresion
    (74) operadoresMat -> . MINUS
    (75) operadoresMat -> . PLUS
    (76) operadoresMat -> . TIMES
    (77) operadoresMat -> . DIVIDE
    (78) operadoresMat -> . MODULE
    (66) operadoresLog -> . OR
    (67) operadoresLog -> . AND
    (68) operadoresLog -> . EQUALS
    (69) operadoresLog -> . NOTEQUALS
    (70) operadoresLog -> . GREATER
    (71) operadoresLog -> . LOWER
    (72) operadoresLog -> . GREATERE
    (73) operadoresLog -> . LOWERE

    RPAREN          shift and go to state 118
    MINUS           shift and go to state 89
    PLUS            shift and go to state 90
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 92
    MODULE          shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95
    EQUALS          shift and go to state 96
    NOTEQUALS       shift and go to state 97
    GREATER         shift and go to state 98
    LOWER           shift and go to state 99
    GREATERE        shift and go to state 100
    LOWERE          shift and go to state 101

    operadoresMat                  shift and go to state 87
    operadoresLog                  shift and go to state 88

state 76

    (58) llamada -> LISTOF LPAREN args . RPAREN
    (45) args -> args . , args

    RPAREN          shift and go to state 119
    ,               shift and go to state 107


state 77

    (59) llamada -> SETOF LPAREN args . RPAREN
    (45) args -> args . , args

    RPAREN          shift and go to state 120
    ,               shift and go to state 107


state 78

    (60) llamada -> MUTABLELISTOF LPAREN args . RPAREN
    (45) args -> args . , args

    RPAREN          shift and go to state 121
    ,               shift and go to state 107


state 79

    (82) llamada -> STRING . LENGTH . LPAREN RPAREN

    LPAREN          shift and go to state 122


state 80

    (84) llamada -> STRING . EQUALSM . LPAREN ID RPAREN
    (85) llamada -> STRING . EQUALSM . LPAREN STRING RPAREN

    LPAREN          shift and go to state 123


state 81

    (21) while -> WHILE LPAREN expresion . RPAREN
    (64) expresion -> expresion . operadoresMat expresion
    (65) expresion -> expresion . operadoresLog expresion
    (74) operadoresMat -> . MINUS
    (75) operadoresMat -> . PLUS
    (76) operadoresMat -> . TIMES
    (77) operadoresMat -> . DIVIDE
    (78) operadoresMat -> . MODULE
    (66) operadoresLog -> . OR
    (67) operadoresLog -> . AND
    (68) operadoresLog -> . EQUALS
    (69) operadoresLog -> . NOTEQUALS
    (70) operadoresLog -> . GREATER
    (71) operadoresLog -> . LOWER
    (72) operadoresLog -> . GREATERE
    (73) operadoresLog -> . LOWERE

    RPAREN          shift and go to state 124
    MINUS           shift and go to state 89
    PLUS            shift and go to state 90
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 92
    MODULE          shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95
    EQUALS          shift and go to state 96
    NOTEQUALS       shift and go to state 97
    GREATER         shift and go to state 98
    LOWER           shift and go to state 99
    GREATERE        shift and go to state 100
    LOWERE          shift and go to state 101

    operadoresMat                  shift and go to state 87
    operadoresLog                  shift and go to state 88

state 82

    (22) for -> FOR LPAREN ID . IN ID RPAREN

    IN              shift and go to state 125


state 83

    (42) params -> ID . : dato

    :               shift and go to state 126


state 84

    (23) function -> FUNCTION ID LPAREN params . RPAREN instruccionesF
    (43) params -> params . , params

    RPAREN          shift and go to state 127
    ,               shift and go to state 128


state 85

    (24) function -> FUNCTION ID LPAREN RPAREN . instruccionesF
    (12) instruccionesF -> . LCBRACKET cuerpo retorno RCBRACKET
    (13) instruccionesF -> . LCBRACKET retorno RCBRACKET
    (14) instruccionesF -> . : dato LCBRACKET cuerpo retorno RCBRACKET
    (15) instruccionesF -> . : dato LCBRACKET retorno RCBRACKET

    LCBRACKET       shift and go to state 130
    :               shift and go to state 131

    instruccionesF                 shift and go to state 129

state 86

    (30) function -> ID LSBRACKET expresion RSBRACKET .

    FUNCTION        reduce using rule 30 (function -> ID LSBRACKET expresion RSBRACKET .)
    ID              reduce using rule 30 (function -> ID LSBRACKET expresion RSBRACKET .)
    IF              reduce using rule 30 (function -> ID LSBRACKET expresion RSBRACKET .)
    ELSE            reduce using rule 30 (function -> ID LSBRACKET expresion RSBRACKET .)
    PRINTLN         reduce using rule 30 (function -> ID LSBRACKET expresion RSBRACKET .)
    LISTOF          reduce using rule 30 (function -> ID LSBRACKET expresion RSBRACKET .)
    SETOF           reduce using rule 30 (function -> ID LSBRACKET expresion RSBRACKET .)
    MUTABLELISTOF   reduce using rule 30 (function -> ID LSBRACKET expresion RSBRACKET .)
    STRING          reduce using rule 30 (function -> ID LSBRACKET expresion RSBRACKET .)
    VAR             reduce using rule 30 (function -> ID LSBRACKET expresion RSBRACKET .)
    VAL             reduce using rule 30 (function -> ID LSBRACKET expresion RSBRACKET .)
    WHILE           reduce using rule 30 (function -> ID LSBRACKET expresion RSBRACKET .)
    FOR             reduce using rule 30 (function -> ID LSBRACKET expresion RSBRACKET .)
    $end            reduce using rule 30 (function -> ID LSBRACKET expresion RSBRACKET .)
    RCBRACKET       reduce using rule 30 (function -> ID LSBRACKET expresion RSBRACKET .)
    RETURN          reduce using rule 30 (function -> ID LSBRACKET expresion RSBRACKET .)


state 87

    (64) expresion -> expresion operadoresMat . expresion
    (61) expresion -> . llamada
    (62) expresion -> . LPAREN expresion RPAREN
    (63) expresion -> . valor
    (64) expresion -> . expresion operadoresMat expresion
    (65) expresion -> . expresion operadoresLog expresion
    (25) llamada -> . PRINTLN LPAREN expresion RPAREN
    (26) llamada -> . ID LPAREN args RPAREN
    (27) llamada -> . ID LPAREN RPAREN
    (28) llamada -> . ID . ID LPAREN args RPAREN
    (29) llamada -> . ID . ID LPAREN RPAREN
    (58) llamada -> . LISTOF LPAREN args RPAREN
    (59) llamada -> . SETOF LPAREN args RPAREN
    (60) llamada -> . MUTABLELISTOF LPAREN args RPAREN
    (81) llamada -> . ID . LENGTH LPAREN RPAREN
    (82) llamada -> . STRING . LENGTH LPAREN RPAREN
    (83) llamada -> . ID . EQUALSM LPAREN ID RPAREN
    (84) llamada -> . STRING . EQUALSM LPAREN ID RPAREN
    (85) llamada -> . STRING . EQUALSM LPAREN STRING RPAREN
    (86) llamada -> . ID . EQUALSM LPAREN STRING RPAREN
    (87) llamada -> . ID . COUNT LPAREN RPAREN
    (88) llamada -> . ID . FIRST LPAREN RPAREN
    (89) llamada -> . ID . LAST LPAREN RPAREN
    (90) llamada -> . ID . GET LPAREN INTV RPAREN
    (91) llamada -> . ID . GET LPAREN ID RPAREN
    (46) valor -> . ID
    (47) valor -> . number
    (48) valor -> . STRING
    (49) valor -> . TRUE
    (50) valor -> . FALSE
    (51) valor -> . NULL
    (52) valor -> . NOT valor
    (79) number -> . INTV
    (80) number -> . FLOATV

    LPAREN          shift and go to state 51
    PRINTLN         shift and go to state 16
    ID              shift and go to state 48
    LISTOF          shift and go to state 17
    SETOF           shift and go to state 18
    MUTABLELISTOF   shift and go to state 19
    STRING          shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    NULL            shift and go to state 58
    NOT             shift and go to state 59
    INTV            shift and go to state 54
    FLOATV          shift and go to state 60

    expresion                      shift and go to state 132
    llamada                        shift and go to state 50
    valor                          shift and go to state 52
    number                         shift and go to state 55

state 88

    (65) expresion -> expresion operadoresLog . expresion
    (61) expresion -> . llamada
    (62) expresion -> . LPAREN expresion RPAREN
    (63) expresion -> . valor
    (64) expresion -> . expresion operadoresMat expresion
    (65) expresion -> . expresion operadoresLog expresion
    (25) llamada -> . PRINTLN LPAREN expresion RPAREN
    (26) llamada -> . ID LPAREN args RPAREN
    (27) llamada -> . ID LPAREN RPAREN
    (28) llamada -> . ID . ID LPAREN args RPAREN
    (29) llamada -> . ID . ID LPAREN RPAREN
    (58) llamada -> . LISTOF LPAREN args RPAREN
    (59) llamada -> . SETOF LPAREN args RPAREN
    (60) llamada -> . MUTABLELISTOF LPAREN args RPAREN
    (81) llamada -> . ID . LENGTH LPAREN RPAREN
    (82) llamada -> . STRING . LENGTH LPAREN RPAREN
    (83) llamada -> . ID . EQUALSM LPAREN ID RPAREN
    (84) llamada -> . STRING . EQUALSM LPAREN ID RPAREN
    (85) llamada -> . STRING . EQUALSM LPAREN STRING RPAREN
    (86) llamada -> . ID . EQUALSM LPAREN STRING RPAREN
    (87) llamada -> . ID . COUNT LPAREN RPAREN
    (88) llamada -> . ID . FIRST LPAREN RPAREN
    (89) llamada -> . ID . LAST LPAREN RPAREN
    (90) llamada -> . ID . GET LPAREN INTV RPAREN
    (91) llamada -> . ID . GET LPAREN ID RPAREN
    (46) valor -> . ID
    (47) valor -> . number
    (48) valor -> . STRING
    (49) valor -> . TRUE
    (50) valor -> . FALSE
    (51) valor -> . NULL
    (52) valor -> . NOT valor
    (79) number -> . INTV
    (80) number -> . FLOATV

    LPAREN          shift and go to state 51
    PRINTLN         shift and go to state 16
    ID              shift and go to state 48
    LISTOF          shift and go to state 17
    SETOF           shift and go to state 18
    MUTABLELISTOF   shift and go to state 19
    STRING          shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    NULL            shift and go to state 58
    NOT             shift and go to state 59
    INTV            shift and go to state 54
    FLOATV          shift and go to state 60

    expresion                      shift and go to state 133
    llamada                        shift and go to state 50
    valor                          shift and go to state 52
    number                         shift and go to state 55

state 89

    (74) operadoresMat -> MINUS .

    LPAREN          reduce using rule 74 (operadoresMat -> MINUS .)
    PRINTLN         reduce using rule 74 (operadoresMat -> MINUS .)
    ID              reduce using rule 74 (operadoresMat -> MINUS .)
    LISTOF          reduce using rule 74 (operadoresMat -> MINUS .)
    SETOF           reduce using rule 74 (operadoresMat -> MINUS .)
    MUTABLELISTOF   reduce using rule 74 (operadoresMat -> MINUS .)
    STRING          reduce using rule 74 (operadoresMat -> MINUS .)
    TRUE            reduce using rule 74 (operadoresMat -> MINUS .)
    FALSE           reduce using rule 74 (operadoresMat -> MINUS .)
    NULL            reduce using rule 74 (operadoresMat -> MINUS .)
    NOT             reduce using rule 74 (operadoresMat -> MINUS .)
    INTV            reduce using rule 74 (operadoresMat -> MINUS .)
    FLOATV          reduce using rule 74 (operadoresMat -> MINUS .)


state 90

    (75) operadoresMat -> PLUS .

    LPAREN          reduce using rule 75 (operadoresMat -> PLUS .)
    PRINTLN         reduce using rule 75 (operadoresMat -> PLUS .)
    ID              reduce using rule 75 (operadoresMat -> PLUS .)
    LISTOF          reduce using rule 75 (operadoresMat -> PLUS .)
    SETOF           reduce using rule 75 (operadoresMat -> PLUS .)
    MUTABLELISTOF   reduce using rule 75 (operadoresMat -> PLUS .)
    STRING          reduce using rule 75 (operadoresMat -> PLUS .)
    TRUE            reduce using rule 75 (operadoresMat -> PLUS .)
    FALSE           reduce using rule 75 (operadoresMat -> PLUS .)
    NULL            reduce using rule 75 (operadoresMat -> PLUS .)
    NOT             reduce using rule 75 (operadoresMat -> PLUS .)
    INTV            reduce using rule 75 (operadoresMat -> PLUS .)
    FLOATV          reduce using rule 75 (operadoresMat -> PLUS .)


state 91

    (76) operadoresMat -> TIMES .

    LPAREN          reduce using rule 76 (operadoresMat -> TIMES .)
    PRINTLN         reduce using rule 76 (operadoresMat -> TIMES .)
    ID              reduce using rule 76 (operadoresMat -> TIMES .)
    LISTOF          reduce using rule 76 (operadoresMat -> TIMES .)
    SETOF           reduce using rule 76 (operadoresMat -> TIMES .)
    MUTABLELISTOF   reduce using rule 76 (operadoresMat -> TIMES .)
    STRING          reduce using rule 76 (operadoresMat -> TIMES .)
    TRUE            reduce using rule 76 (operadoresMat -> TIMES .)
    FALSE           reduce using rule 76 (operadoresMat -> TIMES .)
    NULL            reduce using rule 76 (operadoresMat -> TIMES .)
    NOT             reduce using rule 76 (operadoresMat -> TIMES .)
    INTV            reduce using rule 76 (operadoresMat -> TIMES .)
    FLOATV          reduce using rule 76 (operadoresMat -> TIMES .)


state 92

    (77) operadoresMat -> DIVIDE .

    LPAREN          reduce using rule 77 (operadoresMat -> DIVIDE .)
    PRINTLN         reduce using rule 77 (operadoresMat -> DIVIDE .)
    ID              reduce using rule 77 (operadoresMat -> DIVIDE .)
    LISTOF          reduce using rule 77 (operadoresMat -> DIVIDE .)
    SETOF           reduce using rule 77 (operadoresMat -> DIVIDE .)
    MUTABLELISTOF   reduce using rule 77 (operadoresMat -> DIVIDE .)
    STRING          reduce using rule 77 (operadoresMat -> DIVIDE .)
    TRUE            reduce using rule 77 (operadoresMat -> DIVIDE .)
    FALSE           reduce using rule 77 (operadoresMat -> DIVIDE .)
    NULL            reduce using rule 77 (operadoresMat -> DIVIDE .)
    NOT             reduce using rule 77 (operadoresMat -> DIVIDE .)
    INTV            reduce using rule 77 (operadoresMat -> DIVIDE .)
    FLOATV          reduce using rule 77 (operadoresMat -> DIVIDE .)


state 93

    (78) operadoresMat -> MODULE .

    LPAREN          reduce using rule 78 (operadoresMat -> MODULE .)
    PRINTLN         reduce using rule 78 (operadoresMat -> MODULE .)
    ID              reduce using rule 78 (operadoresMat -> MODULE .)
    LISTOF          reduce using rule 78 (operadoresMat -> MODULE .)
    SETOF           reduce using rule 78 (operadoresMat -> MODULE .)
    MUTABLELISTOF   reduce using rule 78 (operadoresMat -> MODULE .)
    STRING          reduce using rule 78 (operadoresMat -> MODULE .)
    TRUE            reduce using rule 78 (operadoresMat -> MODULE .)
    FALSE           reduce using rule 78 (operadoresMat -> MODULE .)
    NULL            reduce using rule 78 (operadoresMat -> MODULE .)
    NOT             reduce using rule 78 (operadoresMat -> MODULE .)
    INTV            reduce using rule 78 (operadoresMat -> MODULE .)
    FLOATV          reduce using rule 78 (operadoresMat -> MODULE .)


state 94

    (66) operadoresLog -> OR .

    LPAREN          reduce using rule 66 (operadoresLog -> OR .)
    PRINTLN         reduce using rule 66 (operadoresLog -> OR .)
    ID              reduce using rule 66 (operadoresLog -> OR .)
    LISTOF          reduce using rule 66 (operadoresLog -> OR .)
    SETOF           reduce using rule 66 (operadoresLog -> OR .)
    MUTABLELISTOF   reduce using rule 66 (operadoresLog -> OR .)
    STRING          reduce using rule 66 (operadoresLog -> OR .)
    TRUE            reduce using rule 66 (operadoresLog -> OR .)
    FALSE           reduce using rule 66 (operadoresLog -> OR .)
    NULL            reduce using rule 66 (operadoresLog -> OR .)
    NOT             reduce using rule 66 (operadoresLog -> OR .)
    INTV            reduce using rule 66 (operadoresLog -> OR .)
    FLOATV          reduce using rule 66 (operadoresLog -> OR .)


state 95

    (67) operadoresLog -> AND .

    LPAREN          reduce using rule 67 (operadoresLog -> AND .)
    PRINTLN         reduce using rule 67 (operadoresLog -> AND .)
    ID              reduce using rule 67 (operadoresLog -> AND .)
    LISTOF          reduce using rule 67 (operadoresLog -> AND .)
    SETOF           reduce using rule 67 (operadoresLog -> AND .)
    MUTABLELISTOF   reduce using rule 67 (operadoresLog -> AND .)
    STRING          reduce using rule 67 (operadoresLog -> AND .)
    TRUE            reduce using rule 67 (operadoresLog -> AND .)
    FALSE           reduce using rule 67 (operadoresLog -> AND .)
    NULL            reduce using rule 67 (operadoresLog -> AND .)
    NOT             reduce using rule 67 (operadoresLog -> AND .)
    INTV            reduce using rule 67 (operadoresLog -> AND .)
    FLOATV          reduce using rule 67 (operadoresLog -> AND .)


state 96

    (68) operadoresLog -> EQUALS .

    LPAREN          reduce using rule 68 (operadoresLog -> EQUALS .)
    PRINTLN         reduce using rule 68 (operadoresLog -> EQUALS .)
    ID              reduce using rule 68 (operadoresLog -> EQUALS .)
    LISTOF          reduce using rule 68 (operadoresLog -> EQUALS .)
    SETOF           reduce using rule 68 (operadoresLog -> EQUALS .)
    MUTABLELISTOF   reduce using rule 68 (operadoresLog -> EQUALS .)
    STRING          reduce using rule 68 (operadoresLog -> EQUALS .)
    TRUE            reduce using rule 68 (operadoresLog -> EQUALS .)
    FALSE           reduce using rule 68 (operadoresLog -> EQUALS .)
    NULL            reduce using rule 68 (operadoresLog -> EQUALS .)
    NOT             reduce using rule 68 (operadoresLog -> EQUALS .)
    INTV            reduce using rule 68 (operadoresLog -> EQUALS .)
    FLOATV          reduce using rule 68 (operadoresLog -> EQUALS .)


state 97

    (69) operadoresLog -> NOTEQUALS .

    LPAREN          reduce using rule 69 (operadoresLog -> NOTEQUALS .)
    PRINTLN         reduce using rule 69 (operadoresLog -> NOTEQUALS .)
    ID              reduce using rule 69 (operadoresLog -> NOTEQUALS .)
    LISTOF          reduce using rule 69 (operadoresLog -> NOTEQUALS .)
    SETOF           reduce using rule 69 (operadoresLog -> NOTEQUALS .)
    MUTABLELISTOF   reduce using rule 69 (operadoresLog -> NOTEQUALS .)
    STRING          reduce using rule 69 (operadoresLog -> NOTEQUALS .)
    TRUE            reduce using rule 69 (operadoresLog -> NOTEQUALS .)
    FALSE           reduce using rule 69 (operadoresLog -> NOTEQUALS .)
    NULL            reduce using rule 69 (operadoresLog -> NOTEQUALS .)
    NOT             reduce using rule 69 (operadoresLog -> NOTEQUALS .)
    INTV            reduce using rule 69 (operadoresLog -> NOTEQUALS .)
    FLOATV          reduce using rule 69 (operadoresLog -> NOTEQUALS .)


state 98

    (70) operadoresLog -> GREATER .

    LPAREN          reduce using rule 70 (operadoresLog -> GREATER .)
    PRINTLN         reduce using rule 70 (operadoresLog -> GREATER .)
    ID              reduce using rule 70 (operadoresLog -> GREATER .)
    LISTOF          reduce using rule 70 (operadoresLog -> GREATER .)
    SETOF           reduce using rule 70 (operadoresLog -> GREATER .)
    MUTABLELISTOF   reduce using rule 70 (operadoresLog -> GREATER .)
    STRING          reduce using rule 70 (operadoresLog -> GREATER .)
    TRUE            reduce using rule 70 (operadoresLog -> GREATER .)
    FALSE           reduce using rule 70 (operadoresLog -> GREATER .)
    NULL            reduce using rule 70 (operadoresLog -> GREATER .)
    NOT             reduce using rule 70 (operadoresLog -> GREATER .)
    INTV            reduce using rule 70 (operadoresLog -> GREATER .)
    FLOATV          reduce using rule 70 (operadoresLog -> GREATER .)


state 99

    (71) operadoresLog -> LOWER .

    LPAREN          reduce using rule 71 (operadoresLog -> LOWER .)
    PRINTLN         reduce using rule 71 (operadoresLog -> LOWER .)
    ID              reduce using rule 71 (operadoresLog -> LOWER .)
    LISTOF          reduce using rule 71 (operadoresLog -> LOWER .)
    SETOF           reduce using rule 71 (operadoresLog -> LOWER .)
    MUTABLELISTOF   reduce using rule 71 (operadoresLog -> LOWER .)
    STRING          reduce using rule 71 (operadoresLog -> LOWER .)
    TRUE            reduce using rule 71 (operadoresLog -> LOWER .)
    FALSE           reduce using rule 71 (operadoresLog -> LOWER .)
    NULL            reduce using rule 71 (operadoresLog -> LOWER .)
    NOT             reduce using rule 71 (operadoresLog -> LOWER .)
    INTV            reduce using rule 71 (operadoresLog -> LOWER .)
    FLOATV          reduce using rule 71 (operadoresLog -> LOWER .)


state 100

    (72) operadoresLog -> GREATERE .

    LPAREN          reduce using rule 72 (operadoresLog -> GREATERE .)
    PRINTLN         reduce using rule 72 (operadoresLog -> GREATERE .)
    ID              reduce using rule 72 (operadoresLog -> GREATERE .)
    LISTOF          reduce using rule 72 (operadoresLog -> GREATERE .)
    SETOF           reduce using rule 72 (operadoresLog -> GREATERE .)
    MUTABLELISTOF   reduce using rule 72 (operadoresLog -> GREATERE .)
    STRING          reduce using rule 72 (operadoresLog -> GREATERE .)
    TRUE            reduce using rule 72 (operadoresLog -> GREATERE .)
    FALSE           reduce using rule 72 (operadoresLog -> GREATERE .)
    NULL            reduce using rule 72 (operadoresLog -> GREATERE .)
    NOT             reduce using rule 72 (operadoresLog -> GREATERE .)
    INTV            reduce using rule 72 (operadoresLog -> GREATERE .)
    FLOATV          reduce using rule 72 (operadoresLog -> GREATERE .)


state 101

    (73) operadoresLog -> LOWERE .

    LPAREN          reduce using rule 73 (operadoresLog -> LOWERE .)
    PRINTLN         reduce using rule 73 (operadoresLog -> LOWERE .)
    ID              reduce using rule 73 (operadoresLog -> LOWERE .)
    LISTOF          reduce using rule 73 (operadoresLog -> LOWERE .)
    SETOF           reduce using rule 73 (operadoresLog -> LOWERE .)
    MUTABLELISTOF   reduce using rule 73 (operadoresLog -> LOWERE .)
    STRING          reduce using rule 73 (operadoresLog -> LOWERE .)
    TRUE            reduce using rule 73 (operadoresLog -> LOWERE .)
    FALSE           reduce using rule 73 (operadoresLog -> LOWERE .)
    NULL            reduce using rule 73 (operadoresLog -> LOWERE .)
    NOT             reduce using rule 73 (operadoresLog -> LOWERE .)
    INTV            reduce using rule 73 (operadoresLog -> LOWERE .)
    FLOATV          reduce using rule 73 (operadoresLog -> LOWERE .)


state 102

    (62) expresion -> LPAREN expresion . RPAREN
    (64) expresion -> expresion . operadoresMat expresion
    (65) expresion -> expresion . operadoresLog expresion
    (74) operadoresMat -> . MINUS
    (75) operadoresMat -> . PLUS
    (76) operadoresMat -> . TIMES
    (77) operadoresMat -> . DIVIDE
    (78) operadoresMat -> . MODULE
    (66) operadoresLog -> . OR
    (67) operadoresLog -> . AND
    (68) operadoresLog -> . EQUALS
    (69) operadoresLog -> . NOTEQUALS
    (70) operadoresLog -> . GREATER
    (71) operadoresLog -> . LOWER
    (72) operadoresLog -> . GREATERE
    (73) operadoresLog -> . LOWERE

    RPAREN          shift and go to state 134
    MINUS           shift and go to state 89
    PLUS            shift and go to state 90
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 92
    MODULE          shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95
    EQUALS          shift and go to state 96
    NOTEQUALS       shift and go to state 97
    GREATER         shift and go to state 98
    LOWER           shift and go to state 99
    GREATERE        shift and go to state 100
    LOWERE          shift and go to state 101

    operadoresMat                  shift and go to state 87
    operadoresLog                  shift and go to state 88

state 103

    (52) valor -> NOT valor .

    RSBRACKET       reduce using rule 52 (valor -> NOT valor .)
    MINUS           reduce using rule 52 (valor -> NOT valor .)
    PLUS            reduce using rule 52 (valor -> NOT valor .)
    TIMES           reduce using rule 52 (valor -> NOT valor .)
    DIVIDE          reduce using rule 52 (valor -> NOT valor .)
    MODULE          reduce using rule 52 (valor -> NOT valor .)
    OR              reduce using rule 52 (valor -> NOT valor .)
    AND             reduce using rule 52 (valor -> NOT valor .)
    EQUALS          reduce using rule 52 (valor -> NOT valor .)
    NOTEQUALS       reduce using rule 52 (valor -> NOT valor .)
    GREATER         reduce using rule 52 (valor -> NOT valor .)
    LOWER           reduce using rule 52 (valor -> NOT valor .)
    GREATERE        reduce using rule 52 (valor -> NOT valor .)
    LOWERE          reduce using rule 52 (valor -> NOT valor .)
    FUNCTION        reduce using rule 52 (valor -> NOT valor .)
    ID              reduce using rule 52 (valor -> NOT valor .)
    IF              reduce using rule 52 (valor -> NOT valor .)
    ELSE            reduce using rule 52 (valor -> NOT valor .)
    PRINTLN         reduce using rule 52 (valor -> NOT valor .)
    LISTOF          reduce using rule 52 (valor -> NOT valor .)
    SETOF           reduce using rule 52 (valor -> NOT valor .)
    MUTABLELISTOF   reduce using rule 52 (valor -> NOT valor .)
    STRING          reduce using rule 52 (valor -> NOT valor .)
    VAR             reduce using rule 52 (valor -> NOT valor .)
    VAL             reduce using rule 52 (valor -> NOT valor .)
    WHILE           reduce using rule 52 (valor -> NOT valor .)
    FOR             reduce using rule 52 (valor -> NOT valor .)
    $end            reduce using rule 52 (valor -> NOT valor .)
    RCBRACKET       reduce using rule 52 (valor -> NOT valor .)
    RETURN          reduce using rule 52 (valor -> NOT valor .)
    RPAREN          reduce using rule 52 (valor -> NOT valor .)
    ,               reduce using rule 52 (valor -> NOT valor .)


state 104

    (46) valor -> ID .

    RSBRACKET       reduce using rule 46 (valor -> ID .)
    MINUS           reduce using rule 46 (valor -> ID .)
    PLUS            reduce using rule 46 (valor -> ID .)
    TIMES           reduce using rule 46 (valor -> ID .)
    DIVIDE          reduce using rule 46 (valor -> ID .)
    MODULE          reduce using rule 46 (valor -> ID .)
    OR              reduce using rule 46 (valor -> ID .)
    AND             reduce using rule 46 (valor -> ID .)
    EQUALS          reduce using rule 46 (valor -> ID .)
    NOTEQUALS       reduce using rule 46 (valor -> ID .)
    GREATER         reduce using rule 46 (valor -> ID .)
    LOWER           reduce using rule 46 (valor -> ID .)
    GREATERE        reduce using rule 46 (valor -> ID .)
    LOWERE          reduce using rule 46 (valor -> ID .)
    FUNCTION        reduce using rule 46 (valor -> ID .)
    ID              reduce using rule 46 (valor -> ID .)
    IF              reduce using rule 46 (valor -> ID .)
    ELSE            reduce using rule 46 (valor -> ID .)
    PRINTLN         reduce using rule 46 (valor -> ID .)
    LISTOF          reduce using rule 46 (valor -> ID .)
    SETOF           reduce using rule 46 (valor -> ID .)
    MUTABLELISTOF   reduce using rule 46 (valor -> ID .)
    STRING          reduce using rule 46 (valor -> ID .)
    VAR             reduce using rule 46 (valor -> ID .)
    VAL             reduce using rule 46 (valor -> ID .)
    WHILE           reduce using rule 46 (valor -> ID .)
    FOR             reduce using rule 46 (valor -> ID .)
    $end            reduce using rule 46 (valor -> ID .)
    RCBRACKET       reduce using rule 46 (valor -> ID .)
    RETURN          reduce using rule 46 (valor -> ID .)
    RPAREN          reduce using rule 46 (valor -> ID .)
    ,               reduce using rule 46 (valor -> ID .)


state 105

    (48) valor -> STRING .

    RSBRACKET       reduce using rule 48 (valor -> STRING .)
    MINUS           reduce using rule 48 (valor -> STRING .)
    PLUS            reduce using rule 48 (valor -> STRING .)
    TIMES           reduce using rule 48 (valor -> STRING .)
    DIVIDE          reduce using rule 48 (valor -> STRING .)
    MODULE          reduce using rule 48 (valor -> STRING .)
    OR              reduce using rule 48 (valor -> STRING .)
    AND             reduce using rule 48 (valor -> STRING .)
    EQUALS          reduce using rule 48 (valor -> STRING .)
    NOTEQUALS       reduce using rule 48 (valor -> STRING .)
    GREATER         reduce using rule 48 (valor -> STRING .)
    LOWER           reduce using rule 48 (valor -> STRING .)
    GREATERE        reduce using rule 48 (valor -> STRING .)
    LOWERE          reduce using rule 48 (valor -> STRING .)
    FUNCTION        reduce using rule 48 (valor -> STRING .)
    ID              reduce using rule 48 (valor -> STRING .)
    IF              reduce using rule 48 (valor -> STRING .)
    ELSE            reduce using rule 48 (valor -> STRING .)
    PRINTLN         reduce using rule 48 (valor -> STRING .)
    LISTOF          reduce using rule 48 (valor -> STRING .)
    SETOF           reduce using rule 48 (valor -> STRING .)
    MUTABLELISTOF   reduce using rule 48 (valor -> STRING .)
    STRING          reduce using rule 48 (valor -> STRING .)
    VAR             reduce using rule 48 (valor -> STRING .)
    VAL             reduce using rule 48 (valor -> STRING .)
    WHILE           reduce using rule 48 (valor -> STRING .)
    FOR             reduce using rule 48 (valor -> STRING .)
    $end            reduce using rule 48 (valor -> STRING .)
    RCBRACKET       reduce using rule 48 (valor -> STRING .)
    RETURN          reduce using rule 48 (valor -> STRING .)
    RPAREN          reduce using rule 48 (valor -> STRING .)
    ,               reduce using rule 48 (valor -> STRING .)


state 106

    (26) llamada -> ID LPAREN args RPAREN .

    FUNCTION        reduce using rule 26 (llamada -> ID LPAREN args RPAREN .)
    ID              reduce using rule 26 (llamada -> ID LPAREN args RPAREN .)
    IF              reduce using rule 26 (llamada -> ID LPAREN args RPAREN .)
    ELSE            reduce using rule 26 (llamada -> ID LPAREN args RPAREN .)
    PRINTLN         reduce using rule 26 (llamada -> ID LPAREN args RPAREN .)
    LISTOF          reduce using rule 26 (llamada -> ID LPAREN args RPAREN .)
    SETOF           reduce using rule 26 (llamada -> ID LPAREN args RPAREN .)
    MUTABLELISTOF   reduce using rule 26 (llamada -> ID LPAREN args RPAREN .)
    STRING          reduce using rule 26 (llamada -> ID LPAREN args RPAREN .)
    VAR             reduce using rule 26 (llamada -> ID LPAREN args RPAREN .)
    VAL             reduce using rule 26 (llamada -> ID LPAREN args RPAREN .)
    WHILE           reduce using rule 26 (llamada -> ID LPAREN args RPAREN .)
    FOR             reduce using rule 26 (llamada -> ID LPAREN args RPAREN .)
    $end            reduce using rule 26 (llamada -> ID LPAREN args RPAREN .)
    RCBRACKET       reduce using rule 26 (llamada -> ID LPAREN args RPAREN .)
    RETURN          reduce using rule 26 (llamada -> ID LPAREN args RPAREN .)
    RSBRACKET       reduce using rule 26 (llamada -> ID LPAREN args RPAREN .)
    MINUS           reduce using rule 26 (llamada -> ID LPAREN args RPAREN .)
    PLUS            reduce using rule 26 (llamada -> ID LPAREN args RPAREN .)
    TIMES           reduce using rule 26 (llamada -> ID LPAREN args RPAREN .)
    DIVIDE          reduce using rule 26 (llamada -> ID LPAREN args RPAREN .)
    MODULE          reduce using rule 26 (llamada -> ID LPAREN args RPAREN .)
    OR              reduce using rule 26 (llamada -> ID LPAREN args RPAREN .)
    AND             reduce using rule 26 (llamada -> ID LPAREN args RPAREN .)
    EQUALS          reduce using rule 26 (llamada -> ID LPAREN args RPAREN .)
    NOTEQUALS       reduce using rule 26 (llamada -> ID LPAREN args RPAREN .)
    GREATER         reduce using rule 26 (llamada -> ID LPAREN args RPAREN .)
    LOWER           reduce using rule 26 (llamada -> ID LPAREN args RPAREN .)
    GREATERE        reduce using rule 26 (llamada -> ID LPAREN args RPAREN .)
    LOWERE          reduce using rule 26 (llamada -> ID LPAREN args RPAREN .)
    RPAREN          reduce using rule 26 (llamada -> ID LPAREN args RPAREN .)
    ,               reduce using rule 26 (llamada -> ID LPAREN args RPAREN .)


state 107

    (45) args -> args , . args
    (44) args -> . expresion
    (45) args -> . args , args
    (61) expresion -> . llamada
    (62) expresion -> . LPAREN expresion RPAREN
    (63) expresion -> . valor
    (64) expresion -> . expresion operadoresMat expresion
    (65) expresion -> . expresion operadoresLog expresion
    (25) llamada -> . PRINTLN LPAREN expresion RPAREN
    (26) llamada -> . ID LPAREN args RPAREN
    (27) llamada -> . ID LPAREN RPAREN
    (28) llamada -> . ID . ID LPAREN args RPAREN
    (29) llamada -> . ID . ID LPAREN RPAREN
    (58) llamada -> . LISTOF LPAREN args RPAREN
    (59) llamada -> . SETOF LPAREN args RPAREN
    (60) llamada -> . MUTABLELISTOF LPAREN args RPAREN
    (81) llamada -> . ID . LENGTH LPAREN RPAREN
    (82) llamada -> . STRING . LENGTH LPAREN RPAREN
    (83) llamada -> . ID . EQUALSM LPAREN ID RPAREN
    (84) llamada -> . STRING . EQUALSM LPAREN ID RPAREN
    (85) llamada -> . STRING . EQUALSM LPAREN STRING RPAREN
    (86) llamada -> . ID . EQUALSM LPAREN STRING RPAREN
    (87) llamada -> . ID . COUNT LPAREN RPAREN
    (88) llamada -> . ID . FIRST LPAREN RPAREN
    (89) llamada -> . ID . LAST LPAREN RPAREN
    (90) llamada -> . ID . GET LPAREN INTV RPAREN
    (91) llamada -> . ID . GET LPAREN ID RPAREN
    (46) valor -> . ID
    (47) valor -> . number
    (48) valor -> . STRING
    (49) valor -> . TRUE
    (50) valor -> . FALSE
    (51) valor -> . NULL
    (52) valor -> . NOT valor
    (79) number -> . INTV
    (80) number -> . FLOATV

    LPAREN          shift and go to state 51
    PRINTLN         shift and go to state 16
    ID              shift and go to state 48
    LISTOF          shift and go to state 17
    SETOF           shift and go to state 18
    MUTABLELISTOF   shift and go to state 19
    STRING          shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    NULL            shift and go to state 58
    NOT             shift and go to state 59
    INTV            shift and go to state 54
    FLOATV          shift and go to state 60

    args                           shift and go to state 135
    expresion                      shift and go to state 64
    llamada                        shift and go to state 50
    valor                          shift and go to state 52
    number                         shift and go to state 55

state 108

    (28) llamada -> ID . ID LPAREN . args RPAREN
    (29) llamada -> ID . ID LPAREN . RPAREN
    (44) args -> . expresion
    (45) args -> . args , args
    (61) expresion -> . llamada
    (62) expresion -> . LPAREN expresion RPAREN
    (63) expresion -> . valor
    (64) expresion -> . expresion operadoresMat expresion
    (65) expresion -> . expresion operadoresLog expresion
    (25) llamada -> . PRINTLN LPAREN expresion RPAREN
    (26) llamada -> . ID LPAREN args RPAREN
    (27) llamada -> . ID LPAREN RPAREN
    (28) llamada -> . ID . ID LPAREN args RPAREN
    (29) llamada -> . ID . ID LPAREN RPAREN
    (58) llamada -> . LISTOF LPAREN args RPAREN
    (59) llamada -> . SETOF LPAREN args RPAREN
    (60) llamada -> . MUTABLELISTOF LPAREN args RPAREN
    (81) llamada -> . ID . LENGTH LPAREN RPAREN
    (82) llamada -> . STRING . LENGTH LPAREN RPAREN
    (83) llamada -> . ID . EQUALSM LPAREN ID RPAREN
    (84) llamada -> . STRING . EQUALSM LPAREN ID RPAREN
    (85) llamada -> . STRING . EQUALSM LPAREN STRING RPAREN
    (86) llamada -> . ID . EQUALSM LPAREN STRING RPAREN
    (87) llamada -> . ID . COUNT LPAREN RPAREN
    (88) llamada -> . ID . FIRST LPAREN RPAREN
    (89) llamada -> . ID . LAST LPAREN RPAREN
    (90) llamada -> . ID . GET LPAREN INTV RPAREN
    (91) llamada -> . ID . GET LPAREN ID RPAREN
    (46) valor -> . ID
    (47) valor -> . number
    (48) valor -> . STRING
    (49) valor -> . TRUE
    (50) valor -> . FALSE
    (51) valor -> . NULL
    (52) valor -> . NOT valor
    (79) number -> . INTV
    (80) number -> . FLOATV

    RPAREN          shift and go to state 137
    LPAREN          shift and go to state 51
    PRINTLN         shift and go to state 16
    ID              shift and go to state 48
    LISTOF          shift and go to state 17
    SETOF           shift and go to state 18
    MUTABLELISTOF   shift and go to state 19
    STRING          shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    NULL            shift and go to state 58
    NOT             shift and go to state 59
    INTV            shift and go to state 54
    FLOATV          shift and go to state 60

    args                           shift and go to state 136
    expresion                      shift and go to state 64
    llamada                        shift and go to state 50
    valor                          shift and go to state 52
    number                         shift and go to state 55

state 109

    (81) llamada -> ID . LENGTH LPAREN . RPAREN

    RPAREN          shift and go to state 138


state 110

    (83) llamada -> ID . EQUALSM LPAREN . ID RPAREN
    (86) llamada -> ID . EQUALSM LPAREN . STRING RPAREN

    ID              shift and go to state 139
    STRING          shift and go to state 140


state 111

    (87) llamada -> ID . COUNT LPAREN . RPAREN

    RPAREN          shift and go to state 141


state 112

    (88) llamada -> ID . FIRST LPAREN . RPAREN

    RPAREN          shift and go to state 142


state 113

    (89) llamada -> ID . LAST LPAREN . RPAREN

    RPAREN          shift and go to state 143


state 114

    (90) llamada -> ID . GET LPAREN . INTV RPAREN
    (91) llamada -> ID . GET LPAREN . ID RPAREN

    INTV            shift and go to state 145
    ID              shift and go to state 144


state 115

    (56) asignacion -> declarador ID ASSIGN expresion .
    (64) expresion -> expresion . operadoresMat expresion
    (65) expresion -> expresion . operadoresLog expresion
    (74) operadoresMat -> . MINUS
    (75) operadoresMat -> . PLUS
    (76) operadoresMat -> . TIMES
    (77) operadoresMat -> . DIVIDE
    (78) operadoresMat -> . MODULE
    (66) operadoresLog -> . OR
    (67) operadoresLog -> . AND
    (68) operadoresLog -> . EQUALS
    (69) operadoresLog -> . NOTEQUALS
    (70) operadoresLog -> . GREATER
    (71) operadoresLog -> . LOWER
    (72) operadoresLog -> . GREATERE
    (73) operadoresLog -> . LOWERE

    FUNCTION        reduce using rule 56 (asignacion -> declarador ID ASSIGN expresion .)
    ID              reduce using rule 56 (asignacion -> declarador ID ASSIGN expresion .)
    IF              reduce using rule 56 (asignacion -> declarador ID ASSIGN expresion .)
    ELSE            reduce using rule 56 (asignacion -> declarador ID ASSIGN expresion .)
    PRINTLN         reduce using rule 56 (asignacion -> declarador ID ASSIGN expresion .)
    LISTOF          reduce using rule 56 (asignacion -> declarador ID ASSIGN expresion .)
    SETOF           reduce using rule 56 (asignacion -> declarador ID ASSIGN expresion .)
    MUTABLELISTOF   reduce using rule 56 (asignacion -> declarador ID ASSIGN expresion .)
    STRING          reduce using rule 56 (asignacion -> declarador ID ASSIGN expresion .)
    VAR             reduce using rule 56 (asignacion -> declarador ID ASSIGN expresion .)
    VAL             reduce using rule 56 (asignacion -> declarador ID ASSIGN expresion .)
    WHILE           reduce using rule 56 (asignacion -> declarador ID ASSIGN expresion .)
    FOR             reduce using rule 56 (asignacion -> declarador ID ASSIGN expresion .)
    $end            reduce using rule 56 (asignacion -> declarador ID ASSIGN expresion .)
    RCBRACKET       reduce using rule 56 (asignacion -> declarador ID ASSIGN expresion .)
    RETURN          reduce using rule 56 (asignacion -> declarador ID ASSIGN expresion .)
    MINUS           shift and go to state 89
    PLUS            shift and go to state 90
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 92
    MODULE          shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95
    EQUALS          shift and go to state 96
    NOTEQUALS       shift and go to state 97
    GREATER         shift and go to state 98
    LOWER           shift and go to state 99
    GREATERE        shift and go to state 100
    LOWERE          shift and go to state 101

    operadoresMat                  shift and go to state 87
    operadoresLog                  shift and go to state 88

state 116

    (17) estructuraControl -> IF LPAREN expresion RPAREN . instrucciones
    (10) instrucciones -> . LCBRACKET cuerpo RCBRACKET
    (11) instrucciones -> . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . estructuraControl
    (7) sentencia -> . bucles
    (8) sentencia -> . llamada
    (9) sentencia -> . declaracion
    (55) asignacion -> . ID ASSIGN expresion
    (56) asignacion -> . declarador ID ASSIGN expresion
    (17) estructuraControl -> . IF LPAREN expresion RPAREN instrucciones
    (18) estructuraControl -> . ELSE instrucciones
    (19) bucles -> . while instrucciones
    (20) bucles -> . for instrucciones
    (25) llamada -> . PRINTLN LPAREN expresion RPAREN
    (26) llamada -> . ID LPAREN args RPAREN
    (27) llamada -> . ID LPAREN RPAREN
    (28) llamada -> . ID . ID LPAREN args RPAREN
    (29) llamada -> . ID . ID LPAREN RPAREN
    (58) llamada -> . LISTOF LPAREN args RPAREN
    (59) llamada -> . SETOF LPAREN args RPAREN
    (60) llamada -> . MUTABLELISTOF LPAREN args RPAREN
    (81) llamada -> . ID . LENGTH LPAREN RPAREN
    (82) llamada -> . STRING . LENGTH LPAREN RPAREN
    (83) llamada -> . ID . EQUALSM LPAREN ID RPAREN
    (84) llamada -> . STRING . EQUALSM LPAREN ID RPAREN
    (85) llamada -> . STRING . EQUALSM LPAREN STRING RPAREN
    (86) llamada -> . ID . EQUALSM LPAREN STRING RPAREN
    (87) llamada -> . ID . COUNT LPAREN RPAREN
    (88) llamada -> . ID . FIRST LPAREN RPAREN
    (89) llamada -> . ID . LAST LPAREN RPAREN
    (90) llamada -> . ID . GET LPAREN INTV RPAREN
    (91) llamada -> . ID . GET LPAREN ID RPAREN
    (57) declaracion -> . declarador ID
    (53) declarador -> . VAR
    (54) declarador -> . VAL
    (21) while -> . WHILE LPAREN expresion RPAREN
    (22) for -> . FOR LPAREN ID IN ID RPAREN

    LCBRACKET       shift and go to state 35
    ID              shift and go to state 37
    IF              shift and go to state 12
    ELSE            shift and go to state 13
    PRINTLN         shift and go to state 16
    LISTOF          shift and go to state 17
    SETOF           shift and go to state 18
    MUTABLELISTOF   shift and go to state 19
    STRING          shift and go to state 20
    VAR             shift and go to state 21
    VAL             shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24

    instrucciones                  shift and go to state 146
    sentencia                      shift and go to state 36
    asignacion                     shift and go to state 4
    estructuraControl              shift and go to state 5
    bucles                         shift and go to state 6
    llamada                        shift and go to state 7
    declaracion                    shift and go to state 8
    declarador                     shift and go to state 11
    while                          shift and go to state 14
    for                            shift and go to state 15

state 117

    (10) instrucciones -> LCBRACKET cuerpo RCBRACKET .

    FUNCTION        reduce using rule 10 (instrucciones -> LCBRACKET cuerpo RCBRACKET .)
    ID              reduce using rule 10 (instrucciones -> LCBRACKET cuerpo RCBRACKET .)
    IF              reduce using rule 10 (instrucciones -> LCBRACKET cuerpo RCBRACKET .)
    ELSE            reduce using rule 10 (instrucciones -> LCBRACKET cuerpo RCBRACKET .)
    PRINTLN         reduce using rule 10 (instrucciones -> LCBRACKET cuerpo RCBRACKET .)
    LISTOF          reduce using rule 10 (instrucciones -> LCBRACKET cuerpo RCBRACKET .)
    SETOF           reduce using rule 10 (instrucciones -> LCBRACKET cuerpo RCBRACKET .)
    MUTABLELISTOF   reduce using rule 10 (instrucciones -> LCBRACKET cuerpo RCBRACKET .)
    STRING          reduce using rule 10 (instrucciones -> LCBRACKET cuerpo RCBRACKET .)
    VAR             reduce using rule 10 (instrucciones -> LCBRACKET cuerpo RCBRACKET .)
    VAL             reduce using rule 10 (instrucciones -> LCBRACKET cuerpo RCBRACKET .)
    WHILE           reduce using rule 10 (instrucciones -> LCBRACKET cuerpo RCBRACKET .)
    FOR             reduce using rule 10 (instrucciones -> LCBRACKET cuerpo RCBRACKET .)
    $end            reduce using rule 10 (instrucciones -> LCBRACKET cuerpo RCBRACKET .)
    RCBRACKET       reduce using rule 10 (instrucciones -> LCBRACKET cuerpo RCBRACKET .)
    RETURN          reduce using rule 10 (instrucciones -> LCBRACKET cuerpo RCBRACKET .)


state 118

    (25) llamada -> PRINTLN LPAREN expresion RPAREN .

    FUNCTION        reduce using rule 25 (llamada -> PRINTLN LPAREN expresion RPAREN .)
    ID              reduce using rule 25 (llamada -> PRINTLN LPAREN expresion RPAREN .)
    IF              reduce using rule 25 (llamada -> PRINTLN LPAREN expresion RPAREN .)
    ELSE            reduce using rule 25 (llamada -> PRINTLN LPAREN expresion RPAREN .)
    PRINTLN         reduce using rule 25 (llamada -> PRINTLN LPAREN expresion RPAREN .)
    LISTOF          reduce using rule 25 (llamada -> PRINTLN LPAREN expresion RPAREN .)
    SETOF           reduce using rule 25 (llamada -> PRINTLN LPAREN expresion RPAREN .)
    MUTABLELISTOF   reduce using rule 25 (llamada -> PRINTLN LPAREN expresion RPAREN .)
    STRING          reduce using rule 25 (llamada -> PRINTLN LPAREN expresion RPAREN .)
    VAR             reduce using rule 25 (llamada -> PRINTLN LPAREN expresion RPAREN .)
    VAL             reduce using rule 25 (llamada -> PRINTLN LPAREN expresion RPAREN .)
    WHILE           reduce using rule 25 (llamada -> PRINTLN LPAREN expresion RPAREN .)
    FOR             reduce using rule 25 (llamada -> PRINTLN LPAREN expresion RPAREN .)
    $end            reduce using rule 25 (llamada -> PRINTLN LPAREN expresion RPAREN .)
    RCBRACKET       reduce using rule 25 (llamada -> PRINTLN LPAREN expresion RPAREN .)
    RETURN          reduce using rule 25 (llamada -> PRINTLN LPAREN expresion RPAREN .)
    RSBRACKET       reduce using rule 25 (llamada -> PRINTLN LPAREN expresion RPAREN .)
    MINUS           reduce using rule 25 (llamada -> PRINTLN LPAREN expresion RPAREN .)
    PLUS            reduce using rule 25 (llamada -> PRINTLN LPAREN expresion RPAREN .)
    TIMES           reduce using rule 25 (llamada -> PRINTLN LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 25 (llamada -> PRINTLN LPAREN expresion RPAREN .)
    MODULE          reduce using rule 25 (llamada -> PRINTLN LPAREN expresion RPAREN .)
    OR              reduce using rule 25 (llamada -> PRINTLN LPAREN expresion RPAREN .)
    AND             reduce using rule 25 (llamada -> PRINTLN LPAREN expresion RPAREN .)
    EQUALS          reduce using rule 25 (llamada -> PRINTLN LPAREN expresion RPAREN .)
    NOTEQUALS       reduce using rule 25 (llamada -> PRINTLN LPAREN expresion RPAREN .)
    GREATER         reduce using rule 25 (llamada -> PRINTLN LPAREN expresion RPAREN .)
    LOWER           reduce using rule 25 (llamada -> PRINTLN LPAREN expresion RPAREN .)
    GREATERE        reduce using rule 25 (llamada -> PRINTLN LPAREN expresion RPAREN .)
    LOWERE          reduce using rule 25 (llamada -> PRINTLN LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 25 (llamada -> PRINTLN LPAREN expresion RPAREN .)
    ,               reduce using rule 25 (llamada -> PRINTLN LPAREN expresion RPAREN .)


state 119

    (58) llamada -> LISTOF LPAREN args RPAREN .

    FUNCTION        reduce using rule 58 (llamada -> LISTOF LPAREN args RPAREN .)
    ID              reduce using rule 58 (llamada -> LISTOF LPAREN args RPAREN .)
    IF              reduce using rule 58 (llamada -> LISTOF LPAREN args RPAREN .)
    ELSE            reduce using rule 58 (llamada -> LISTOF LPAREN args RPAREN .)
    PRINTLN         reduce using rule 58 (llamada -> LISTOF LPAREN args RPAREN .)
    LISTOF          reduce using rule 58 (llamada -> LISTOF LPAREN args RPAREN .)
    SETOF           reduce using rule 58 (llamada -> LISTOF LPAREN args RPAREN .)
    MUTABLELISTOF   reduce using rule 58 (llamada -> LISTOF LPAREN args RPAREN .)
    STRING          reduce using rule 58 (llamada -> LISTOF LPAREN args RPAREN .)
    VAR             reduce using rule 58 (llamada -> LISTOF LPAREN args RPAREN .)
    VAL             reduce using rule 58 (llamada -> LISTOF LPAREN args RPAREN .)
    WHILE           reduce using rule 58 (llamada -> LISTOF LPAREN args RPAREN .)
    FOR             reduce using rule 58 (llamada -> LISTOF LPAREN args RPAREN .)
    $end            reduce using rule 58 (llamada -> LISTOF LPAREN args RPAREN .)
    RCBRACKET       reduce using rule 58 (llamada -> LISTOF LPAREN args RPAREN .)
    RETURN          reduce using rule 58 (llamada -> LISTOF LPAREN args RPAREN .)
    RSBRACKET       reduce using rule 58 (llamada -> LISTOF LPAREN args RPAREN .)
    MINUS           reduce using rule 58 (llamada -> LISTOF LPAREN args RPAREN .)
    PLUS            reduce using rule 58 (llamada -> LISTOF LPAREN args RPAREN .)
    TIMES           reduce using rule 58 (llamada -> LISTOF LPAREN args RPAREN .)
    DIVIDE          reduce using rule 58 (llamada -> LISTOF LPAREN args RPAREN .)
    MODULE          reduce using rule 58 (llamada -> LISTOF LPAREN args RPAREN .)
    OR              reduce using rule 58 (llamada -> LISTOF LPAREN args RPAREN .)
    AND             reduce using rule 58 (llamada -> LISTOF LPAREN args RPAREN .)
    EQUALS          reduce using rule 58 (llamada -> LISTOF LPAREN args RPAREN .)
    NOTEQUALS       reduce using rule 58 (llamada -> LISTOF LPAREN args RPAREN .)
    GREATER         reduce using rule 58 (llamada -> LISTOF LPAREN args RPAREN .)
    LOWER           reduce using rule 58 (llamada -> LISTOF LPAREN args RPAREN .)
    GREATERE        reduce using rule 58 (llamada -> LISTOF LPAREN args RPAREN .)
    LOWERE          reduce using rule 58 (llamada -> LISTOF LPAREN args RPAREN .)
    RPAREN          reduce using rule 58 (llamada -> LISTOF LPAREN args RPAREN .)
    ,               reduce using rule 58 (llamada -> LISTOF LPAREN args RPAREN .)


state 120

    (59) llamada -> SETOF LPAREN args RPAREN .

    FUNCTION        reduce using rule 59 (llamada -> SETOF LPAREN args RPAREN .)
    ID              reduce using rule 59 (llamada -> SETOF LPAREN args RPAREN .)
    IF              reduce using rule 59 (llamada -> SETOF LPAREN args RPAREN .)
    ELSE            reduce using rule 59 (llamada -> SETOF LPAREN args RPAREN .)
    PRINTLN         reduce using rule 59 (llamada -> SETOF LPAREN args RPAREN .)
    LISTOF          reduce using rule 59 (llamada -> SETOF LPAREN args RPAREN .)
    SETOF           reduce using rule 59 (llamada -> SETOF LPAREN args RPAREN .)
    MUTABLELISTOF   reduce using rule 59 (llamada -> SETOF LPAREN args RPAREN .)
    STRING          reduce using rule 59 (llamada -> SETOF LPAREN args RPAREN .)
    VAR             reduce using rule 59 (llamada -> SETOF LPAREN args RPAREN .)
    VAL             reduce using rule 59 (llamada -> SETOF LPAREN args RPAREN .)
    WHILE           reduce using rule 59 (llamada -> SETOF LPAREN args RPAREN .)
    FOR             reduce using rule 59 (llamada -> SETOF LPAREN args RPAREN .)
    $end            reduce using rule 59 (llamada -> SETOF LPAREN args RPAREN .)
    RCBRACKET       reduce using rule 59 (llamada -> SETOF LPAREN args RPAREN .)
    RETURN          reduce using rule 59 (llamada -> SETOF LPAREN args RPAREN .)
    RSBRACKET       reduce using rule 59 (llamada -> SETOF LPAREN args RPAREN .)
    MINUS           reduce using rule 59 (llamada -> SETOF LPAREN args RPAREN .)
    PLUS            reduce using rule 59 (llamada -> SETOF LPAREN args RPAREN .)
    TIMES           reduce using rule 59 (llamada -> SETOF LPAREN args RPAREN .)
    DIVIDE          reduce using rule 59 (llamada -> SETOF LPAREN args RPAREN .)
    MODULE          reduce using rule 59 (llamada -> SETOF LPAREN args RPAREN .)
    OR              reduce using rule 59 (llamada -> SETOF LPAREN args RPAREN .)
    AND             reduce using rule 59 (llamada -> SETOF LPAREN args RPAREN .)
    EQUALS          reduce using rule 59 (llamada -> SETOF LPAREN args RPAREN .)
    NOTEQUALS       reduce using rule 59 (llamada -> SETOF LPAREN args RPAREN .)
    GREATER         reduce using rule 59 (llamada -> SETOF LPAREN args RPAREN .)
    LOWER           reduce using rule 59 (llamada -> SETOF LPAREN args RPAREN .)
    GREATERE        reduce using rule 59 (llamada -> SETOF LPAREN args RPAREN .)
    LOWERE          reduce using rule 59 (llamada -> SETOF LPAREN args RPAREN .)
    RPAREN          reduce using rule 59 (llamada -> SETOF LPAREN args RPAREN .)
    ,               reduce using rule 59 (llamada -> SETOF LPAREN args RPAREN .)


state 121

    (60) llamada -> MUTABLELISTOF LPAREN args RPAREN .

    FUNCTION        reduce using rule 60 (llamada -> MUTABLELISTOF LPAREN args RPAREN .)
    ID              reduce using rule 60 (llamada -> MUTABLELISTOF LPAREN args RPAREN .)
    IF              reduce using rule 60 (llamada -> MUTABLELISTOF LPAREN args RPAREN .)
    ELSE            reduce using rule 60 (llamada -> MUTABLELISTOF LPAREN args RPAREN .)
    PRINTLN         reduce using rule 60 (llamada -> MUTABLELISTOF LPAREN args RPAREN .)
    LISTOF          reduce using rule 60 (llamada -> MUTABLELISTOF LPAREN args RPAREN .)
    SETOF           reduce using rule 60 (llamada -> MUTABLELISTOF LPAREN args RPAREN .)
    MUTABLELISTOF   reduce using rule 60 (llamada -> MUTABLELISTOF LPAREN args RPAREN .)
    STRING          reduce using rule 60 (llamada -> MUTABLELISTOF LPAREN args RPAREN .)
    VAR             reduce using rule 60 (llamada -> MUTABLELISTOF LPAREN args RPAREN .)
    VAL             reduce using rule 60 (llamada -> MUTABLELISTOF LPAREN args RPAREN .)
    WHILE           reduce using rule 60 (llamada -> MUTABLELISTOF LPAREN args RPAREN .)
    FOR             reduce using rule 60 (llamada -> MUTABLELISTOF LPAREN args RPAREN .)
    $end            reduce using rule 60 (llamada -> MUTABLELISTOF LPAREN args RPAREN .)
    RCBRACKET       reduce using rule 60 (llamada -> MUTABLELISTOF LPAREN args RPAREN .)
    RETURN          reduce using rule 60 (llamada -> MUTABLELISTOF LPAREN args RPAREN .)
    RSBRACKET       reduce using rule 60 (llamada -> MUTABLELISTOF LPAREN args RPAREN .)
    MINUS           reduce using rule 60 (llamada -> MUTABLELISTOF LPAREN args RPAREN .)
    PLUS            reduce using rule 60 (llamada -> MUTABLELISTOF LPAREN args RPAREN .)
    TIMES           reduce using rule 60 (llamada -> MUTABLELISTOF LPAREN args RPAREN .)
    DIVIDE          reduce using rule 60 (llamada -> MUTABLELISTOF LPAREN args RPAREN .)
    MODULE          reduce using rule 60 (llamada -> MUTABLELISTOF LPAREN args RPAREN .)
    OR              reduce using rule 60 (llamada -> MUTABLELISTOF LPAREN args RPAREN .)
    AND             reduce using rule 60 (llamada -> MUTABLELISTOF LPAREN args RPAREN .)
    EQUALS          reduce using rule 60 (llamada -> MUTABLELISTOF LPAREN args RPAREN .)
    NOTEQUALS       reduce using rule 60 (llamada -> MUTABLELISTOF LPAREN args RPAREN .)
    GREATER         reduce using rule 60 (llamada -> MUTABLELISTOF LPAREN args RPAREN .)
    LOWER           reduce using rule 60 (llamada -> MUTABLELISTOF LPAREN args RPAREN .)
    GREATERE        reduce using rule 60 (llamada -> MUTABLELISTOF LPAREN args RPAREN .)
    LOWERE          reduce using rule 60 (llamada -> MUTABLELISTOF LPAREN args RPAREN .)
    RPAREN          reduce using rule 60 (llamada -> MUTABLELISTOF LPAREN args RPAREN .)
    ,               reduce using rule 60 (llamada -> MUTABLELISTOF LPAREN args RPAREN .)


state 122

    (82) llamada -> STRING . LENGTH LPAREN . RPAREN

    RPAREN          shift and go to state 147


state 123

    (84) llamada -> STRING . EQUALSM LPAREN . ID RPAREN
    (85) llamada -> STRING . EQUALSM LPAREN . STRING RPAREN

    ID              shift and go to state 149
    STRING          shift and go to state 148


state 124

    (21) while -> WHILE LPAREN expresion RPAREN .

    LCBRACKET       reduce using rule 21 (while -> WHILE LPAREN expresion RPAREN .)
    ID              reduce using rule 21 (while -> WHILE LPAREN expresion RPAREN .)
    IF              reduce using rule 21 (while -> WHILE LPAREN expresion RPAREN .)
    ELSE            reduce using rule 21 (while -> WHILE LPAREN expresion RPAREN .)
    PRINTLN         reduce using rule 21 (while -> WHILE LPAREN expresion RPAREN .)
    LISTOF          reduce using rule 21 (while -> WHILE LPAREN expresion RPAREN .)
    SETOF           reduce using rule 21 (while -> WHILE LPAREN expresion RPAREN .)
    MUTABLELISTOF   reduce using rule 21 (while -> WHILE LPAREN expresion RPAREN .)
    STRING          reduce using rule 21 (while -> WHILE LPAREN expresion RPAREN .)
    VAR             reduce using rule 21 (while -> WHILE LPAREN expresion RPAREN .)
    VAL             reduce using rule 21 (while -> WHILE LPAREN expresion RPAREN .)
    WHILE           reduce using rule 21 (while -> WHILE LPAREN expresion RPAREN .)
    FOR             reduce using rule 21 (while -> WHILE LPAREN expresion RPAREN .)


state 125

    (22) for -> FOR LPAREN ID IN . ID RPAREN

    ID              shift and go to state 150


state 126

    (42) params -> ID : . dato
    (31) dato -> . INT
    (32) dato -> . FLOAT
    (33) dato -> . BYTE
    (34) dato -> . SHORT
    (35) dato -> . DOUBLE
    (36) dato -> . ID
    (37) dato -> . LONG
    (38) dato -> . CHAR
    (39) dato -> . BOOLEAN
    (40) dato -> . LIST
    (41) dato -> . MUTABLELIST

    INT             shift and go to state 153
    FLOAT           shift and go to state 154
    BYTE            shift and go to state 155
    SHORT           shift and go to state 156
    DOUBLE          shift and go to state 157
    ID              shift and go to state 151
    LONG            shift and go to state 158
    CHAR            shift and go to state 159
    BOOLEAN         shift and go to state 160
    LIST            shift and go to state 161
    MUTABLELIST     shift and go to state 162

    dato                           shift and go to state 152

state 127

    (23) function -> FUNCTION ID LPAREN params RPAREN . instruccionesF
    (12) instruccionesF -> . LCBRACKET cuerpo retorno RCBRACKET
    (13) instruccionesF -> . LCBRACKET retorno RCBRACKET
    (14) instruccionesF -> . : dato LCBRACKET cuerpo retorno RCBRACKET
    (15) instruccionesF -> . : dato LCBRACKET retorno RCBRACKET

    LCBRACKET       shift and go to state 130
    :               shift and go to state 131

    instruccionesF                 shift and go to state 163

state 128

    (43) params -> params , . params
    (42) params -> . ID : dato
    (43) params -> . params , params

    ID              shift and go to state 83

    params                         shift and go to state 164

state 129

    (24) function -> FUNCTION ID LPAREN RPAREN instruccionesF .

    FUNCTION        reduce using rule 24 (function -> FUNCTION ID LPAREN RPAREN instruccionesF .)
    ID              reduce using rule 24 (function -> FUNCTION ID LPAREN RPAREN instruccionesF .)
    IF              reduce using rule 24 (function -> FUNCTION ID LPAREN RPAREN instruccionesF .)
    ELSE            reduce using rule 24 (function -> FUNCTION ID LPAREN RPAREN instruccionesF .)
    PRINTLN         reduce using rule 24 (function -> FUNCTION ID LPAREN RPAREN instruccionesF .)
    LISTOF          reduce using rule 24 (function -> FUNCTION ID LPAREN RPAREN instruccionesF .)
    SETOF           reduce using rule 24 (function -> FUNCTION ID LPAREN RPAREN instruccionesF .)
    MUTABLELISTOF   reduce using rule 24 (function -> FUNCTION ID LPAREN RPAREN instruccionesF .)
    STRING          reduce using rule 24 (function -> FUNCTION ID LPAREN RPAREN instruccionesF .)
    VAR             reduce using rule 24 (function -> FUNCTION ID LPAREN RPAREN instruccionesF .)
    VAL             reduce using rule 24 (function -> FUNCTION ID LPAREN RPAREN instruccionesF .)
    WHILE           reduce using rule 24 (function -> FUNCTION ID LPAREN RPAREN instruccionesF .)
    FOR             reduce using rule 24 (function -> FUNCTION ID LPAREN RPAREN instruccionesF .)
    $end            reduce using rule 24 (function -> FUNCTION ID LPAREN RPAREN instruccionesF .)
    RCBRACKET       reduce using rule 24 (function -> FUNCTION ID LPAREN RPAREN instruccionesF .)
    RETURN          reduce using rule 24 (function -> FUNCTION ID LPAREN RPAREN instruccionesF .)


state 130

    (12) instruccionesF -> LCBRACKET . cuerpo retorno RCBRACKET
    (13) instruccionesF -> LCBRACKET . retorno RCBRACKET
    (1) cuerpo -> . sentencia
    (2) cuerpo -> . function
    (3) cuerpo -> . sentencia cuerpo
    (4) cuerpo -> . function cuerpo
    (16) retorno -> . RETURN expresion
    (5) sentencia -> . asignacion
    (6) sentencia -> . estructuraControl
    (7) sentencia -> . bucles
    (8) sentencia -> . llamada
    (9) sentencia -> . declaracion
    (23) function -> . FUNCTION ID LPAREN params RPAREN instruccionesF
    (24) function -> . FUNCTION ID LPAREN RPAREN instruccionesF
    (30) function -> . ID LSBRACKET expresion RSBRACKET
    (55) asignacion -> . ID ASSIGN expresion
    (56) asignacion -> . declarador ID ASSIGN expresion
    (17) estructuraControl -> . IF LPAREN expresion RPAREN instrucciones
    (18) estructuraControl -> . ELSE instrucciones
    (19) bucles -> . while instrucciones
    (20) bucles -> . for instrucciones
    (25) llamada -> . PRINTLN LPAREN expresion RPAREN
    (26) llamada -> . ID LPAREN args RPAREN
    (27) llamada -> . ID LPAREN RPAREN
    (28) llamada -> . ID . ID LPAREN args RPAREN
    (29) llamada -> . ID . ID LPAREN RPAREN
    (58) llamada -> . LISTOF LPAREN args RPAREN
    (59) llamada -> . SETOF LPAREN args RPAREN
    (60) llamada -> . MUTABLELISTOF LPAREN args RPAREN
    (81) llamada -> . ID . LENGTH LPAREN RPAREN
    (82) llamada -> . STRING . LENGTH LPAREN RPAREN
    (83) llamada -> . ID . EQUALSM LPAREN ID RPAREN
    (84) llamada -> . STRING . EQUALSM LPAREN ID RPAREN
    (85) llamada -> . STRING . EQUALSM LPAREN STRING RPAREN
    (86) llamada -> . ID . EQUALSM LPAREN STRING RPAREN
    (87) llamada -> . ID . COUNT LPAREN RPAREN
    (88) llamada -> . ID . FIRST LPAREN RPAREN
    (89) llamada -> . ID . LAST LPAREN RPAREN
    (90) llamada -> . ID . GET LPAREN INTV RPAREN
    (91) llamada -> . ID . GET LPAREN ID RPAREN
    (57) declaracion -> . declarador ID
    (53) declarador -> . VAR
    (54) declarador -> . VAL
    (21) while -> . WHILE LPAREN expresion RPAREN
    (22) for -> . FOR LPAREN ID IN ID RPAREN

    RETURN          shift and go to state 167
    FUNCTION        shift and go to state 9
    ID              shift and go to state 10
    IF              shift and go to state 12
    ELSE            shift and go to state 13
    PRINTLN         shift and go to state 16
    LISTOF          shift and go to state 17
    SETOF           shift and go to state 18
    MUTABLELISTOF   shift and go to state 19
    STRING          shift and go to state 20
    VAR             shift and go to state 21
    VAL             shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24

    cuerpo                         shift and go to state 165
    retorno                        shift and go to state 166
    sentencia                      shift and go to state 2
    function                       shift and go to state 3
    asignacion                     shift and go to state 4
    estructuraControl              shift and go to state 5
    bucles                         shift and go to state 6
    llamada                        shift and go to state 7
    declaracion                    shift and go to state 8
    declarador                     shift and go to state 11
    while                          shift and go to state 14
    for                            shift and go to state 15

state 131

    (14) instruccionesF -> : . dato LCBRACKET cuerpo retorno RCBRACKET
    (15) instruccionesF -> : . dato LCBRACKET retorno RCBRACKET
    (31) dato -> . INT
    (32) dato -> . FLOAT
    (33) dato -> . BYTE
    (34) dato -> . SHORT
    (35) dato -> . DOUBLE
    (36) dato -> . ID
    (37) dato -> . LONG
    (38) dato -> . CHAR
    (39) dato -> . BOOLEAN
    (40) dato -> . LIST
    (41) dato -> . MUTABLELIST

    INT             shift and go to state 153
    FLOAT           shift and go to state 154
    BYTE            shift and go to state 155
    SHORT           shift and go to state 156
    DOUBLE          shift and go to state 157
    ID              shift and go to state 151
    LONG            shift and go to state 158
    CHAR            shift and go to state 159
    BOOLEAN         shift and go to state 160
    LIST            shift and go to state 161
    MUTABLELIST     shift and go to state 162

    dato                           shift and go to state 168

state 132

    (64) expresion -> expresion operadoresMat expresion .
    (64) expresion -> expresion . operadoresMat expresion
    (65) expresion -> expresion . operadoresLog expresion
    (74) operadoresMat -> . MINUS
    (75) operadoresMat -> . PLUS
    (76) operadoresMat -> . TIMES
    (77) operadoresMat -> . DIVIDE
    (78) operadoresMat -> . MODULE
    (66) operadoresLog -> . OR
    (67) operadoresLog -> . AND
    (68) operadoresLog -> . EQUALS
    (69) operadoresLog -> . NOTEQUALS
    (70) operadoresLog -> . GREATER
    (71) operadoresLog -> . LOWER
    (72) operadoresLog -> . GREATERE
    (73) operadoresLog -> . LOWERE

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for GREATERE resolved as shift
  ! shift/reduce conflict for LOWERE resolved as shift
    RSBRACKET       reduce using rule 64 (expresion -> expresion operadoresMat expresion .)
    FUNCTION        reduce using rule 64 (expresion -> expresion operadoresMat expresion .)
    ID              reduce using rule 64 (expresion -> expresion operadoresMat expresion .)
    IF              reduce using rule 64 (expresion -> expresion operadoresMat expresion .)
    ELSE            reduce using rule 64 (expresion -> expresion operadoresMat expresion .)
    PRINTLN         reduce using rule 64 (expresion -> expresion operadoresMat expresion .)
    LISTOF          reduce using rule 64 (expresion -> expresion operadoresMat expresion .)
    SETOF           reduce using rule 64 (expresion -> expresion operadoresMat expresion .)
    MUTABLELISTOF   reduce using rule 64 (expresion -> expresion operadoresMat expresion .)
    STRING          reduce using rule 64 (expresion -> expresion operadoresMat expresion .)
    VAR             reduce using rule 64 (expresion -> expresion operadoresMat expresion .)
    VAL             reduce using rule 64 (expresion -> expresion operadoresMat expresion .)
    WHILE           reduce using rule 64 (expresion -> expresion operadoresMat expresion .)
    FOR             reduce using rule 64 (expresion -> expresion operadoresMat expresion .)
    $end            reduce using rule 64 (expresion -> expresion operadoresMat expresion .)
    RCBRACKET       reduce using rule 64 (expresion -> expresion operadoresMat expresion .)
    RETURN          reduce using rule 64 (expresion -> expresion operadoresMat expresion .)
    RPAREN          reduce using rule 64 (expresion -> expresion operadoresMat expresion .)
    ,               reduce using rule 64 (expresion -> expresion operadoresMat expresion .)
    MINUS           shift and go to state 89
    PLUS            shift and go to state 90
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 92
    MODULE          shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95
    EQUALS          shift and go to state 96
    NOTEQUALS       shift and go to state 97
    GREATER         shift and go to state 98
    LOWER           shift and go to state 99
    GREATERE        shift and go to state 100
    LOWERE          shift and go to state 101

  ! MINUS           [ reduce using rule 64 (expresion -> expresion operadoresMat expresion .) ]
  ! PLUS            [ reduce using rule 64 (expresion -> expresion operadoresMat expresion .) ]
  ! TIMES           [ reduce using rule 64 (expresion -> expresion operadoresMat expresion .) ]
  ! DIVIDE          [ reduce using rule 64 (expresion -> expresion operadoresMat expresion .) ]
  ! MODULE          [ reduce using rule 64 (expresion -> expresion operadoresMat expresion .) ]
  ! OR              [ reduce using rule 64 (expresion -> expresion operadoresMat expresion .) ]
  ! AND             [ reduce using rule 64 (expresion -> expresion operadoresMat expresion .) ]
  ! EQUALS          [ reduce using rule 64 (expresion -> expresion operadoresMat expresion .) ]
  ! NOTEQUALS       [ reduce using rule 64 (expresion -> expresion operadoresMat expresion .) ]
  ! GREATER         [ reduce using rule 64 (expresion -> expresion operadoresMat expresion .) ]
  ! LOWER           [ reduce using rule 64 (expresion -> expresion operadoresMat expresion .) ]
  ! GREATERE        [ reduce using rule 64 (expresion -> expresion operadoresMat expresion .) ]
  ! LOWERE          [ reduce using rule 64 (expresion -> expresion operadoresMat expresion .) ]

    operadoresMat                  shift and go to state 87
    operadoresLog                  shift and go to state 88

state 133

    (65) expresion -> expresion operadoresLog expresion .
    (64) expresion -> expresion . operadoresMat expresion
    (65) expresion -> expresion . operadoresLog expresion
    (74) operadoresMat -> . MINUS
    (75) operadoresMat -> . PLUS
    (76) operadoresMat -> . TIMES
    (77) operadoresMat -> . DIVIDE
    (78) operadoresMat -> . MODULE
    (66) operadoresLog -> . OR
    (67) operadoresLog -> . AND
    (68) operadoresLog -> . EQUALS
    (69) operadoresLog -> . NOTEQUALS
    (70) operadoresLog -> . GREATER
    (71) operadoresLog -> . LOWER
    (72) operadoresLog -> . GREATERE
    (73) operadoresLog -> . LOWERE

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for GREATERE resolved as shift
  ! shift/reduce conflict for LOWERE resolved as shift
    RSBRACKET       reduce using rule 65 (expresion -> expresion operadoresLog expresion .)
    FUNCTION        reduce using rule 65 (expresion -> expresion operadoresLog expresion .)
    ID              reduce using rule 65 (expresion -> expresion operadoresLog expresion .)
    IF              reduce using rule 65 (expresion -> expresion operadoresLog expresion .)
    ELSE            reduce using rule 65 (expresion -> expresion operadoresLog expresion .)
    PRINTLN         reduce using rule 65 (expresion -> expresion operadoresLog expresion .)
    LISTOF          reduce using rule 65 (expresion -> expresion operadoresLog expresion .)
    SETOF           reduce using rule 65 (expresion -> expresion operadoresLog expresion .)
    MUTABLELISTOF   reduce using rule 65 (expresion -> expresion operadoresLog expresion .)
    STRING          reduce using rule 65 (expresion -> expresion operadoresLog expresion .)
    VAR             reduce using rule 65 (expresion -> expresion operadoresLog expresion .)
    VAL             reduce using rule 65 (expresion -> expresion operadoresLog expresion .)
    WHILE           reduce using rule 65 (expresion -> expresion operadoresLog expresion .)
    FOR             reduce using rule 65 (expresion -> expresion operadoresLog expresion .)
    $end            reduce using rule 65 (expresion -> expresion operadoresLog expresion .)
    RCBRACKET       reduce using rule 65 (expresion -> expresion operadoresLog expresion .)
    RETURN          reduce using rule 65 (expresion -> expresion operadoresLog expresion .)
    RPAREN          reduce using rule 65 (expresion -> expresion operadoresLog expresion .)
    ,               reduce using rule 65 (expresion -> expresion operadoresLog expresion .)
    MINUS           shift and go to state 89
    PLUS            shift and go to state 90
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 92
    MODULE          shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95
    EQUALS          shift and go to state 96
    NOTEQUALS       shift and go to state 97
    GREATER         shift and go to state 98
    LOWER           shift and go to state 99
    GREATERE        shift and go to state 100
    LOWERE          shift and go to state 101

  ! MINUS           [ reduce using rule 65 (expresion -> expresion operadoresLog expresion .) ]
  ! PLUS            [ reduce using rule 65 (expresion -> expresion operadoresLog expresion .) ]
  ! TIMES           [ reduce using rule 65 (expresion -> expresion operadoresLog expresion .) ]
  ! DIVIDE          [ reduce using rule 65 (expresion -> expresion operadoresLog expresion .) ]
  ! MODULE          [ reduce using rule 65 (expresion -> expresion operadoresLog expresion .) ]
  ! OR              [ reduce using rule 65 (expresion -> expresion operadoresLog expresion .) ]
  ! AND             [ reduce using rule 65 (expresion -> expresion operadoresLog expresion .) ]
  ! EQUALS          [ reduce using rule 65 (expresion -> expresion operadoresLog expresion .) ]
  ! NOTEQUALS       [ reduce using rule 65 (expresion -> expresion operadoresLog expresion .) ]
  ! GREATER         [ reduce using rule 65 (expresion -> expresion operadoresLog expresion .) ]
  ! LOWER           [ reduce using rule 65 (expresion -> expresion operadoresLog expresion .) ]
  ! GREATERE        [ reduce using rule 65 (expresion -> expresion operadoresLog expresion .) ]
  ! LOWERE          [ reduce using rule 65 (expresion -> expresion operadoresLog expresion .) ]

    operadoresLog                  shift and go to state 88
    operadoresMat                  shift and go to state 87

state 134

    (62) expresion -> LPAREN expresion RPAREN .

    RSBRACKET       reduce using rule 62 (expresion -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 62 (expresion -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 62 (expresion -> LPAREN expresion RPAREN .)
    TIMES           reduce using rule 62 (expresion -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 62 (expresion -> LPAREN expresion RPAREN .)
    MODULE          reduce using rule 62 (expresion -> LPAREN expresion RPAREN .)
    OR              reduce using rule 62 (expresion -> LPAREN expresion RPAREN .)
    AND             reduce using rule 62 (expresion -> LPAREN expresion RPAREN .)
    EQUALS          reduce using rule 62 (expresion -> LPAREN expresion RPAREN .)
    NOTEQUALS       reduce using rule 62 (expresion -> LPAREN expresion RPAREN .)
    GREATER         reduce using rule 62 (expresion -> LPAREN expresion RPAREN .)
    LOWER           reduce using rule 62 (expresion -> LPAREN expresion RPAREN .)
    GREATERE        reduce using rule 62 (expresion -> LPAREN expresion RPAREN .)
    LOWERE          reduce using rule 62 (expresion -> LPAREN expresion RPAREN .)
    FUNCTION        reduce using rule 62 (expresion -> LPAREN expresion RPAREN .)
    ID              reduce using rule 62 (expresion -> LPAREN expresion RPAREN .)
    IF              reduce using rule 62 (expresion -> LPAREN expresion RPAREN .)
    ELSE            reduce using rule 62 (expresion -> LPAREN expresion RPAREN .)
    PRINTLN         reduce using rule 62 (expresion -> LPAREN expresion RPAREN .)
    LISTOF          reduce using rule 62 (expresion -> LPAREN expresion RPAREN .)
    SETOF           reduce using rule 62 (expresion -> LPAREN expresion RPAREN .)
    MUTABLELISTOF   reduce using rule 62 (expresion -> LPAREN expresion RPAREN .)
    STRING          reduce using rule 62 (expresion -> LPAREN expresion RPAREN .)
    VAR             reduce using rule 62 (expresion -> LPAREN expresion RPAREN .)
    VAL             reduce using rule 62 (expresion -> LPAREN expresion RPAREN .)
    WHILE           reduce using rule 62 (expresion -> LPAREN expresion RPAREN .)
    FOR             reduce using rule 62 (expresion -> LPAREN expresion RPAREN .)
    $end            reduce using rule 62 (expresion -> LPAREN expresion RPAREN .)
    RCBRACKET       reduce using rule 62 (expresion -> LPAREN expresion RPAREN .)
    RETURN          reduce using rule 62 (expresion -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 62 (expresion -> LPAREN expresion RPAREN .)
    ,               reduce using rule 62 (expresion -> LPAREN expresion RPAREN .)


state 135

    (45) args -> args , args .
    (45) args -> args . , args

  ! shift/reduce conflict for , resolved as shift
    RPAREN          reduce using rule 45 (args -> args , args .)
    ,               shift and go to state 107

  ! ,               [ reduce using rule 45 (args -> args , args .) ]


state 136

    (28) llamada -> ID . ID LPAREN args . RPAREN
    (45) args -> args . , args

    RPAREN          shift and go to state 169
    ,               shift and go to state 107


state 137

    (29) llamada -> ID . ID LPAREN RPAREN .

    FUNCTION        reduce using rule 29 (llamada -> ID . ID LPAREN RPAREN .)
    ID              reduce using rule 29 (llamada -> ID . ID LPAREN RPAREN .)
    IF              reduce using rule 29 (llamada -> ID . ID LPAREN RPAREN .)
    ELSE            reduce using rule 29 (llamada -> ID . ID LPAREN RPAREN .)
    PRINTLN         reduce using rule 29 (llamada -> ID . ID LPAREN RPAREN .)
    LISTOF          reduce using rule 29 (llamada -> ID . ID LPAREN RPAREN .)
    SETOF           reduce using rule 29 (llamada -> ID . ID LPAREN RPAREN .)
    MUTABLELISTOF   reduce using rule 29 (llamada -> ID . ID LPAREN RPAREN .)
    STRING          reduce using rule 29 (llamada -> ID . ID LPAREN RPAREN .)
    VAR             reduce using rule 29 (llamada -> ID . ID LPAREN RPAREN .)
    VAL             reduce using rule 29 (llamada -> ID . ID LPAREN RPAREN .)
    WHILE           reduce using rule 29 (llamada -> ID . ID LPAREN RPAREN .)
    FOR             reduce using rule 29 (llamada -> ID . ID LPAREN RPAREN .)
    $end            reduce using rule 29 (llamada -> ID . ID LPAREN RPAREN .)
    RCBRACKET       reduce using rule 29 (llamada -> ID . ID LPAREN RPAREN .)
    RETURN          reduce using rule 29 (llamada -> ID . ID LPAREN RPAREN .)
    RSBRACKET       reduce using rule 29 (llamada -> ID . ID LPAREN RPAREN .)
    MINUS           reduce using rule 29 (llamada -> ID . ID LPAREN RPAREN .)
    PLUS            reduce using rule 29 (llamada -> ID . ID LPAREN RPAREN .)
    TIMES           reduce using rule 29 (llamada -> ID . ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 29 (llamada -> ID . ID LPAREN RPAREN .)
    MODULE          reduce using rule 29 (llamada -> ID . ID LPAREN RPAREN .)
    OR              reduce using rule 29 (llamada -> ID . ID LPAREN RPAREN .)
    AND             reduce using rule 29 (llamada -> ID . ID LPAREN RPAREN .)
    EQUALS          reduce using rule 29 (llamada -> ID . ID LPAREN RPAREN .)
    NOTEQUALS       reduce using rule 29 (llamada -> ID . ID LPAREN RPAREN .)
    GREATER         reduce using rule 29 (llamada -> ID . ID LPAREN RPAREN .)
    LOWER           reduce using rule 29 (llamada -> ID . ID LPAREN RPAREN .)
    GREATERE        reduce using rule 29 (llamada -> ID . ID LPAREN RPAREN .)
    LOWERE          reduce using rule 29 (llamada -> ID . ID LPAREN RPAREN .)
    RPAREN          reduce using rule 29 (llamada -> ID . ID LPAREN RPAREN .)
    ,               reduce using rule 29 (llamada -> ID . ID LPAREN RPAREN .)


state 138

    (81) llamada -> ID . LENGTH LPAREN RPAREN .

    FUNCTION        reduce using rule 81 (llamada -> ID . LENGTH LPAREN RPAREN .)
    ID              reduce using rule 81 (llamada -> ID . LENGTH LPAREN RPAREN .)
    IF              reduce using rule 81 (llamada -> ID . LENGTH LPAREN RPAREN .)
    ELSE            reduce using rule 81 (llamada -> ID . LENGTH LPAREN RPAREN .)
    PRINTLN         reduce using rule 81 (llamada -> ID . LENGTH LPAREN RPAREN .)
    LISTOF          reduce using rule 81 (llamada -> ID . LENGTH LPAREN RPAREN .)
    SETOF           reduce using rule 81 (llamada -> ID . LENGTH LPAREN RPAREN .)
    MUTABLELISTOF   reduce using rule 81 (llamada -> ID . LENGTH LPAREN RPAREN .)
    STRING          reduce using rule 81 (llamada -> ID . LENGTH LPAREN RPAREN .)
    VAR             reduce using rule 81 (llamada -> ID . LENGTH LPAREN RPAREN .)
    VAL             reduce using rule 81 (llamada -> ID . LENGTH LPAREN RPAREN .)
    WHILE           reduce using rule 81 (llamada -> ID . LENGTH LPAREN RPAREN .)
    FOR             reduce using rule 81 (llamada -> ID . LENGTH LPAREN RPAREN .)
    $end            reduce using rule 81 (llamada -> ID . LENGTH LPAREN RPAREN .)
    RCBRACKET       reduce using rule 81 (llamada -> ID . LENGTH LPAREN RPAREN .)
    RETURN          reduce using rule 81 (llamada -> ID . LENGTH LPAREN RPAREN .)
    RSBRACKET       reduce using rule 81 (llamada -> ID . LENGTH LPAREN RPAREN .)
    MINUS           reduce using rule 81 (llamada -> ID . LENGTH LPAREN RPAREN .)
    PLUS            reduce using rule 81 (llamada -> ID . LENGTH LPAREN RPAREN .)
    TIMES           reduce using rule 81 (llamada -> ID . LENGTH LPAREN RPAREN .)
    DIVIDE          reduce using rule 81 (llamada -> ID . LENGTH LPAREN RPAREN .)
    MODULE          reduce using rule 81 (llamada -> ID . LENGTH LPAREN RPAREN .)
    OR              reduce using rule 81 (llamada -> ID . LENGTH LPAREN RPAREN .)
    AND             reduce using rule 81 (llamada -> ID . LENGTH LPAREN RPAREN .)
    EQUALS          reduce using rule 81 (llamada -> ID . LENGTH LPAREN RPAREN .)
    NOTEQUALS       reduce using rule 81 (llamada -> ID . LENGTH LPAREN RPAREN .)
    GREATER         reduce using rule 81 (llamada -> ID . LENGTH LPAREN RPAREN .)
    LOWER           reduce using rule 81 (llamada -> ID . LENGTH LPAREN RPAREN .)
    GREATERE        reduce using rule 81 (llamada -> ID . LENGTH LPAREN RPAREN .)
    LOWERE          reduce using rule 81 (llamada -> ID . LENGTH LPAREN RPAREN .)
    RPAREN          reduce using rule 81 (llamada -> ID . LENGTH LPAREN RPAREN .)
    ,               reduce using rule 81 (llamada -> ID . LENGTH LPAREN RPAREN .)


state 139

    (83) llamada -> ID . EQUALSM LPAREN ID . RPAREN

    RPAREN          shift and go to state 170


state 140

    (86) llamada -> ID . EQUALSM LPAREN STRING . RPAREN

    RPAREN          shift and go to state 171


state 141

    (87) llamada -> ID . COUNT LPAREN RPAREN .

    FUNCTION        reduce using rule 87 (llamada -> ID . COUNT LPAREN RPAREN .)
    ID              reduce using rule 87 (llamada -> ID . COUNT LPAREN RPAREN .)
    IF              reduce using rule 87 (llamada -> ID . COUNT LPAREN RPAREN .)
    ELSE            reduce using rule 87 (llamada -> ID . COUNT LPAREN RPAREN .)
    PRINTLN         reduce using rule 87 (llamada -> ID . COUNT LPAREN RPAREN .)
    LISTOF          reduce using rule 87 (llamada -> ID . COUNT LPAREN RPAREN .)
    SETOF           reduce using rule 87 (llamada -> ID . COUNT LPAREN RPAREN .)
    MUTABLELISTOF   reduce using rule 87 (llamada -> ID . COUNT LPAREN RPAREN .)
    STRING          reduce using rule 87 (llamada -> ID . COUNT LPAREN RPAREN .)
    VAR             reduce using rule 87 (llamada -> ID . COUNT LPAREN RPAREN .)
    VAL             reduce using rule 87 (llamada -> ID . COUNT LPAREN RPAREN .)
    WHILE           reduce using rule 87 (llamada -> ID . COUNT LPAREN RPAREN .)
    FOR             reduce using rule 87 (llamada -> ID . COUNT LPAREN RPAREN .)
    $end            reduce using rule 87 (llamada -> ID . COUNT LPAREN RPAREN .)
    RCBRACKET       reduce using rule 87 (llamada -> ID . COUNT LPAREN RPAREN .)
    RETURN          reduce using rule 87 (llamada -> ID . COUNT LPAREN RPAREN .)
    RSBRACKET       reduce using rule 87 (llamada -> ID . COUNT LPAREN RPAREN .)
    MINUS           reduce using rule 87 (llamada -> ID . COUNT LPAREN RPAREN .)
    PLUS            reduce using rule 87 (llamada -> ID . COUNT LPAREN RPAREN .)
    TIMES           reduce using rule 87 (llamada -> ID . COUNT LPAREN RPAREN .)
    DIVIDE          reduce using rule 87 (llamada -> ID . COUNT LPAREN RPAREN .)
    MODULE          reduce using rule 87 (llamada -> ID . COUNT LPAREN RPAREN .)
    OR              reduce using rule 87 (llamada -> ID . COUNT LPAREN RPAREN .)
    AND             reduce using rule 87 (llamada -> ID . COUNT LPAREN RPAREN .)
    EQUALS          reduce using rule 87 (llamada -> ID . COUNT LPAREN RPAREN .)
    NOTEQUALS       reduce using rule 87 (llamada -> ID . COUNT LPAREN RPAREN .)
    GREATER         reduce using rule 87 (llamada -> ID . COUNT LPAREN RPAREN .)
    LOWER           reduce using rule 87 (llamada -> ID . COUNT LPAREN RPAREN .)
    GREATERE        reduce using rule 87 (llamada -> ID . COUNT LPAREN RPAREN .)
    LOWERE          reduce using rule 87 (llamada -> ID . COUNT LPAREN RPAREN .)
    RPAREN          reduce using rule 87 (llamada -> ID . COUNT LPAREN RPAREN .)
    ,               reduce using rule 87 (llamada -> ID . COUNT LPAREN RPAREN .)


state 142

    (88) llamada -> ID . FIRST LPAREN RPAREN .

    FUNCTION        reduce using rule 88 (llamada -> ID . FIRST LPAREN RPAREN .)
    ID              reduce using rule 88 (llamada -> ID . FIRST LPAREN RPAREN .)
    IF              reduce using rule 88 (llamada -> ID . FIRST LPAREN RPAREN .)
    ELSE            reduce using rule 88 (llamada -> ID . FIRST LPAREN RPAREN .)
    PRINTLN         reduce using rule 88 (llamada -> ID . FIRST LPAREN RPAREN .)
    LISTOF          reduce using rule 88 (llamada -> ID . FIRST LPAREN RPAREN .)
    SETOF           reduce using rule 88 (llamada -> ID . FIRST LPAREN RPAREN .)
    MUTABLELISTOF   reduce using rule 88 (llamada -> ID . FIRST LPAREN RPAREN .)
    STRING          reduce using rule 88 (llamada -> ID . FIRST LPAREN RPAREN .)
    VAR             reduce using rule 88 (llamada -> ID . FIRST LPAREN RPAREN .)
    VAL             reduce using rule 88 (llamada -> ID . FIRST LPAREN RPAREN .)
    WHILE           reduce using rule 88 (llamada -> ID . FIRST LPAREN RPAREN .)
    FOR             reduce using rule 88 (llamada -> ID . FIRST LPAREN RPAREN .)
    $end            reduce using rule 88 (llamada -> ID . FIRST LPAREN RPAREN .)
    RCBRACKET       reduce using rule 88 (llamada -> ID . FIRST LPAREN RPAREN .)
    RETURN          reduce using rule 88 (llamada -> ID . FIRST LPAREN RPAREN .)
    RSBRACKET       reduce using rule 88 (llamada -> ID . FIRST LPAREN RPAREN .)
    MINUS           reduce using rule 88 (llamada -> ID . FIRST LPAREN RPAREN .)
    PLUS            reduce using rule 88 (llamada -> ID . FIRST LPAREN RPAREN .)
    TIMES           reduce using rule 88 (llamada -> ID . FIRST LPAREN RPAREN .)
    DIVIDE          reduce using rule 88 (llamada -> ID . FIRST LPAREN RPAREN .)
    MODULE          reduce using rule 88 (llamada -> ID . FIRST LPAREN RPAREN .)
    OR              reduce using rule 88 (llamada -> ID . FIRST LPAREN RPAREN .)
    AND             reduce using rule 88 (llamada -> ID . FIRST LPAREN RPAREN .)
    EQUALS          reduce using rule 88 (llamada -> ID . FIRST LPAREN RPAREN .)
    NOTEQUALS       reduce using rule 88 (llamada -> ID . FIRST LPAREN RPAREN .)
    GREATER         reduce using rule 88 (llamada -> ID . FIRST LPAREN RPAREN .)
    LOWER           reduce using rule 88 (llamada -> ID . FIRST LPAREN RPAREN .)
    GREATERE        reduce using rule 88 (llamada -> ID . FIRST LPAREN RPAREN .)
    LOWERE          reduce using rule 88 (llamada -> ID . FIRST LPAREN RPAREN .)
    RPAREN          reduce using rule 88 (llamada -> ID . FIRST LPAREN RPAREN .)
    ,               reduce using rule 88 (llamada -> ID . FIRST LPAREN RPAREN .)


state 143

    (89) llamada -> ID . LAST LPAREN RPAREN .

    FUNCTION        reduce using rule 89 (llamada -> ID . LAST LPAREN RPAREN .)
    ID              reduce using rule 89 (llamada -> ID . LAST LPAREN RPAREN .)
    IF              reduce using rule 89 (llamada -> ID . LAST LPAREN RPAREN .)
    ELSE            reduce using rule 89 (llamada -> ID . LAST LPAREN RPAREN .)
    PRINTLN         reduce using rule 89 (llamada -> ID . LAST LPAREN RPAREN .)
    LISTOF          reduce using rule 89 (llamada -> ID . LAST LPAREN RPAREN .)
    SETOF           reduce using rule 89 (llamada -> ID . LAST LPAREN RPAREN .)
    MUTABLELISTOF   reduce using rule 89 (llamada -> ID . LAST LPAREN RPAREN .)
    STRING          reduce using rule 89 (llamada -> ID . LAST LPAREN RPAREN .)
    VAR             reduce using rule 89 (llamada -> ID . LAST LPAREN RPAREN .)
    VAL             reduce using rule 89 (llamada -> ID . LAST LPAREN RPAREN .)
    WHILE           reduce using rule 89 (llamada -> ID . LAST LPAREN RPAREN .)
    FOR             reduce using rule 89 (llamada -> ID . LAST LPAREN RPAREN .)
    $end            reduce using rule 89 (llamada -> ID . LAST LPAREN RPAREN .)
    RCBRACKET       reduce using rule 89 (llamada -> ID . LAST LPAREN RPAREN .)
    RETURN          reduce using rule 89 (llamada -> ID . LAST LPAREN RPAREN .)
    RSBRACKET       reduce using rule 89 (llamada -> ID . LAST LPAREN RPAREN .)
    MINUS           reduce using rule 89 (llamada -> ID . LAST LPAREN RPAREN .)
    PLUS            reduce using rule 89 (llamada -> ID . LAST LPAREN RPAREN .)
    TIMES           reduce using rule 89 (llamada -> ID . LAST LPAREN RPAREN .)
    DIVIDE          reduce using rule 89 (llamada -> ID . LAST LPAREN RPAREN .)
    MODULE          reduce using rule 89 (llamada -> ID . LAST LPAREN RPAREN .)
    OR              reduce using rule 89 (llamada -> ID . LAST LPAREN RPAREN .)
    AND             reduce using rule 89 (llamada -> ID . LAST LPAREN RPAREN .)
    EQUALS          reduce using rule 89 (llamada -> ID . LAST LPAREN RPAREN .)
    NOTEQUALS       reduce using rule 89 (llamada -> ID . LAST LPAREN RPAREN .)
    GREATER         reduce using rule 89 (llamada -> ID . LAST LPAREN RPAREN .)
    LOWER           reduce using rule 89 (llamada -> ID . LAST LPAREN RPAREN .)
    GREATERE        reduce using rule 89 (llamada -> ID . LAST LPAREN RPAREN .)
    LOWERE          reduce using rule 89 (llamada -> ID . LAST LPAREN RPAREN .)
    RPAREN          reduce using rule 89 (llamada -> ID . LAST LPAREN RPAREN .)
    ,               reduce using rule 89 (llamada -> ID . LAST LPAREN RPAREN .)


state 144

    (91) llamada -> ID . GET LPAREN ID . RPAREN

    RPAREN          shift and go to state 172


state 145

    (90) llamada -> ID . GET LPAREN INTV . RPAREN

    RPAREN          shift and go to state 173


state 146

    (17) estructuraControl -> IF LPAREN expresion RPAREN instrucciones .

    FUNCTION        reduce using rule 17 (estructuraControl -> IF LPAREN expresion RPAREN instrucciones .)
    ID              reduce using rule 17 (estructuraControl -> IF LPAREN expresion RPAREN instrucciones .)
    IF              reduce using rule 17 (estructuraControl -> IF LPAREN expresion RPAREN instrucciones .)
    ELSE            reduce using rule 17 (estructuraControl -> IF LPAREN expresion RPAREN instrucciones .)
    PRINTLN         reduce using rule 17 (estructuraControl -> IF LPAREN expresion RPAREN instrucciones .)
    LISTOF          reduce using rule 17 (estructuraControl -> IF LPAREN expresion RPAREN instrucciones .)
    SETOF           reduce using rule 17 (estructuraControl -> IF LPAREN expresion RPAREN instrucciones .)
    MUTABLELISTOF   reduce using rule 17 (estructuraControl -> IF LPAREN expresion RPAREN instrucciones .)
    STRING          reduce using rule 17 (estructuraControl -> IF LPAREN expresion RPAREN instrucciones .)
    VAR             reduce using rule 17 (estructuraControl -> IF LPAREN expresion RPAREN instrucciones .)
    VAL             reduce using rule 17 (estructuraControl -> IF LPAREN expresion RPAREN instrucciones .)
    WHILE           reduce using rule 17 (estructuraControl -> IF LPAREN expresion RPAREN instrucciones .)
    FOR             reduce using rule 17 (estructuraControl -> IF LPAREN expresion RPAREN instrucciones .)
    $end            reduce using rule 17 (estructuraControl -> IF LPAREN expresion RPAREN instrucciones .)
    RCBRACKET       reduce using rule 17 (estructuraControl -> IF LPAREN expresion RPAREN instrucciones .)
    RETURN          reduce using rule 17 (estructuraControl -> IF LPAREN expresion RPAREN instrucciones .)


state 147

    (82) llamada -> STRING . LENGTH LPAREN RPAREN .

    FUNCTION        reduce using rule 82 (llamada -> STRING . LENGTH LPAREN RPAREN .)
    ID              reduce using rule 82 (llamada -> STRING . LENGTH LPAREN RPAREN .)
    IF              reduce using rule 82 (llamada -> STRING . LENGTH LPAREN RPAREN .)
    ELSE            reduce using rule 82 (llamada -> STRING . LENGTH LPAREN RPAREN .)
    PRINTLN         reduce using rule 82 (llamada -> STRING . LENGTH LPAREN RPAREN .)
    LISTOF          reduce using rule 82 (llamada -> STRING . LENGTH LPAREN RPAREN .)
    SETOF           reduce using rule 82 (llamada -> STRING . LENGTH LPAREN RPAREN .)
    MUTABLELISTOF   reduce using rule 82 (llamada -> STRING . LENGTH LPAREN RPAREN .)
    STRING          reduce using rule 82 (llamada -> STRING . LENGTH LPAREN RPAREN .)
    VAR             reduce using rule 82 (llamada -> STRING . LENGTH LPAREN RPAREN .)
    VAL             reduce using rule 82 (llamada -> STRING . LENGTH LPAREN RPAREN .)
    WHILE           reduce using rule 82 (llamada -> STRING . LENGTH LPAREN RPAREN .)
    FOR             reduce using rule 82 (llamada -> STRING . LENGTH LPAREN RPAREN .)
    $end            reduce using rule 82 (llamada -> STRING . LENGTH LPAREN RPAREN .)
    RCBRACKET       reduce using rule 82 (llamada -> STRING . LENGTH LPAREN RPAREN .)
    RETURN          reduce using rule 82 (llamada -> STRING . LENGTH LPAREN RPAREN .)
    RSBRACKET       reduce using rule 82 (llamada -> STRING . LENGTH LPAREN RPAREN .)
    MINUS           reduce using rule 82 (llamada -> STRING . LENGTH LPAREN RPAREN .)
    PLUS            reduce using rule 82 (llamada -> STRING . LENGTH LPAREN RPAREN .)
    TIMES           reduce using rule 82 (llamada -> STRING . LENGTH LPAREN RPAREN .)
    DIVIDE          reduce using rule 82 (llamada -> STRING . LENGTH LPAREN RPAREN .)
    MODULE          reduce using rule 82 (llamada -> STRING . LENGTH LPAREN RPAREN .)
    OR              reduce using rule 82 (llamada -> STRING . LENGTH LPAREN RPAREN .)
    AND             reduce using rule 82 (llamada -> STRING . LENGTH LPAREN RPAREN .)
    EQUALS          reduce using rule 82 (llamada -> STRING . LENGTH LPAREN RPAREN .)
    NOTEQUALS       reduce using rule 82 (llamada -> STRING . LENGTH LPAREN RPAREN .)
    GREATER         reduce using rule 82 (llamada -> STRING . LENGTH LPAREN RPAREN .)
    LOWER           reduce using rule 82 (llamada -> STRING . LENGTH LPAREN RPAREN .)
    GREATERE        reduce using rule 82 (llamada -> STRING . LENGTH LPAREN RPAREN .)
    LOWERE          reduce using rule 82 (llamada -> STRING . LENGTH LPAREN RPAREN .)
    RPAREN          reduce using rule 82 (llamada -> STRING . LENGTH LPAREN RPAREN .)
    ,               reduce using rule 82 (llamada -> STRING . LENGTH LPAREN RPAREN .)


state 148

    (85) llamada -> STRING . EQUALSM LPAREN STRING . RPAREN

    RPAREN          shift and go to state 174


state 149

    (84) llamada -> STRING . EQUALSM LPAREN ID . RPAREN

    RPAREN          shift and go to state 175


state 150

    (22) for -> FOR LPAREN ID IN ID . RPAREN

    RPAREN          shift and go to state 176


state 151

    (36) dato -> ID .

    RPAREN          reduce using rule 36 (dato -> ID .)
    ,               reduce using rule 36 (dato -> ID .)
    LCBRACKET       reduce using rule 36 (dato -> ID .)


state 152

    (42) params -> ID : dato .

    RPAREN          reduce using rule 42 (params -> ID : dato .)
    ,               reduce using rule 42 (params -> ID : dato .)


state 153

    (31) dato -> INT .

    RPAREN          reduce using rule 31 (dato -> INT .)
    ,               reduce using rule 31 (dato -> INT .)
    LCBRACKET       reduce using rule 31 (dato -> INT .)


state 154

    (32) dato -> FLOAT .

    RPAREN          reduce using rule 32 (dato -> FLOAT .)
    ,               reduce using rule 32 (dato -> FLOAT .)
    LCBRACKET       reduce using rule 32 (dato -> FLOAT .)


state 155

    (33) dato -> BYTE .

    RPAREN          reduce using rule 33 (dato -> BYTE .)
    ,               reduce using rule 33 (dato -> BYTE .)
    LCBRACKET       reduce using rule 33 (dato -> BYTE .)


state 156

    (34) dato -> SHORT .

    RPAREN          reduce using rule 34 (dato -> SHORT .)
    ,               reduce using rule 34 (dato -> SHORT .)
    LCBRACKET       reduce using rule 34 (dato -> SHORT .)


state 157

    (35) dato -> DOUBLE .

    RPAREN          reduce using rule 35 (dato -> DOUBLE .)
    ,               reduce using rule 35 (dato -> DOUBLE .)
    LCBRACKET       reduce using rule 35 (dato -> DOUBLE .)


state 158

    (37) dato -> LONG .

    RPAREN          reduce using rule 37 (dato -> LONG .)
    ,               reduce using rule 37 (dato -> LONG .)
    LCBRACKET       reduce using rule 37 (dato -> LONG .)


state 159

    (38) dato -> CHAR .

    RPAREN          reduce using rule 38 (dato -> CHAR .)
    ,               reduce using rule 38 (dato -> CHAR .)
    LCBRACKET       reduce using rule 38 (dato -> CHAR .)


state 160

    (39) dato -> BOOLEAN .

    RPAREN          reduce using rule 39 (dato -> BOOLEAN .)
    ,               reduce using rule 39 (dato -> BOOLEAN .)
    LCBRACKET       reduce using rule 39 (dato -> BOOLEAN .)


state 161

    (40) dato -> LIST .

    RPAREN          reduce using rule 40 (dato -> LIST .)
    ,               reduce using rule 40 (dato -> LIST .)
    LCBRACKET       reduce using rule 40 (dato -> LIST .)


state 162

    (41) dato -> MUTABLELIST .

    RPAREN          reduce using rule 41 (dato -> MUTABLELIST .)
    ,               reduce using rule 41 (dato -> MUTABLELIST .)
    LCBRACKET       reduce using rule 41 (dato -> MUTABLELIST .)


state 163

    (23) function -> FUNCTION ID LPAREN params RPAREN instruccionesF .

    FUNCTION        reduce using rule 23 (function -> FUNCTION ID LPAREN params RPAREN instruccionesF .)
    ID              reduce using rule 23 (function -> FUNCTION ID LPAREN params RPAREN instruccionesF .)
    IF              reduce using rule 23 (function -> FUNCTION ID LPAREN params RPAREN instruccionesF .)
    ELSE            reduce using rule 23 (function -> FUNCTION ID LPAREN params RPAREN instruccionesF .)
    PRINTLN         reduce using rule 23 (function -> FUNCTION ID LPAREN params RPAREN instruccionesF .)
    LISTOF          reduce using rule 23 (function -> FUNCTION ID LPAREN params RPAREN instruccionesF .)
    SETOF           reduce using rule 23 (function -> FUNCTION ID LPAREN params RPAREN instruccionesF .)
    MUTABLELISTOF   reduce using rule 23 (function -> FUNCTION ID LPAREN params RPAREN instruccionesF .)
    STRING          reduce using rule 23 (function -> FUNCTION ID LPAREN params RPAREN instruccionesF .)
    VAR             reduce using rule 23 (function -> FUNCTION ID LPAREN params RPAREN instruccionesF .)
    VAL             reduce using rule 23 (function -> FUNCTION ID LPAREN params RPAREN instruccionesF .)
    WHILE           reduce using rule 23 (function -> FUNCTION ID LPAREN params RPAREN instruccionesF .)
    FOR             reduce using rule 23 (function -> FUNCTION ID LPAREN params RPAREN instruccionesF .)
    $end            reduce using rule 23 (function -> FUNCTION ID LPAREN params RPAREN instruccionesF .)
    RCBRACKET       reduce using rule 23 (function -> FUNCTION ID LPAREN params RPAREN instruccionesF .)
    RETURN          reduce using rule 23 (function -> FUNCTION ID LPAREN params RPAREN instruccionesF .)


state 164

    (43) params -> params , params .
    (43) params -> params . , params

  ! shift/reduce conflict for , resolved as shift
    RPAREN          reduce using rule 43 (params -> params , params .)
    ,               shift and go to state 128

  ! ,               [ reduce using rule 43 (params -> params , params .) ]


state 165

    (12) instruccionesF -> LCBRACKET cuerpo . retorno RCBRACKET
    (16) retorno -> . RETURN expresion

    RETURN          shift and go to state 167

    retorno                        shift and go to state 177

state 166

    (13) instruccionesF -> LCBRACKET retorno . RCBRACKET

    RCBRACKET       shift and go to state 178


state 167

    (16) retorno -> RETURN . expresion
    (61) expresion -> . llamada
    (62) expresion -> . LPAREN expresion RPAREN
    (63) expresion -> . valor
    (64) expresion -> . expresion operadoresMat expresion
    (65) expresion -> . expresion operadoresLog expresion
    (25) llamada -> . PRINTLN LPAREN expresion RPAREN
    (26) llamada -> . ID LPAREN args RPAREN
    (27) llamada -> . ID LPAREN RPAREN
    (28) llamada -> . ID . ID LPAREN args RPAREN
    (29) llamada -> . ID . ID LPAREN RPAREN
    (58) llamada -> . LISTOF LPAREN args RPAREN
    (59) llamada -> . SETOF LPAREN args RPAREN
    (60) llamada -> . MUTABLELISTOF LPAREN args RPAREN
    (81) llamada -> . ID . LENGTH LPAREN RPAREN
    (82) llamada -> . STRING . LENGTH LPAREN RPAREN
    (83) llamada -> . ID . EQUALSM LPAREN ID RPAREN
    (84) llamada -> . STRING . EQUALSM LPAREN ID RPAREN
    (85) llamada -> . STRING . EQUALSM LPAREN STRING RPAREN
    (86) llamada -> . ID . EQUALSM LPAREN STRING RPAREN
    (87) llamada -> . ID . COUNT LPAREN RPAREN
    (88) llamada -> . ID . FIRST LPAREN RPAREN
    (89) llamada -> . ID . LAST LPAREN RPAREN
    (90) llamada -> . ID . GET LPAREN INTV RPAREN
    (91) llamada -> . ID . GET LPAREN ID RPAREN
    (46) valor -> . ID
    (47) valor -> . number
    (48) valor -> . STRING
    (49) valor -> . TRUE
    (50) valor -> . FALSE
    (51) valor -> . NULL
    (52) valor -> . NOT valor
    (79) number -> . INTV
    (80) number -> . FLOATV

    LPAREN          shift and go to state 51
    PRINTLN         shift and go to state 16
    ID              shift and go to state 48
    LISTOF          shift and go to state 17
    SETOF           shift and go to state 18
    MUTABLELISTOF   shift and go to state 19
    STRING          shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    NULL            shift and go to state 58
    NOT             shift and go to state 59
    INTV            shift and go to state 54
    FLOATV          shift and go to state 60

    expresion                      shift and go to state 179
    llamada                        shift and go to state 50
    valor                          shift and go to state 52
    number                         shift and go to state 55

state 168

    (14) instruccionesF -> : dato . LCBRACKET cuerpo retorno RCBRACKET
    (15) instruccionesF -> : dato . LCBRACKET retorno RCBRACKET

    LCBRACKET       shift and go to state 180


state 169

    (28) llamada -> ID . ID LPAREN args RPAREN .

    FUNCTION        reduce using rule 28 (llamada -> ID . ID LPAREN args RPAREN .)
    ID              reduce using rule 28 (llamada -> ID . ID LPAREN args RPAREN .)
    IF              reduce using rule 28 (llamada -> ID . ID LPAREN args RPAREN .)
    ELSE            reduce using rule 28 (llamada -> ID . ID LPAREN args RPAREN .)
    PRINTLN         reduce using rule 28 (llamada -> ID . ID LPAREN args RPAREN .)
    LISTOF          reduce using rule 28 (llamada -> ID . ID LPAREN args RPAREN .)
    SETOF           reduce using rule 28 (llamada -> ID . ID LPAREN args RPAREN .)
    MUTABLELISTOF   reduce using rule 28 (llamada -> ID . ID LPAREN args RPAREN .)
    STRING          reduce using rule 28 (llamada -> ID . ID LPAREN args RPAREN .)
    VAR             reduce using rule 28 (llamada -> ID . ID LPAREN args RPAREN .)
    VAL             reduce using rule 28 (llamada -> ID . ID LPAREN args RPAREN .)
    WHILE           reduce using rule 28 (llamada -> ID . ID LPAREN args RPAREN .)
    FOR             reduce using rule 28 (llamada -> ID . ID LPAREN args RPAREN .)
    $end            reduce using rule 28 (llamada -> ID . ID LPAREN args RPAREN .)
    RCBRACKET       reduce using rule 28 (llamada -> ID . ID LPAREN args RPAREN .)
    RETURN          reduce using rule 28 (llamada -> ID . ID LPAREN args RPAREN .)
    RSBRACKET       reduce using rule 28 (llamada -> ID . ID LPAREN args RPAREN .)
    MINUS           reduce using rule 28 (llamada -> ID . ID LPAREN args RPAREN .)
    PLUS            reduce using rule 28 (llamada -> ID . ID LPAREN args RPAREN .)
    TIMES           reduce using rule 28 (llamada -> ID . ID LPAREN args RPAREN .)
    DIVIDE          reduce using rule 28 (llamada -> ID . ID LPAREN args RPAREN .)
    MODULE          reduce using rule 28 (llamada -> ID . ID LPAREN args RPAREN .)
    OR              reduce using rule 28 (llamada -> ID . ID LPAREN args RPAREN .)
    AND             reduce using rule 28 (llamada -> ID . ID LPAREN args RPAREN .)
    EQUALS          reduce using rule 28 (llamada -> ID . ID LPAREN args RPAREN .)
    NOTEQUALS       reduce using rule 28 (llamada -> ID . ID LPAREN args RPAREN .)
    GREATER         reduce using rule 28 (llamada -> ID . ID LPAREN args RPAREN .)
    LOWER           reduce using rule 28 (llamada -> ID . ID LPAREN args RPAREN .)
    GREATERE        reduce using rule 28 (llamada -> ID . ID LPAREN args RPAREN .)
    LOWERE          reduce using rule 28 (llamada -> ID . ID LPAREN args RPAREN .)
    RPAREN          reduce using rule 28 (llamada -> ID . ID LPAREN args RPAREN .)
    ,               reduce using rule 28 (llamada -> ID . ID LPAREN args RPAREN .)


state 170

    (83) llamada -> ID . EQUALSM LPAREN ID RPAREN .

    FUNCTION        reduce using rule 83 (llamada -> ID . EQUALSM LPAREN ID RPAREN .)
    ID              reduce using rule 83 (llamada -> ID . EQUALSM LPAREN ID RPAREN .)
    IF              reduce using rule 83 (llamada -> ID . EQUALSM LPAREN ID RPAREN .)
    ELSE            reduce using rule 83 (llamada -> ID . EQUALSM LPAREN ID RPAREN .)
    PRINTLN         reduce using rule 83 (llamada -> ID . EQUALSM LPAREN ID RPAREN .)
    LISTOF          reduce using rule 83 (llamada -> ID . EQUALSM LPAREN ID RPAREN .)
    SETOF           reduce using rule 83 (llamada -> ID . EQUALSM LPAREN ID RPAREN .)
    MUTABLELISTOF   reduce using rule 83 (llamada -> ID . EQUALSM LPAREN ID RPAREN .)
    STRING          reduce using rule 83 (llamada -> ID . EQUALSM LPAREN ID RPAREN .)
    VAR             reduce using rule 83 (llamada -> ID . EQUALSM LPAREN ID RPAREN .)
    VAL             reduce using rule 83 (llamada -> ID . EQUALSM LPAREN ID RPAREN .)
    WHILE           reduce using rule 83 (llamada -> ID . EQUALSM LPAREN ID RPAREN .)
    FOR             reduce using rule 83 (llamada -> ID . EQUALSM LPAREN ID RPAREN .)
    $end            reduce using rule 83 (llamada -> ID . EQUALSM LPAREN ID RPAREN .)
    RCBRACKET       reduce using rule 83 (llamada -> ID . EQUALSM LPAREN ID RPAREN .)
    RETURN          reduce using rule 83 (llamada -> ID . EQUALSM LPAREN ID RPAREN .)
    RSBRACKET       reduce using rule 83 (llamada -> ID . EQUALSM LPAREN ID RPAREN .)
    MINUS           reduce using rule 83 (llamada -> ID . EQUALSM LPAREN ID RPAREN .)
    PLUS            reduce using rule 83 (llamada -> ID . EQUALSM LPAREN ID RPAREN .)
    TIMES           reduce using rule 83 (llamada -> ID . EQUALSM LPAREN ID RPAREN .)
    DIVIDE          reduce using rule 83 (llamada -> ID . EQUALSM LPAREN ID RPAREN .)
    MODULE          reduce using rule 83 (llamada -> ID . EQUALSM LPAREN ID RPAREN .)
    OR              reduce using rule 83 (llamada -> ID . EQUALSM LPAREN ID RPAREN .)
    AND             reduce using rule 83 (llamada -> ID . EQUALSM LPAREN ID RPAREN .)
    EQUALS          reduce using rule 83 (llamada -> ID . EQUALSM LPAREN ID RPAREN .)
    NOTEQUALS       reduce using rule 83 (llamada -> ID . EQUALSM LPAREN ID RPAREN .)
    GREATER         reduce using rule 83 (llamada -> ID . EQUALSM LPAREN ID RPAREN .)
    LOWER           reduce using rule 83 (llamada -> ID . EQUALSM LPAREN ID RPAREN .)
    GREATERE        reduce using rule 83 (llamada -> ID . EQUALSM LPAREN ID RPAREN .)
    LOWERE          reduce using rule 83 (llamada -> ID . EQUALSM LPAREN ID RPAREN .)
    RPAREN          reduce using rule 83 (llamada -> ID . EQUALSM LPAREN ID RPAREN .)
    ,               reduce using rule 83 (llamada -> ID . EQUALSM LPAREN ID RPAREN .)


state 171

    (86) llamada -> ID . EQUALSM LPAREN STRING RPAREN .

    FUNCTION        reduce using rule 86 (llamada -> ID . EQUALSM LPAREN STRING RPAREN .)
    ID              reduce using rule 86 (llamada -> ID . EQUALSM LPAREN STRING RPAREN .)
    IF              reduce using rule 86 (llamada -> ID . EQUALSM LPAREN STRING RPAREN .)
    ELSE            reduce using rule 86 (llamada -> ID . EQUALSM LPAREN STRING RPAREN .)
    PRINTLN         reduce using rule 86 (llamada -> ID . EQUALSM LPAREN STRING RPAREN .)
    LISTOF          reduce using rule 86 (llamada -> ID . EQUALSM LPAREN STRING RPAREN .)
    SETOF           reduce using rule 86 (llamada -> ID . EQUALSM LPAREN STRING RPAREN .)
    MUTABLELISTOF   reduce using rule 86 (llamada -> ID . EQUALSM LPAREN STRING RPAREN .)
    STRING          reduce using rule 86 (llamada -> ID . EQUALSM LPAREN STRING RPAREN .)
    VAR             reduce using rule 86 (llamada -> ID . EQUALSM LPAREN STRING RPAREN .)
    VAL             reduce using rule 86 (llamada -> ID . EQUALSM LPAREN STRING RPAREN .)
    WHILE           reduce using rule 86 (llamada -> ID . EQUALSM LPAREN STRING RPAREN .)
    FOR             reduce using rule 86 (llamada -> ID . EQUALSM LPAREN STRING RPAREN .)
    $end            reduce using rule 86 (llamada -> ID . EQUALSM LPAREN STRING RPAREN .)
    RCBRACKET       reduce using rule 86 (llamada -> ID . EQUALSM LPAREN STRING RPAREN .)
    RETURN          reduce using rule 86 (llamada -> ID . EQUALSM LPAREN STRING RPAREN .)
    RSBRACKET       reduce using rule 86 (llamada -> ID . EQUALSM LPAREN STRING RPAREN .)
    MINUS           reduce using rule 86 (llamada -> ID . EQUALSM LPAREN STRING RPAREN .)
    PLUS            reduce using rule 86 (llamada -> ID . EQUALSM LPAREN STRING RPAREN .)
    TIMES           reduce using rule 86 (llamada -> ID . EQUALSM LPAREN STRING RPAREN .)
    DIVIDE          reduce using rule 86 (llamada -> ID . EQUALSM LPAREN STRING RPAREN .)
    MODULE          reduce using rule 86 (llamada -> ID . EQUALSM LPAREN STRING RPAREN .)
    OR              reduce using rule 86 (llamada -> ID . EQUALSM LPAREN STRING RPAREN .)
    AND             reduce using rule 86 (llamada -> ID . EQUALSM LPAREN STRING RPAREN .)
    EQUALS          reduce using rule 86 (llamada -> ID . EQUALSM LPAREN STRING RPAREN .)
    NOTEQUALS       reduce using rule 86 (llamada -> ID . EQUALSM LPAREN STRING RPAREN .)
    GREATER         reduce using rule 86 (llamada -> ID . EQUALSM LPAREN STRING RPAREN .)
    LOWER           reduce using rule 86 (llamada -> ID . EQUALSM LPAREN STRING RPAREN .)
    GREATERE        reduce using rule 86 (llamada -> ID . EQUALSM LPAREN STRING RPAREN .)
    LOWERE          reduce using rule 86 (llamada -> ID . EQUALSM LPAREN STRING RPAREN .)
    RPAREN          reduce using rule 86 (llamada -> ID . EQUALSM LPAREN STRING RPAREN .)
    ,               reduce using rule 86 (llamada -> ID . EQUALSM LPAREN STRING RPAREN .)


state 172

    (91) llamada -> ID . GET LPAREN ID RPAREN .

    FUNCTION        reduce using rule 91 (llamada -> ID . GET LPAREN ID RPAREN .)
    ID              reduce using rule 91 (llamada -> ID . GET LPAREN ID RPAREN .)
    IF              reduce using rule 91 (llamada -> ID . GET LPAREN ID RPAREN .)
    ELSE            reduce using rule 91 (llamada -> ID . GET LPAREN ID RPAREN .)
    PRINTLN         reduce using rule 91 (llamada -> ID . GET LPAREN ID RPAREN .)
    LISTOF          reduce using rule 91 (llamada -> ID . GET LPAREN ID RPAREN .)
    SETOF           reduce using rule 91 (llamada -> ID . GET LPAREN ID RPAREN .)
    MUTABLELISTOF   reduce using rule 91 (llamada -> ID . GET LPAREN ID RPAREN .)
    STRING          reduce using rule 91 (llamada -> ID . GET LPAREN ID RPAREN .)
    VAR             reduce using rule 91 (llamada -> ID . GET LPAREN ID RPAREN .)
    VAL             reduce using rule 91 (llamada -> ID . GET LPAREN ID RPAREN .)
    WHILE           reduce using rule 91 (llamada -> ID . GET LPAREN ID RPAREN .)
    FOR             reduce using rule 91 (llamada -> ID . GET LPAREN ID RPAREN .)
    $end            reduce using rule 91 (llamada -> ID . GET LPAREN ID RPAREN .)
    RCBRACKET       reduce using rule 91 (llamada -> ID . GET LPAREN ID RPAREN .)
    RETURN          reduce using rule 91 (llamada -> ID . GET LPAREN ID RPAREN .)
    RSBRACKET       reduce using rule 91 (llamada -> ID . GET LPAREN ID RPAREN .)
    MINUS           reduce using rule 91 (llamada -> ID . GET LPAREN ID RPAREN .)
    PLUS            reduce using rule 91 (llamada -> ID . GET LPAREN ID RPAREN .)
    TIMES           reduce using rule 91 (llamada -> ID . GET LPAREN ID RPAREN .)
    DIVIDE          reduce using rule 91 (llamada -> ID . GET LPAREN ID RPAREN .)
    MODULE          reduce using rule 91 (llamada -> ID . GET LPAREN ID RPAREN .)
    OR              reduce using rule 91 (llamada -> ID . GET LPAREN ID RPAREN .)
    AND             reduce using rule 91 (llamada -> ID . GET LPAREN ID RPAREN .)
    EQUALS          reduce using rule 91 (llamada -> ID . GET LPAREN ID RPAREN .)
    NOTEQUALS       reduce using rule 91 (llamada -> ID . GET LPAREN ID RPAREN .)
    GREATER         reduce using rule 91 (llamada -> ID . GET LPAREN ID RPAREN .)
    LOWER           reduce using rule 91 (llamada -> ID . GET LPAREN ID RPAREN .)
    GREATERE        reduce using rule 91 (llamada -> ID . GET LPAREN ID RPAREN .)
    LOWERE          reduce using rule 91 (llamada -> ID . GET LPAREN ID RPAREN .)
    RPAREN          reduce using rule 91 (llamada -> ID . GET LPAREN ID RPAREN .)
    ,               reduce using rule 91 (llamada -> ID . GET LPAREN ID RPAREN .)


state 173

    (90) llamada -> ID . GET LPAREN INTV RPAREN .

    FUNCTION        reduce using rule 90 (llamada -> ID . GET LPAREN INTV RPAREN .)
    ID              reduce using rule 90 (llamada -> ID . GET LPAREN INTV RPAREN .)
    IF              reduce using rule 90 (llamada -> ID . GET LPAREN INTV RPAREN .)
    ELSE            reduce using rule 90 (llamada -> ID . GET LPAREN INTV RPAREN .)
    PRINTLN         reduce using rule 90 (llamada -> ID . GET LPAREN INTV RPAREN .)
    LISTOF          reduce using rule 90 (llamada -> ID . GET LPAREN INTV RPAREN .)
    SETOF           reduce using rule 90 (llamada -> ID . GET LPAREN INTV RPAREN .)
    MUTABLELISTOF   reduce using rule 90 (llamada -> ID . GET LPAREN INTV RPAREN .)
    STRING          reduce using rule 90 (llamada -> ID . GET LPAREN INTV RPAREN .)
    VAR             reduce using rule 90 (llamada -> ID . GET LPAREN INTV RPAREN .)
    VAL             reduce using rule 90 (llamada -> ID . GET LPAREN INTV RPAREN .)
    WHILE           reduce using rule 90 (llamada -> ID . GET LPAREN INTV RPAREN .)
    FOR             reduce using rule 90 (llamada -> ID . GET LPAREN INTV RPAREN .)
    $end            reduce using rule 90 (llamada -> ID . GET LPAREN INTV RPAREN .)
    RCBRACKET       reduce using rule 90 (llamada -> ID . GET LPAREN INTV RPAREN .)
    RETURN          reduce using rule 90 (llamada -> ID . GET LPAREN INTV RPAREN .)
    RSBRACKET       reduce using rule 90 (llamada -> ID . GET LPAREN INTV RPAREN .)
    MINUS           reduce using rule 90 (llamada -> ID . GET LPAREN INTV RPAREN .)
    PLUS            reduce using rule 90 (llamada -> ID . GET LPAREN INTV RPAREN .)
    TIMES           reduce using rule 90 (llamada -> ID . GET LPAREN INTV RPAREN .)
    DIVIDE          reduce using rule 90 (llamada -> ID . GET LPAREN INTV RPAREN .)
    MODULE          reduce using rule 90 (llamada -> ID . GET LPAREN INTV RPAREN .)
    OR              reduce using rule 90 (llamada -> ID . GET LPAREN INTV RPAREN .)
    AND             reduce using rule 90 (llamada -> ID . GET LPAREN INTV RPAREN .)
    EQUALS          reduce using rule 90 (llamada -> ID . GET LPAREN INTV RPAREN .)
    NOTEQUALS       reduce using rule 90 (llamada -> ID . GET LPAREN INTV RPAREN .)
    GREATER         reduce using rule 90 (llamada -> ID . GET LPAREN INTV RPAREN .)
    LOWER           reduce using rule 90 (llamada -> ID . GET LPAREN INTV RPAREN .)
    GREATERE        reduce using rule 90 (llamada -> ID . GET LPAREN INTV RPAREN .)
    LOWERE          reduce using rule 90 (llamada -> ID . GET LPAREN INTV RPAREN .)
    RPAREN          reduce using rule 90 (llamada -> ID . GET LPAREN INTV RPAREN .)
    ,               reduce using rule 90 (llamada -> ID . GET LPAREN INTV RPAREN .)


state 174

    (85) llamada -> STRING . EQUALSM LPAREN STRING RPAREN .

    FUNCTION        reduce using rule 85 (llamada -> STRING . EQUALSM LPAREN STRING RPAREN .)
    ID              reduce using rule 85 (llamada -> STRING . EQUALSM LPAREN STRING RPAREN .)
    IF              reduce using rule 85 (llamada -> STRING . EQUALSM LPAREN STRING RPAREN .)
    ELSE            reduce using rule 85 (llamada -> STRING . EQUALSM LPAREN STRING RPAREN .)
    PRINTLN         reduce using rule 85 (llamada -> STRING . EQUALSM LPAREN STRING RPAREN .)
    LISTOF          reduce using rule 85 (llamada -> STRING . EQUALSM LPAREN STRING RPAREN .)
    SETOF           reduce using rule 85 (llamada -> STRING . EQUALSM LPAREN STRING RPAREN .)
    MUTABLELISTOF   reduce using rule 85 (llamada -> STRING . EQUALSM LPAREN STRING RPAREN .)
    STRING          reduce using rule 85 (llamada -> STRING . EQUALSM LPAREN STRING RPAREN .)
    VAR             reduce using rule 85 (llamada -> STRING . EQUALSM LPAREN STRING RPAREN .)
    VAL             reduce using rule 85 (llamada -> STRING . EQUALSM LPAREN STRING RPAREN .)
    WHILE           reduce using rule 85 (llamada -> STRING . EQUALSM LPAREN STRING RPAREN .)
    FOR             reduce using rule 85 (llamada -> STRING . EQUALSM LPAREN STRING RPAREN .)
    $end            reduce using rule 85 (llamada -> STRING . EQUALSM LPAREN STRING RPAREN .)
    RCBRACKET       reduce using rule 85 (llamada -> STRING . EQUALSM LPAREN STRING RPAREN .)
    RETURN          reduce using rule 85 (llamada -> STRING . EQUALSM LPAREN STRING RPAREN .)
    RSBRACKET       reduce using rule 85 (llamada -> STRING . EQUALSM LPAREN STRING RPAREN .)
    MINUS           reduce using rule 85 (llamada -> STRING . EQUALSM LPAREN STRING RPAREN .)
    PLUS            reduce using rule 85 (llamada -> STRING . EQUALSM LPAREN STRING RPAREN .)
    TIMES           reduce using rule 85 (llamada -> STRING . EQUALSM LPAREN STRING RPAREN .)
    DIVIDE          reduce using rule 85 (llamada -> STRING . EQUALSM LPAREN STRING RPAREN .)
    MODULE          reduce using rule 85 (llamada -> STRING . EQUALSM LPAREN STRING RPAREN .)
    OR              reduce using rule 85 (llamada -> STRING . EQUALSM LPAREN STRING RPAREN .)
    AND             reduce using rule 85 (llamada -> STRING . EQUALSM LPAREN STRING RPAREN .)
    EQUALS          reduce using rule 85 (llamada -> STRING . EQUALSM LPAREN STRING RPAREN .)
    NOTEQUALS       reduce using rule 85 (llamada -> STRING . EQUALSM LPAREN STRING RPAREN .)
    GREATER         reduce using rule 85 (llamada -> STRING . EQUALSM LPAREN STRING RPAREN .)
    LOWER           reduce using rule 85 (llamada -> STRING . EQUALSM LPAREN STRING RPAREN .)
    GREATERE        reduce using rule 85 (llamada -> STRING . EQUALSM LPAREN STRING RPAREN .)
    LOWERE          reduce using rule 85 (llamada -> STRING . EQUALSM LPAREN STRING RPAREN .)
    RPAREN          reduce using rule 85 (llamada -> STRING . EQUALSM LPAREN STRING RPAREN .)
    ,               reduce using rule 85 (llamada -> STRING . EQUALSM LPAREN STRING RPAREN .)


state 175

    (84) llamada -> STRING . EQUALSM LPAREN ID RPAREN .

    FUNCTION        reduce using rule 84 (llamada -> STRING . EQUALSM LPAREN ID RPAREN .)
    ID              reduce using rule 84 (llamada -> STRING . EQUALSM LPAREN ID RPAREN .)
    IF              reduce using rule 84 (llamada -> STRING . EQUALSM LPAREN ID RPAREN .)
    ELSE            reduce using rule 84 (llamada -> STRING . EQUALSM LPAREN ID RPAREN .)
    PRINTLN         reduce using rule 84 (llamada -> STRING . EQUALSM LPAREN ID RPAREN .)
    LISTOF          reduce using rule 84 (llamada -> STRING . EQUALSM LPAREN ID RPAREN .)
    SETOF           reduce using rule 84 (llamada -> STRING . EQUALSM LPAREN ID RPAREN .)
    MUTABLELISTOF   reduce using rule 84 (llamada -> STRING . EQUALSM LPAREN ID RPAREN .)
    STRING          reduce using rule 84 (llamada -> STRING . EQUALSM LPAREN ID RPAREN .)
    VAR             reduce using rule 84 (llamada -> STRING . EQUALSM LPAREN ID RPAREN .)
    VAL             reduce using rule 84 (llamada -> STRING . EQUALSM LPAREN ID RPAREN .)
    WHILE           reduce using rule 84 (llamada -> STRING . EQUALSM LPAREN ID RPAREN .)
    FOR             reduce using rule 84 (llamada -> STRING . EQUALSM LPAREN ID RPAREN .)
    $end            reduce using rule 84 (llamada -> STRING . EQUALSM LPAREN ID RPAREN .)
    RCBRACKET       reduce using rule 84 (llamada -> STRING . EQUALSM LPAREN ID RPAREN .)
    RETURN          reduce using rule 84 (llamada -> STRING . EQUALSM LPAREN ID RPAREN .)
    RSBRACKET       reduce using rule 84 (llamada -> STRING . EQUALSM LPAREN ID RPAREN .)
    MINUS           reduce using rule 84 (llamada -> STRING . EQUALSM LPAREN ID RPAREN .)
    PLUS            reduce using rule 84 (llamada -> STRING . EQUALSM LPAREN ID RPAREN .)
    TIMES           reduce using rule 84 (llamada -> STRING . EQUALSM LPAREN ID RPAREN .)
    DIVIDE          reduce using rule 84 (llamada -> STRING . EQUALSM LPAREN ID RPAREN .)
    MODULE          reduce using rule 84 (llamada -> STRING . EQUALSM LPAREN ID RPAREN .)
    OR              reduce using rule 84 (llamada -> STRING . EQUALSM LPAREN ID RPAREN .)
    AND             reduce using rule 84 (llamada -> STRING . EQUALSM LPAREN ID RPAREN .)
    EQUALS          reduce using rule 84 (llamada -> STRING . EQUALSM LPAREN ID RPAREN .)
    NOTEQUALS       reduce using rule 84 (llamada -> STRING . EQUALSM LPAREN ID RPAREN .)
    GREATER         reduce using rule 84 (llamada -> STRING . EQUALSM LPAREN ID RPAREN .)
    LOWER           reduce using rule 84 (llamada -> STRING . EQUALSM LPAREN ID RPAREN .)
    GREATERE        reduce using rule 84 (llamada -> STRING . EQUALSM LPAREN ID RPAREN .)
    LOWERE          reduce using rule 84 (llamada -> STRING . EQUALSM LPAREN ID RPAREN .)
    RPAREN          reduce using rule 84 (llamada -> STRING . EQUALSM LPAREN ID RPAREN .)
    ,               reduce using rule 84 (llamada -> STRING . EQUALSM LPAREN ID RPAREN .)


state 176

    (22) for -> FOR LPAREN ID IN ID RPAREN .

    LCBRACKET       reduce using rule 22 (for -> FOR LPAREN ID IN ID RPAREN .)
    ID              reduce using rule 22 (for -> FOR LPAREN ID IN ID RPAREN .)
    IF              reduce using rule 22 (for -> FOR LPAREN ID IN ID RPAREN .)
    ELSE            reduce using rule 22 (for -> FOR LPAREN ID IN ID RPAREN .)
    PRINTLN         reduce using rule 22 (for -> FOR LPAREN ID IN ID RPAREN .)
    LISTOF          reduce using rule 22 (for -> FOR LPAREN ID IN ID RPAREN .)
    SETOF           reduce using rule 22 (for -> FOR LPAREN ID IN ID RPAREN .)
    MUTABLELISTOF   reduce using rule 22 (for -> FOR LPAREN ID IN ID RPAREN .)
    STRING          reduce using rule 22 (for -> FOR LPAREN ID IN ID RPAREN .)
    VAR             reduce using rule 22 (for -> FOR LPAREN ID IN ID RPAREN .)
    VAL             reduce using rule 22 (for -> FOR LPAREN ID IN ID RPAREN .)
    WHILE           reduce using rule 22 (for -> FOR LPAREN ID IN ID RPAREN .)
    FOR             reduce using rule 22 (for -> FOR LPAREN ID IN ID RPAREN .)


state 177

    (12) instruccionesF -> LCBRACKET cuerpo retorno . RCBRACKET

    RCBRACKET       shift and go to state 181


state 178

    (13) instruccionesF -> LCBRACKET retorno RCBRACKET .

    FUNCTION        reduce using rule 13 (instruccionesF -> LCBRACKET retorno RCBRACKET .)
    ID              reduce using rule 13 (instruccionesF -> LCBRACKET retorno RCBRACKET .)
    IF              reduce using rule 13 (instruccionesF -> LCBRACKET retorno RCBRACKET .)
    ELSE            reduce using rule 13 (instruccionesF -> LCBRACKET retorno RCBRACKET .)
    PRINTLN         reduce using rule 13 (instruccionesF -> LCBRACKET retorno RCBRACKET .)
    LISTOF          reduce using rule 13 (instruccionesF -> LCBRACKET retorno RCBRACKET .)
    SETOF           reduce using rule 13 (instruccionesF -> LCBRACKET retorno RCBRACKET .)
    MUTABLELISTOF   reduce using rule 13 (instruccionesF -> LCBRACKET retorno RCBRACKET .)
    STRING          reduce using rule 13 (instruccionesF -> LCBRACKET retorno RCBRACKET .)
    VAR             reduce using rule 13 (instruccionesF -> LCBRACKET retorno RCBRACKET .)
    VAL             reduce using rule 13 (instruccionesF -> LCBRACKET retorno RCBRACKET .)
    WHILE           reduce using rule 13 (instruccionesF -> LCBRACKET retorno RCBRACKET .)
    FOR             reduce using rule 13 (instruccionesF -> LCBRACKET retorno RCBRACKET .)
    $end            reduce using rule 13 (instruccionesF -> LCBRACKET retorno RCBRACKET .)
    RCBRACKET       reduce using rule 13 (instruccionesF -> LCBRACKET retorno RCBRACKET .)
    RETURN          reduce using rule 13 (instruccionesF -> LCBRACKET retorno RCBRACKET .)


state 179

    (16) retorno -> RETURN expresion .
    (64) expresion -> expresion . operadoresMat expresion
    (65) expresion -> expresion . operadoresLog expresion
    (74) operadoresMat -> . MINUS
    (75) operadoresMat -> . PLUS
    (76) operadoresMat -> . TIMES
    (77) operadoresMat -> . DIVIDE
    (78) operadoresMat -> . MODULE
    (66) operadoresLog -> . OR
    (67) operadoresLog -> . AND
    (68) operadoresLog -> . EQUALS
    (69) operadoresLog -> . NOTEQUALS
    (70) operadoresLog -> . GREATER
    (71) operadoresLog -> . LOWER
    (72) operadoresLog -> . GREATERE
    (73) operadoresLog -> . LOWERE

    RCBRACKET       reduce using rule 16 (retorno -> RETURN expresion .)
    MINUS           shift and go to state 89
    PLUS            shift and go to state 90
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 92
    MODULE          shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95
    EQUALS          shift and go to state 96
    NOTEQUALS       shift and go to state 97
    GREATER         shift and go to state 98
    LOWER           shift and go to state 99
    GREATERE        shift and go to state 100
    LOWERE          shift and go to state 101

    operadoresMat                  shift and go to state 87
    operadoresLog                  shift and go to state 88

state 180

    (14) instruccionesF -> : dato LCBRACKET . cuerpo retorno RCBRACKET
    (15) instruccionesF -> : dato LCBRACKET . retorno RCBRACKET
    (1) cuerpo -> . sentencia
    (2) cuerpo -> . function
    (3) cuerpo -> . sentencia cuerpo
    (4) cuerpo -> . function cuerpo
    (16) retorno -> . RETURN expresion
    (5) sentencia -> . asignacion
    (6) sentencia -> . estructuraControl
    (7) sentencia -> . bucles
    (8) sentencia -> . llamada
    (9) sentencia -> . declaracion
    (23) function -> . FUNCTION ID LPAREN params RPAREN instruccionesF
    (24) function -> . FUNCTION ID LPAREN RPAREN instruccionesF
    (30) function -> . ID LSBRACKET expresion RSBRACKET
    (55) asignacion -> . ID ASSIGN expresion
    (56) asignacion -> . declarador ID ASSIGN expresion
    (17) estructuraControl -> . IF LPAREN expresion RPAREN instrucciones
    (18) estructuraControl -> . ELSE instrucciones
    (19) bucles -> . while instrucciones
    (20) bucles -> . for instrucciones
    (25) llamada -> . PRINTLN LPAREN expresion RPAREN
    (26) llamada -> . ID LPAREN args RPAREN
    (27) llamada -> . ID LPAREN RPAREN
    (28) llamada -> . ID . ID LPAREN args RPAREN
    (29) llamada -> . ID . ID LPAREN RPAREN
    (58) llamada -> . LISTOF LPAREN args RPAREN
    (59) llamada -> . SETOF LPAREN args RPAREN
    (60) llamada -> . MUTABLELISTOF LPAREN args RPAREN
    (81) llamada -> . ID . LENGTH LPAREN RPAREN
    (82) llamada -> . STRING . LENGTH LPAREN RPAREN
    (83) llamada -> . ID . EQUALSM LPAREN ID RPAREN
    (84) llamada -> . STRING . EQUALSM LPAREN ID RPAREN
    (85) llamada -> . STRING . EQUALSM LPAREN STRING RPAREN
    (86) llamada -> . ID . EQUALSM LPAREN STRING RPAREN
    (87) llamada -> . ID . COUNT LPAREN RPAREN
    (88) llamada -> . ID . FIRST LPAREN RPAREN
    (89) llamada -> . ID . LAST LPAREN RPAREN
    (90) llamada -> . ID . GET LPAREN INTV RPAREN
    (91) llamada -> . ID . GET LPAREN ID RPAREN
    (57) declaracion -> . declarador ID
    (53) declarador -> . VAR
    (54) declarador -> . VAL
    (21) while -> . WHILE LPAREN expresion RPAREN
    (22) for -> . FOR LPAREN ID IN ID RPAREN

    RETURN          shift and go to state 167
    FUNCTION        shift and go to state 9
    ID              shift and go to state 10
    IF              shift and go to state 12
    ELSE            shift and go to state 13
    PRINTLN         shift and go to state 16
    LISTOF          shift and go to state 17
    SETOF           shift and go to state 18
    MUTABLELISTOF   shift and go to state 19
    STRING          shift and go to state 20
    VAR             shift and go to state 21
    VAL             shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24

    cuerpo                         shift and go to state 182
    retorno                        shift and go to state 183
    sentencia                      shift and go to state 2
    function                       shift and go to state 3
    asignacion                     shift and go to state 4
    estructuraControl              shift and go to state 5
    bucles                         shift and go to state 6
    llamada                        shift and go to state 7
    declaracion                    shift and go to state 8
    declarador                     shift and go to state 11
    while                          shift and go to state 14
    for                            shift and go to state 15

state 181

    (12) instruccionesF -> LCBRACKET cuerpo retorno RCBRACKET .

    FUNCTION        reduce using rule 12 (instruccionesF -> LCBRACKET cuerpo retorno RCBRACKET .)
    ID              reduce using rule 12 (instruccionesF -> LCBRACKET cuerpo retorno RCBRACKET .)
    IF              reduce using rule 12 (instruccionesF -> LCBRACKET cuerpo retorno RCBRACKET .)
    ELSE            reduce using rule 12 (instruccionesF -> LCBRACKET cuerpo retorno RCBRACKET .)
    PRINTLN         reduce using rule 12 (instruccionesF -> LCBRACKET cuerpo retorno RCBRACKET .)
    LISTOF          reduce using rule 12 (instruccionesF -> LCBRACKET cuerpo retorno RCBRACKET .)
    SETOF           reduce using rule 12 (instruccionesF -> LCBRACKET cuerpo retorno RCBRACKET .)
    MUTABLELISTOF   reduce using rule 12 (instruccionesF -> LCBRACKET cuerpo retorno RCBRACKET .)
    STRING          reduce using rule 12 (instruccionesF -> LCBRACKET cuerpo retorno RCBRACKET .)
    VAR             reduce using rule 12 (instruccionesF -> LCBRACKET cuerpo retorno RCBRACKET .)
    VAL             reduce using rule 12 (instruccionesF -> LCBRACKET cuerpo retorno RCBRACKET .)
    WHILE           reduce using rule 12 (instruccionesF -> LCBRACKET cuerpo retorno RCBRACKET .)
    FOR             reduce using rule 12 (instruccionesF -> LCBRACKET cuerpo retorno RCBRACKET .)
    $end            reduce using rule 12 (instruccionesF -> LCBRACKET cuerpo retorno RCBRACKET .)
    RCBRACKET       reduce using rule 12 (instruccionesF -> LCBRACKET cuerpo retorno RCBRACKET .)
    RETURN          reduce using rule 12 (instruccionesF -> LCBRACKET cuerpo retorno RCBRACKET .)


state 182

    (14) instruccionesF -> : dato LCBRACKET cuerpo . retorno RCBRACKET
    (16) retorno -> . RETURN expresion

    RETURN          shift and go to state 167

    retorno                        shift and go to state 184

state 183

    (15) instruccionesF -> : dato LCBRACKET retorno . RCBRACKET

    RCBRACKET       shift and go to state 185


state 184

    (14) instruccionesF -> : dato LCBRACKET cuerpo retorno . RCBRACKET

    RCBRACKET       shift and go to state 186


state 185

    (15) instruccionesF -> : dato LCBRACKET retorno RCBRACKET .

    FUNCTION        reduce using rule 15 (instruccionesF -> : dato LCBRACKET retorno RCBRACKET .)
    ID              reduce using rule 15 (instruccionesF -> : dato LCBRACKET retorno RCBRACKET .)
    IF              reduce using rule 15 (instruccionesF -> : dato LCBRACKET retorno RCBRACKET .)
    ELSE            reduce using rule 15 (instruccionesF -> : dato LCBRACKET retorno RCBRACKET .)
    PRINTLN         reduce using rule 15 (instruccionesF -> : dato LCBRACKET retorno RCBRACKET .)
    LISTOF          reduce using rule 15 (instruccionesF -> : dato LCBRACKET retorno RCBRACKET .)
    SETOF           reduce using rule 15 (instruccionesF -> : dato LCBRACKET retorno RCBRACKET .)
    MUTABLELISTOF   reduce using rule 15 (instruccionesF -> : dato LCBRACKET retorno RCBRACKET .)
    STRING          reduce using rule 15 (instruccionesF -> : dato LCBRACKET retorno RCBRACKET .)
    VAR             reduce using rule 15 (instruccionesF -> : dato LCBRACKET retorno RCBRACKET .)
    VAL             reduce using rule 15 (instruccionesF -> : dato LCBRACKET retorno RCBRACKET .)
    WHILE           reduce using rule 15 (instruccionesF -> : dato LCBRACKET retorno RCBRACKET .)
    FOR             reduce using rule 15 (instruccionesF -> : dato LCBRACKET retorno RCBRACKET .)
    $end            reduce using rule 15 (instruccionesF -> : dato LCBRACKET retorno RCBRACKET .)
    RCBRACKET       reduce using rule 15 (instruccionesF -> : dato LCBRACKET retorno RCBRACKET .)
    RETURN          reduce using rule 15 (instruccionesF -> : dato LCBRACKET retorno RCBRACKET .)


state 186

    (14) instruccionesF -> : dato LCBRACKET cuerpo retorno RCBRACKET .

    FUNCTION        reduce using rule 14 (instruccionesF -> : dato LCBRACKET cuerpo retorno RCBRACKET .)
    ID              reduce using rule 14 (instruccionesF -> : dato LCBRACKET cuerpo retorno RCBRACKET .)
    IF              reduce using rule 14 (instruccionesF -> : dato LCBRACKET cuerpo retorno RCBRACKET .)
    ELSE            reduce using rule 14 (instruccionesF -> : dato LCBRACKET cuerpo retorno RCBRACKET .)
    PRINTLN         reduce using rule 14 (instruccionesF -> : dato LCBRACKET cuerpo retorno RCBRACKET .)
    LISTOF          reduce using rule 14 (instruccionesF -> : dato LCBRACKET cuerpo retorno RCBRACKET .)
    SETOF           reduce using rule 14 (instruccionesF -> : dato LCBRACKET cuerpo retorno RCBRACKET .)
    MUTABLELISTOF   reduce using rule 14 (instruccionesF -> : dato LCBRACKET cuerpo retorno RCBRACKET .)
    STRING          reduce using rule 14 (instruccionesF -> : dato LCBRACKET cuerpo retorno RCBRACKET .)
    VAR             reduce using rule 14 (instruccionesF -> : dato LCBRACKET cuerpo retorno RCBRACKET .)
    VAL             reduce using rule 14 (instruccionesF -> : dato LCBRACKET cuerpo retorno RCBRACKET .)
    WHILE           reduce using rule 14 (instruccionesF -> : dato LCBRACKET cuerpo retorno RCBRACKET .)
    FOR             reduce using rule 14 (instruccionesF -> : dato LCBRACKET cuerpo retorno RCBRACKET .)
    $end            reduce using rule 14 (instruccionesF -> : dato LCBRACKET cuerpo retorno RCBRACKET .)
    RCBRACKET       reduce using rule 14 (instruccionesF -> : dato LCBRACKET cuerpo retorno RCBRACKET .)
    RETURN          reduce using rule 14 (instruccionesF -> : dato LCBRACKET cuerpo retorno RCBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MINUS in state 132 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 132 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 132 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 132 resolved as shift
WARNING: shift/reduce conflict for MODULE in state 132 resolved as shift
WARNING: shift/reduce conflict for OR in state 132 resolved as shift
WARNING: shift/reduce conflict for AND in state 132 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 132 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 132 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 132 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 132 resolved as shift
WARNING: shift/reduce conflict for GREATERE in state 132 resolved as shift
WARNING: shift/reduce conflict for LOWERE in state 132 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 133 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 133 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 133 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 133 resolved as shift
WARNING: shift/reduce conflict for MODULE in state 133 resolved as shift
WARNING: shift/reduce conflict for OR in state 133 resolved as shift
WARNING: shift/reduce conflict for AND in state 133 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 133 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 133 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 133 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 133 resolved as shift
WARNING: shift/reduce conflict for GREATERE in state 133 resolved as shift
WARNING: shift/reduce conflict for LOWERE in state 133 resolved as shift
WARNING: shift/reduce conflict for , in state 135 resolved as shift
WARNING: shift/reduce conflict for , in state 164 resolved as shift
