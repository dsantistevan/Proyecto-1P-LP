Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    FALSE
    FLOATV
    IN
    INTV
    LPAREN
    RPAREN
    TRUE

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> sentencia ;
Rule 2     sentencia -> asignacion
Rule 3     sentencia -> modificacion
Rule 4     sentencia -> retorno
Rule 5     sentencia -> eliminacion
Rule 6     asignacion -> ID ASSIGN LCBRACKET objeto RCBRACKET
Rule 7     asignacion -> ID index ASSIGN dato
Rule 8     modificacion -> ID . ID ASSIGN dato
Rule 9     retorno -> ID . ID
Rule 10    eliminacion -> DELETE ID . ID
Rule 11    objeto -> ID : dato
Rule 12    index -> ID LSBRACKET dato RSBRACKET
Rule 13    dato -> INT
Rule 14    dato -> FLOAT
Rule 15    dato -> BYTE
Rule 16    dato -> SHORT
Rule 17    dato -> DOUBLE
Rule 18    dato -> ID
Rule 19    dato -> LONG
Rule 20    dato -> CHAR
Rule 21    dato -> BOOLEAN
Rule 22    dato -> STRING

Terminals, with rules where they appear

.                    : 8 9 10
:                    : 11
;                    : 1
ASSIGN               : 6 7 8
BOOLEAN              : 21
BYTE                 : 15
CHAR                 : 20
DELETE               : 10
DOUBLE               : 17
FALSE                : 
FLOAT                : 14
FLOATV               : 
ID                   : 6 7 8 8 9 9 10 10 11 12 18
IN                   : 
INT                  : 13
INTV                 : 
LCBRACKET            : 6
LONG                 : 19
LPAREN               : 
LSBRACKET            : 12
RCBRACKET            : 6
RPAREN               : 
RSBRACKET            : 12
SHORT                : 16
STRING               : 22
TRUE                 : 
error                : 

Nonterminals, with rules where they appear

asignacion           : 2
cuerpo               : 0
dato                 : 7 8 11 12
eliminacion          : 5
index                : 7
modificacion         : 3
objeto               : 6
retorno              : 4
sentencia            : 1

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . sentencia ;
    (2) sentencia -> . asignacion
    (3) sentencia -> . modificacion
    (4) sentencia -> . retorno
    (5) sentencia -> . eliminacion
    (6) asignacion -> . ID ASSIGN LCBRACKET objeto RCBRACKET
    (7) asignacion -> . ID index ASSIGN dato
    (8) modificacion -> . ID . ID ASSIGN dato
    (9) retorno -> . ID . ID
    (10) eliminacion -> . DELETE ID . ID

    ID              shift and go to state 7
    DELETE          shift and go to state 8

    cuerpo                         shift and go to state 1
    sentencia                      shift and go to state 2
    asignacion                     shift and go to state 3
    modificacion                   shift and go to state 4
    retorno                        shift and go to state 5
    eliminacion                    shift and go to state 6

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> sentencia . ;

    ;               shift and go to state 9


state 3

    (2) sentencia -> asignacion .

    ;               reduce using rule 2 (sentencia -> asignacion .)


state 4

    (3) sentencia -> modificacion .

    ;               reduce using rule 3 (sentencia -> modificacion .)


state 5

    (4) sentencia -> retorno .

    ;               reduce using rule 4 (sentencia -> retorno .)


state 6

    (5) sentencia -> eliminacion .

    ;               reduce using rule 5 (sentencia -> eliminacion .)


state 7

    (6) asignacion -> ID . ASSIGN LCBRACKET objeto RCBRACKET
    (7) asignacion -> ID . index ASSIGN dato
    (8) modificacion -> ID . . ID ASSIGN dato
    (9) retorno -> ID . . ID
    (12) index -> . ID LSBRACKET dato RSBRACKET

    ASSIGN          shift and go to state 11
    .               shift and go to state 13
    ID              shift and go to state 10

    index                          shift and go to state 12

state 8

    (10) eliminacion -> DELETE . ID . ID

    ID              shift and go to state 14


state 9

    (1) cuerpo -> sentencia ; .

    $end            reduce using rule 1 (cuerpo -> sentencia ; .)


state 10

    (12) index -> ID . LSBRACKET dato RSBRACKET

    LSBRACKET       shift and go to state 15


state 11

    (6) asignacion -> ID ASSIGN . LCBRACKET objeto RCBRACKET

    LCBRACKET       shift and go to state 16


state 12

    (7) asignacion -> ID index . ASSIGN dato

    ASSIGN          shift and go to state 17


state 13

    (8) modificacion -> ID . . ID ASSIGN dato
    (9) retorno -> ID . . ID

    ID              shift and go to state 18


state 14

    (10) eliminacion -> DELETE ID . . ID

    .               shift and go to state 19


state 15

    (12) index -> ID LSBRACKET . dato RSBRACKET
    (13) dato -> . INT
    (14) dato -> . FLOAT
    (15) dato -> . BYTE
    (16) dato -> . SHORT
    (17) dato -> . DOUBLE
    (18) dato -> . ID
    (19) dato -> . LONG
    (20) dato -> . CHAR
    (21) dato -> . BOOLEAN
    (22) dato -> . STRING

    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    BYTE            shift and go to state 24
    SHORT           shift and go to state 25
    DOUBLE          shift and go to state 26
    ID              shift and go to state 20
    LONG            shift and go to state 27
    CHAR            shift and go to state 28
    BOOLEAN         shift and go to state 29
    STRING          shift and go to state 30

    dato                           shift and go to state 21

state 16

    (6) asignacion -> ID ASSIGN LCBRACKET . objeto RCBRACKET
    (11) objeto -> . ID : dato

    ID              shift and go to state 31

    objeto                         shift and go to state 32

state 17

    (7) asignacion -> ID index ASSIGN . dato
    (13) dato -> . INT
    (14) dato -> . FLOAT
    (15) dato -> . BYTE
    (16) dato -> . SHORT
    (17) dato -> . DOUBLE
    (18) dato -> . ID
    (19) dato -> . LONG
    (20) dato -> . CHAR
    (21) dato -> . BOOLEAN
    (22) dato -> . STRING

    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    BYTE            shift and go to state 24
    SHORT           shift and go to state 25
    DOUBLE          shift and go to state 26
    ID              shift and go to state 20
    LONG            shift and go to state 27
    CHAR            shift and go to state 28
    BOOLEAN         shift and go to state 29
    STRING          shift and go to state 30

    dato                           shift and go to state 33

state 18

    (8) modificacion -> ID . ID . ASSIGN dato
    (9) retorno -> ID . ID .

    ASSIGN          shift and go to state 34
    ;               reduce using rule 9 (retorno -> ID . ID .)


state 19

    (10) eliminacion -> DELETE ID . . ID

    ID              shift and go to state 35


state 20

    (18) dato -> ID .

    RSBRACKET       reduce using rule 18 (dato -> ID .)
    ;               reduce using rule 18 (dato -> ID .)
    RCBRACKET       reduce using rule 18 (dato -> ID .)


state 21

    (12) index -> ID LSBRACKET dato . RSBRACKET

    RSBRACKET       shift and go to state 36


state 22

    (13) dato -> INT .

    RSBRACKET       reduce using rule 13 (dato -> INT .)
    ;               reduce using rule 13 (dato -> INT .)
    RCBRACKET       reduce using rule 13 (dato -> INT .)


state 23

    (14) dato -> FLOAT .

    RSBRACKET       reduce using rule 14 (dato -> FLOAT .)
    ;               reduce using rule 14 (dato -> FLOAT .)
    RCBRACKET       reduce using rule 14 (dato -> FLOAT .)


state 24

    (15) dato -> BYTE .

    RSBRACKET       reduce using rule 15 (dato -> BYTE .)
    ;               reduce using rule 15 (dato -> BYTE .)
    RCBRACKET       reduce using rule 15 (dato -> BYTE .)


state 25

    (16) dato -> SHORT .

    RSBRACKET       reduce using rule 16 (dato -> SHORT .)
    ;               reduce using rule 16 (dato -> SHORT .)
    RCBRACKET       reduce using rule 16 (dato -> SHORT .)


state 26

    (17) dato -> DOUBLE .

    RSBRACKET       reduce using rule 17 (dato -> DOUBLE .)
    ;               reduce using rule 17 (dato -> DOUBLE .)
    RCBRACKET       reduce using rule 17 (dato -> DOUBLE .)


state 27

    (19) dato -> LONG .

    RSBRACKET       reduce using rule 19 (dato -> LONG .)
    ;               reduce using rule 19 (dato -> LONG .)
    RCBRACKET       reduce using rule 19 (dato -> LONG .)


state 28

    (20) dato -> CHAR .

    RSBRACKET       reduce using rule 20 (dato -> CHAR .)
    ;               reduce using rule 20 (dato -> CHAR .)
    RCBRACKET       reduce using rule 20 (dato -> CHAR .)


state 29

    (21) dato -> BOOLEAN .

    RSBRACKET       reduce using rule 21 (dato -> BOOLEAN .)
    ;               reduce using rule 21 (dato -> BOOLEAN .)
    RCBRACKET       reduce using rule 21 (dato -> BOOLEAN .)


state 30

    (22) dato -> STRING .

    RSBRACKET       reduce using rule 22 (dato -> STRING .)
    ;               reduce using rule 22 (dato -> STRING .)
    RCBRACKET       reduce using rule 22 (dato -> STRING .)


state 31

    (11) objeto -> ID . : dato

    :               shift and go to state 37


state 32

    (6) asignacion -> ID ASSIGN LCBRACKET objeto . RCBRACKET

    RCBRACKET       shift and go to state 38


state 33

    (7) asignacion -> ID index ASSIGN dato .

    ;               reduce using rule 7 (asignacion -> ID index ASSIGN dato .)


state 34

    (8) modificacion -> ID . ID ASSIGN . dato
    (13) dato -> . INT
    (14) dato -> . FLOAT
    (15) dato -> . BYTE
    (16) dato -> . SHORT
    (17) dato -> . DOUBLE
    (18) dato -> . ID
    (19) dato -> . LONG
    (20) dato -> . CHAR
    (21) dato -> . BOOLEAN
    (22) dato -> . STRING

    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    BYTE            shift and go to state 24
    SHORT           shift and go to state 25
    DOUBLE          shift and go to state 26
    ID              shift and go to state 20
    LONG            shift and go to state 27
    CHAR            shift and go to state 28
    BOOLEAN         shift and go to state 29
    STRING          shift and go to state 30

    dato                           shift and go to state 39

state 35

    (10) eliminacion -> DELETE ID . ID .

    ;               reduce using rule 10 (eliminacion -> DELETE ID . ID .)


state 36

    (12) index -> ID LSBRACKET dato RSBRACKET .

    ASSIGN          reduce using rule 12 (index -> ID LSBRACKET dato RSBRACKET .)


state 37

    (11) objeto -> ID : . dato
    (13) dato -> . INT
    (14) dato -> . FLOAT
    (15) dato -> . BYTE
    (16) dato -> . SHORT
    (17) dato -> . DOUBLE
    (18) dato -> . ID
    (19) dato -> . LONG
    (20) dato -> . CHAR
    (21) dato -> . BOOLEAN
    (22) dato -> . STRING

    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    BYTE            shift and go to state 24
    SHORT           shift and go to state 25
    DOUBLE          shift and go to state 26
    ID              shift and go to state 20
    LONG            shift and go to state 27
    CHAR            shift and go to state 28
    BOOLEAN         shift and go to state 29
    STRING          shift and go to state 30

    dato                           shift and go to state 40

state 38

    (6) asignacion -> ID ASSIGN LCBRACKET objeto RCBRACKET .

    ;               reduce using rule 6 (asignacion -> ID ASSIGN LCBRACKET objeto RCBRACKET .)


state 39

    (8) modificacion -> ID . ID ASSIGN dato .

    ;               reduce using rule 8 (modificacion -> ID . ID ASSIGN dato .)


state 40

    (11) objeto -> ID : dato .

    RCBRACKET       reduce using rule 11 (objeto -> ID : dato .)

